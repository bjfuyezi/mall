{"ast":null,"code":"import { ref, onMounted } from 'vue';\nimport { useStore } from 'vuex';\nimport { ElMessage } from 'element-plus';\nexport default {\n  name: 'UserProfile',\n  setup() {\n    const store = useStore();\n    const userForm = ref({\n      username: '',\n      email: '',\n      password: ''\n    });\n    const isEditing = ref(false);\n    const originalForm = ref(null);\n    const loadUserProfile = async () => {\n      try {\n        const username = store.state.user.username;\n        const response = await fetch(`http://localhost:8081/users/detail/${username}`);\n        const data = await response.json();\n        if (data.status === 'success') {\n          userForm.value = {\n            ...data.data,\n            password: ''\n          };\n          originalForm.value = {\n            ...data.data\n          };\n        }\n      } catch (error) {\n        ElMessage.error('获取用户信息失败');\n      }\n    };\n    const startEdit = () => {\n      isEditing.value = true;\n      originalForm.value = {\n        ...userForm.value\n      };\n    };\n    const cancelEdit = () => {\n      isEditing.value = false;\n      userForm.value = {\n        ...originalForm.value,\n        password: ''\n      };\n    };\n    const saveProfile = async () => {\n      try {\n        const response = await fetch('http://localhost:8081/users/profile/update', {\n          method: 'PUT',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(userForm.value)\n        });\n        const data = await response.json();\n        if (data.status === 'success') {\n          ElMessage.success('保存成功');\n          isEditing.value = false;\n          loadUserProfile();\n        } else {\n          ElMessage.error(data.message || '保存失败');\n        }\n      } catch (error) {\n        ElMessage.error('保存失败');\n      }\n    };\n    onMounted(() => {\n      loadUserProfile();\n    });\n    return {\n      userForm,\n      isEditing,\n      startEdit,\n      cancelEdit,\n      saveProfile\n    };\n  }\n};","map":{"version":3,"names":["ref","onMounted","useStore","ElMessage","name","setup","store","userForm","username","email","password","isEditing","originalForm","loadUserProfile","state","user","response","fetch","data","json","status","value","error","startEdit","cancelEdit","saveProfile","method","headers","body","JSON","stringify","success","message"],"sources":["src/views/UserProfile.vue"],"sourcesContent":["<template>\r\n  <div class=\"user-profile\">\r\n    <el-card class=\"profile-card\">\r\n      <template #header>\r\n        <div class=\"card-header\">\r\n          <span>个人资料</span>\r\n          <el-button type=\"text\" @click=\"startEdit\" v-if=\"!isEditing\">编辑</el-button>\r\n        </div>\r\n      </template>\r\n      \r\n      <el-form :model=\"userForm\" :disabled=\"!isEditing\" label-width=\"100px\">\r\n        <el-form-item label=\"用户名\">\r\n          <el-input v-model=\"userForm.username\" disabled></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"邮箱\">\r\n          <el-input v-model=\"userForm.email\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"密码\" v-if=\"isEditing\">\r\n          <el-input v-model=\"userForm.password\" type=\"password\" placeholder=\"留空表示不修改\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item v-if=\"isEditing\">\r\n          <el-button type=\"primary\" @click=\"saveProfile\">保存</el-button>\r\n          <el-button @click=\"cancelEdit\">取消</el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, onMounted } from 'vue'\r\nimport { useStore } from 'vuex'\r\nimport { ElMessage } from 'element-plus'\r\n\r\nexport default {\r\n  name: 'UserProfile',\r\n  setup() {\r\n    const store = useStore()\r\n    const userForm = ref({\r\n      username: '',\r\n      email: '',\r\n      password: ''\r\n    })\r\n    const isEditing = ref(false)\r\n    const originalForm = ref(null)\r\n\r\n    const loadUserProfile = async () => {\r\n      try {\r\n        const username = store.state.user.username\r\n        const response = await fetch(`http://localhost:8081/users/detail/${username}`)\r\n        const data = await response.json()\r\n        if (data.status === 'success') {\r\n          userForm.value = { ...data.data, password: '' }\r\n          originalForm.value = { ...data.data }\r\n        }\r\n      } catch (error) {\r\n        ElMessage.error('获取用户信息失败')\r\n      }\r\n    }\r\n\r\n    const startEdit = () => {\r\n      isEditing.value = true\r\n      originalForm.value = { ...userForm.value }\r\n    }\r\n\r\n    const cancelEdit = () => {\r\n      isEditing.value = false\r\n      userForm.value = { ...originalForm.value, password: '' }\r\n    }\r\n\r\n    const saveProfile = async () => {\r\n      try {\r\n        const response = await fetch('http://localhost:8081/users/profile/update', {\r\n          method: 'PUT',\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify(userForm.value)\r\n        })\r\n        const data = await response.json()\r\n        if (data.status === 'success') {\r\n          ElMessage.success('保存成功')\r\n          isEditing.value = false\r\n          loadUserProfile()\r\n        } else {\r\n          ElMessage.error(data.message || '保存失败')\r\n        }\r\n      } catch (error) {\r\n        ElMessage.error('保存失败')\r\n      }\r\n    }\r\n\r\n    onMounted(() => {\r\n      loadUserProfile()\r\n    })\r\n\r\n    return {\r\n      userForm,\r\n      isEditing,\r\n      startEdit,\r\n      cancelEdit,\r\n      saveProfile\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.user-profile {\r\n  padding: 20px;\r\n}\r\n\r\n.profile-card {\r\n  max-width: 600px;\r\n  margin: 0 auto;\r\n}\r\n\r\n.card-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n</style> "],"mappings":"AA8BA,SAAAA,GAAA,EAAAC,SAAA;AACA,SAAAC,QAAA;AACA,SAAAC,SAAA;AAEA;EACAC,IAAA;EACAC,MAAA;IACA,MAAAC,KAAA,GAAAJ,QAAA;IACA,MAAAK,QAAA,GAAAP,GAAA;MACAQ,QAAA;MACAC,KAAA;MACAC,QAAA;IACA;IACA,MAAAC,SAAA,GAAAX,GAAA;IACA,MAAAY,YAAA,GAAAZ,GAAA;IAEA,MAAAa,eAAA,SAAAA,CAAA;MACA;QACA,MAAAL,QAAA,GAAAF,KAAA,CAAAQ,KAAA,CAAAC,IAAA,CAAAP,QAAA;QACA,MAAAQ,QAAA,SAAAC,KAAA,uCAAAT,QAAA;QACA,MAAAU,IAAA,SAAAF,QAAA,CAAAG,IAAA;QACA,IAAAD,IAAA,CAAAE,MAAA;UACAb,QAAA,CAAAc,KAAA;YAAA,GAAAH,IAAA,CAAAA,IAAA;YAAAR,QAAA;UAAA;UACAE,YAAA,CAAAS,KAAA;YAAA,GAAAH,IAAA,CAAAA;UAAA;QACA;MACA,SAAAI,KAAA;QACAnB,SAAA,CAAAmB,KAAA;MACA;IACA;IAEA,MAAAC,SAAA,GAAAA,CAAA;MACAZ,SAAA,CAAAU,KAAA;MACAT,YAAA,CAAAS,KAAA;QAAA,GAAAd,QAAA,CAAAc;MAAA;IACA;IAEA,MAAAG,UAAA,GAAAA,CAAA;MACAb,SAAA,CAAAU,KAAA;MACAd,QAAA,CAAAc,KAAA;QAAA,GAAAT,YAAA,CAAAS,KAAA;QAAAX,QAAA;MAAA;IACA;IAEA,MAAAe,WAAA,SAAAA,CAAA;MACA;QACA,MAAAT,QAAA,SAAAC,KAAA;UACAS,MAAA;UACAC,OAAA;YACA;UACA;UACAC,IAAA,EAAAC,IAAA,CAAAC,SAAA,CAAAvB,QAAA,CAAAc,KAAA;QACA;QACA,MAAAH,IAAA,SAAAF,QAAA,CAAAG,IAAA;QACA,IAAAD,IAAA,CAAAE,MAAA;UACAjB,SAAA,CAAA4B,OAAA;UACApB,SAAA,CAAAU,KAAA;UACAR,eAAA;QACA;UACAV,SAAA,CAAAmB,KAAA,CAAAJ,IAAA,CAAAc,OAAA;QACA;MACA,SAAAV,KAAA;QACAnB,SAAA,CAAAmB,KAAA;MACA;IACA;IAEArB,SAAA;MACAY,eAAA;IACA;IAEA;MACAN,QAAA;MACAI,SAAA;MACAY,SAAA;MACAC,UAAA;MACAC;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}