{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.reduce.js\";\nimport UserAddress from '@/views/UserAddress.vue';\nexport default {\n  name: 'OrderConfirmView',\n  components: {\n    UserAddress\n  },\n  data() {\n    // 打印接收到的参数\n    console.log('路由参数:', this.$route.query);\n    return {\n      orderProducts: [{\n        id: this.$route.query.productid || null,\n        name: '示例商品',\n        price: Number(this.$route.query.price) || 0,\n        quantity: 1,\n        stock: 10,\n        image: this.$route.query.image ? 'http://localhost:8081' + this.$route.query.image : ''\n      }],\n      remark: '',\n      userid: this.$store.getters.userId,\n      productid: this.$route.query.productid || null,\n      addressid: 1,\n      status: '待支付',\n      shopid: this.$route.query.shopid || null,\n      selectedAddress: null,\n      showAddressDialog: false,\n      addressList: [\n        /*{\r\n          id: 1,\r\n          name: '张三',\r\n          phone: '13800138000',\r\n          address: '北京市朝阳区xxx街道xxx号'\r\n        }*/\n      ],\n      discount: 0,\n      promotion: 0\n    };\n  },\n  computed: {\n    totalPrice() {\n      return this.orderProducts.reduce((total, product) => {\n        return total + product.price * product.quantity;\n      }, 0);\n    },\n    finalPrice() {\n      return this.totalPrice - this.discount - this.promotion;\n    }\n  },\n  methods: {\n    calculateTotal() {\n      // 重新计算总价\n    },\n    removeProduct(index) {\n      this.orderProducts.splice(index, 1);\n    },\n    selectAddress(address) {\n      this.selectedAddress = address;\n      this.showAddressDialog = false;\n    },\n    addNewAddress() {\n      this.showAddressDialog = true;\n    },\n    editAddress() {\n      // 实现编辑地址\n    },\n    deleteAddress() {\n      // 实现删除地址\n    },\n    async submitOrder() {\n      if (!this.selectedAddress) {\n        this.$message.warning('请选择收货地址');\n        return;\n      }\n      try {\n        const now = new Date();\n        const or_bianhao = parseInt(now.getFullYear().toString().slice(-2) +\n        // 年份后两位\n        ('0' + (now.getMonth() + 1)).slice(-2) +\n        // 月份（补零）\n        ('0' + now.getDate()).slice(-2) +\n        // 日期（补零）\n        ('0' + now.getHours()).slice(-2) +\n        // 小时（补零）\n        ('0' + now.getMinutes()).slice(-2) +\n        // 分钟（补零）\n        ('0' + now.getSeconds()).slice(-2) +\n        // 秒数（补零）\n        ('00' + now.getMilliseconds()).slice(-3) // 毫秒（补零）\n        );\n        const orderData = {\n          order_id: this.orderid,\n          // 订单号\n          user_id: this.userid,\n          product_id: this.productid,\n          address_id: this.addressid,\n          status: this.status,\n          quantity: this.orderProducts[0].quantity,\n          shop_id: this.shopid,\n          price: this.finalPrice\n        };\n        /*products: this.orderProducts.map(item => ({\r\n          productId: item.id,\r\n          quantity: item.quantity,\r\n          price: item.price\r\n        })),\r\n        address: {                  // 收货地址信息\r\n          name: this.selectedAddress.name,\r\n          phone: this.selectedAddress.phone,\r\n          address: this.selectedAddress.address\r\n        },\r\n        price: this.totalPrice,     // 商品总价\r\n        discount: this.discount,          // 优惠金额\r\n        promotion: this.promotion,        // 促销金额\r\n        finalPrice: this.finalPrice,      // 最终支付金额\r\n        remark: this.remark,             // 订单备注*/\n\n        // 发送订单数据到后端\n        const response = await this.$axios.post('http://localhost:8081/order/create', orderData);\n        if (response.status === 201) {\n          this.$message.success('订单提交成功');\n          this.$router.push({\n            name: 'order-success',\n            query: {\n              or_bianhao\n            }\n          });\n        } else {\n          throw new Error(response.data.message || '订单提交失败');\n        }\n      } catch (error) {\n        this.$message.error(error.message || '订单提交失败，请重试');\n        console.error('提交订单失败:', error);\n      }\n    },\n    // 处理地址选择\n    handleAddressSelected(address) {\n      this.selectedAddress = address;\n      this.addressid = address.id;\n      this.showAddressDialog = false;\n      this.$message.success('已选择收货地址');\n    },\n    // 处理地址更新\n    handleAddressUpdated() {\n      this.loadAddresses(); // 重新加载地址列表\n    }\n  },\n  async created() {}\n};","map":{"version":3,"names":["UserAddress","name","components","data","console","log","$route","query","orderProducts","id","productid","price","Number","quantity","stock","image","remark","userid","$store","getters","userId","addressid","status","shopid","selectedAddress","showAddressDialog","addressList","discount","promotion","computed","totalPrice","reduce","total","product","finalPrice","methods","calculateTotal","removeProduct","index","splice","selectAddress","address","addNewAddress","editAddress","deleteAddress","submitOrder","$message","warning","now","Date","or_bianhao","parseInt","getFullYear","toString","slice","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","orderData","order_id","orderid","user_id","product_id","address_id","shop_id","response","$axios","post","success","$router","push","Error","message","error","handleAddressSelected","handleAddressUpdated","loadAddresses","created"],"sources":["src/views/OrderConfirmView.vue"],"sourcesContent":["<template>\r\n  <div class=\"order-confirm-page\">\r\n    <div class=\"order-container\">\r\n      <!-- 左侧区域 -->\r\n      <div class=\"order-left\">\r\n        <!-- 订单明细 -->\r\n        <div class=\"order-detail\">\r\n          <h2>订单明细</h2>\r\n          <div class=\"product-list\">\r\n            <el-table :data=\"orderProducts\" style=\"width: 100%\">\r\n              <el-table-column label=\"商品名称\">\r\n                <template slot-scope=\"scope\">\r\n                  <div class=\"product-info\">\r\n                    <img :src=\"scope.row.image\" :alt=\"scope.row.name\">\r\n                    <span>{{ scope.row.name }}</span>\r\n                  </div>\r\n                </template>\r\n              </el-table-column>\r\n              <el-table-column label=\"价格\" width=\"120\">\r\n                <template slot-scope=\"scope\">\r\n                  <span class=\"price\">¥{{ scope.row.price.toFixed(2) }}</span>\r\n                </template>\r\n              </el-table-column>\r\n              <el-table-column label=\"数量\" width=\"150\">\r\n                <template slot-scope=\"scope\">\r\n                  <el-input-number \r\n                    v-model=\"scope.row.quantity\" \r\n                    :min=\"1\"\r\n                    :max=\"scope.row.stock\"\r\n                    @change=\"calculateTotal\"\r\n                  ></el-input-number>\r\n                </template>\r\n              </el-table-column>\r\n              <el-table-column label=\"操作\" width=\"80\">\r\n                <template slot-scope=\"scope\">\r\n                  <el-button \r\n                    type=\"text\" \r\n                    @click=\"removeProduct(scope.$index)\"\r\n                  >\r\n                    <i class=\"el-icon-delete\"></i>\r\n                  </el-button>\r\n                </template>\r\n              </el-table-column>\r\n            </el-table>\r\n          </div>\r\n\r\n          <!-- 备注信息 -->\r\n          <div class=\"order-remark\">\r\n            <h3>备注</h3>\r\n            <el-input\r\n              type=\"textarea\"\r\n              v-model=\"remark\"\r\n              :maxlength=\"100\"\r\n              show-word-limit\r\n              placeholder=\"输入备注信息，100字以内\"\r\n              rows=\"3\"\r\n            ></el-input>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- 右侧区域 -->\r\n      <div class=\"order-right\">\r\n        <!-- 收货信息 -->\r\n        <div class=\"delivery-info\">\r\n          <h3>收货信息</h3>\r\n          <div v-if=\"selectedAddress\" class=\"address-info\">\r\n            <div class=\"address-detail\">\r\n              <p>\r\n                <span class=\"label\">收货人：</span>\r\n                {{ selectedAddress.name }}\r\n              </p>\r\n              <p>\r\n                <span class=\"label\">联系电话：</span>\r\n                {{ selectedAddress.phone }}\r\n              </p>\r\n              <p>\r\n                <span class=\"label\">收货地址：</span>\r\n                {{ selectedAddress.address }}\r\n              </p>\r\n            </div>\r\n            <el-button type=\"text\" @click=\"showAddressDialog = true\">\r\n              更换地址\r\n            </el-button>\r\n          </div>\r\n          <div v-else class=\"no-address\">\r\n            <p>当前无地址信息</p>\r\n            <el-button type=\"text\" @click=\"showAddressDialog = true\">\r\n              请新建地址\r\n            </el-button>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- 结算信息 -->\r\n        <div class=\"order-summary\">\r\n          <div class=\"summary-item\">\r\n            <span>商品总价</span>\r\n            <span class=\"price\">¥{{ totalPrice.toFixed(2) }}</span>\r\n          </div>\r\n          <div class=\"summary-item\">\r\n            <span>商品优惠</span>\r\n            <span class=\"discount\">-¥{{ discount.toFixed(2) }}</span>\r\n          </div>\r\n          <div class=\"summary-item\">\r\n            <span>商品折扣</span>\r\n            <span class=\"discount\">-¥{{ promotion.toFixed(2) }}</span>\r\n          </div>\r\n          <div class=\"summary-item total\">\r\n            <span>合计</span>\r\n            <span class=\"price\">¥{{ finalPrice.toFixed(2) }}</span>\r\n          </div>\r\n          <div class=\"action-buttons\">\r\n            <el-button @click=\"$router.back()\">返回</el-button>\r\n            <el-button \r\n              type=\"primary\" \r\n              :disabled=\"!selectedAddress\"\r\n              @click=\"submitOrder\"\r\n            >\r\n              提交订单\r\n            </el-button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- 地址选择对话框 -->\r\n    <el-dialog\r\n      title=\"选择收货地址\"\r\n      :visible.sync=\"showAddressDialog\"\r\n      width=\"50%\"\r\n    >\r\n      <!-- 引入 UserAddress 组件 -->\r\n      <user-address \r\n        v-if=\"showAddressDialog\"\r\n        @address-selected=\"handleAddressSelected\"\r\n        @address-updated=\"handleAddressUpdated\"\r\n        :is-dialog=\"true\"\r\n      ></user-address>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport UserAddress from '@/views/UserAddress.vue'\r\n\r\nexport default {\r\n  name: 'OrderConfirmView',\r\n  components: {\r\n    UserAddress\r\n  },\r\n  data() {\r\n    // 打印接收到的参数\r\n    console.log('路由参数:', this.$route.query);\r\n    \r\n    return {\r\n      orderProducts: [\r\n        {\r\n          id: this.$route.query.productid || null,\r\n          name: '示例商品',\r\n          price: Number(this.$route.query.price) || 0,\r\n          quantity: 1,\r\n          stock: 10,\r\n          image: this.$route.query.image ? 'http://localhost:8081' + this.$route.query.image : ''\r\n        }\r\n      ],\r\n      remark: '',\r\n      userid: this.$store.getters.userId,\r\n      productid: this.$route.query.productid || null,\r\n      addressid: 1,\r\n      status: '待支付',\r\n      shopid: this.$route.query.shopid || null,\r\n      selectedAddress: null,\r\n      showAddressDialog: false,\r\n      addressList: [\r\n        /*{\r\n          id: 1,\r\n          name: '张三',\r\n          phone: '13800138000',\r\n          address: '北京市朝阳区xxx街道xxx号'\r\n        }*/\r\n      ],\r\n      discount: 0,\r\n      promotion: 0\r\n    }\r\n  },\r\n  computed: {\r\n    totalPrice() {\r\n      return this.orderProducts.reduce((total, product) => {\r\n        return total + product.price * product.quantity\r\n      }, 0)\r\n    },\r\n    finalPrice() {\r\n      return this.totalPrice - this.discount - this.promotion\r\n    },\r\n  },\r\n  methods: {\r\n    calculateTotal() {\r\n      // 重新计算总价\r\n    },\r\n    removeProduct(index) {\r\n      this.orderProducts.splice(index, 1)\r\n    },\r\n    selectAddress(address) {\r\n      this.selectedAddress = address\r\n      this.showAddressDialog = false\r\n    },\r\n    addNewAddress() {\r\n      this.showAddressDialog = true;\r\n    },\r\n    editAddress() {\r\n      // 实现编辑地址\r\n    },\r\n    deleteAddress() {\r\n      // 实现删除地址\r\n    },\r\n    \r\n    async submitOrder() {\r\n      if (!this.selectedAddress) {\r\n        this.$message.warning('请选择收货地址')\r\n        return\r\n      }\r\n      \r\n      try {\r\n        const now = new Date()\r\n        const or_bianhao = parseInt(\r\n    now.getFullYear().toString().slice(-2) +    // 年份后两位\r\n    ('0' + (now.getMonth() + 1)).slice(-2) +    // 月份（补零）\r\n    ('0' + now.getDate()).slice(-2) +           // 日期（补零）\r\n    ('0' + now.getHours()).slice(-2) +          // 小时（补零）\r\n    ('0' + now.getMinutes()).slice(-2) +        // 分钟（补零）\r\n    ('0' + now.getSeconds()).slice(-2) +        // 秒数（补零）\r\n    ('00' + now.getMilliseconds()).slice(-3)    // 毫秒（补零）\r\n  )\r\n  \r\n  const orderData = {\r\n    order_id:this.orderid,                   // 订单号\r\n    user_id:this.userid,\r\n    product_id:this.productid,\r\n    address_id:this.addressid,\r\n    status:this.status,\r\n    quantity:this.orderProducts[0].quantity,\r\n    shop_id:this.shopid,\r\n    price: this.finalPrice,\r\n    }\r\n    /*products: this.orderProducts.map(item => ({\r\n      productId: item.id,\r\n      quantity: item.quantity,\r\n      price: item.price\r\n    })),\r\n    address: {                  // 收货地址信息\r\n      name: this.selectedAddress.name,\r\n      phone: this.selectedAddress.phone,\r\n      address: this.selectedAddress.address\r\n    },\r\n    price: this.totalPrice,     // 商品总价\r\n    discount: this.discount,          // 优惠金额\r\n    promotion: this.promotion,        // 促销金额\r\n    finalPrice: this.finalPrice,      // 最终支付金额\r\n    remark: this.remark,             // 订单备注*/\r\n  \r\n\r\n\r\n  // 发送订单数据到后端\r\n  const response = await this.$axios.post('http://localhost:8081/order/create', orderData)\r\n  \r\n  if (response.status === 201) {\r\n    this.$message.success('订单提交成功')\r\n    this.$router.push({\r\n      name: 'order-success',\r\n      query: { or_bianhao }\r\n    })\r\n  } else {\r\n    throw new Error(response.data.message || '订单提交失败')\r\n  }\r\n\r\n} catch (error) {\r\n  this.$message.error(error.message || '订单提交失败，请重试')\r\n  console.error('提交订单失败:', error)\r\n}\r\n    },\r\n    // 处理地址选择\r\n    handleAddressSelected(address) {\r\n      this.selectedAddress = address;\r\n      this.addressid = address.id;\r\n      this.showAddressDialog = false;\r\n      this.$message.success('已选择收货地址');\r\n    },\r\n    \r\n    // 处理地址更新\r\n    handleAddressUpdated() {\r\n      this.loadAddresses(); // 重新加载地址列表\r\n    },\r\n  },\r\n  async created() {\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.order-confirm-page {\r\n  background-color: #f5f5f5;\r\n  padding: 20px 0;\r\n  min-height: calc(100vh - 120px);\r\n}\r\n\r\n.order-container {\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n  display: flex;\r\n  gap: 20px;\r\n}\r\n\r\n.order-left {\r\n  flex: 1;\r\n  min-width: 0;\r\n}\r\n\r\n.order-detail {\r\n  background: white;\r\n  padding: 20px;\r\n  border-radius: 8px;\r\n\r\n  h2 {\r\n    margin-bottom: 20px;\r\n    font-size: 20px;\r\n    font-weight: normal;\r\n  }\r\n\r\n  .product-info {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 10px;\r\n\r\n    img {\r\n      width: 80px;\r\n      height: 80px;\r\n      object-fit: cover;\r\n      border-radius: 4px;\r\n    }\r\n  }\r\n\r\n  .price {\r\n    color: #ff6700;\r\n    font-weight: bold;\r\n  }\r\n}\r\n\r\n.order-remark {\r\n  margin-top: 20px;\r\n\r\n  h3 {\r\n    margin-bottom: 10px;\r\n    font-size: 16px;\r\n    font-weight: normal;\r\n  }\r\n}\r\n\r\n.order-right {\r\n  width: 300px;\r\n}\r\n\r\n.delivery-info {\r\n  background: white;\r\n  padding: 20px;\r\n  border-radius: 8px;\r\n  margin-bottom: 20px;\r\n\r\n  h3 {\r\n    margin-bottom: 15px;\r\n    font-size: 16px;\r\n    font-weight: normal;\r\n  }\r\n\r\n  .address-info {\r\n    .address-detail {\r\n      margin-bottom: 10px;\r\n\r\n      p {\r\n        margin: 5px 0;\r\n        \r\n        .label {\r\n          color: #666;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  .no-address {\r\n    text-align: center;\r\n    color: #999;\r\n\r\n    p {\r\n      margin-bottom: 10px;\r\n    }\r\n  }\r\n}\r\n\r\n.order-summary {\r\n  background: white;\r\n  padding: 20px;\r\n  border-radius: 8px;\r\n\r\n  .summary-item {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    margin-bottom: 10px;\r\n\r\n    &.total {\r\n      margin-top: 20px;\r\n      padding-top: 20px;\r\n      border-top: 1px solid #eee;\r\n      font-size: 18px;\r\n\r\n      .price {\r\n        font-size: 24px;\r\n      }\r\n    }\r\n\r\n    .price {\r\n      color: #ff6700;\r\n      font-weight: bold;\r\n    }\r\n\r\n    .discount {\r\n      color: #52c41a;\r\n    }\r\n  }\r\n\r\n  .action-buttons {\r\n    margin-top: 20px;\r\n    display: flex;\r\n    gap: 10px;\r\n\r\n    .el-button {\r\n      flex: 1;\r\n    }\r\n  }\r\n}\r\n\r\n.address-list {\r\n  .address-item {\r\n    padding: 15px;\r\n    border: 1px solid #ddd;\r\n    border-radius: 4px;\r\n    margin-bottom: 10px;\r\n    cursor: pointer;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n\r\n    &:hover {\r\n      border-color: #ff6700;\r\n    }\r\n\r\n    &.active {\r\n      border-color: #ff6700;\r\n      background-color: #fff1f0;\r\n    }\r\n\r\n    .address-content {\r\n      .name {\r\n        font-weight: bold;\r\n        margin-bottom: 5px;\r\n      }\r\n\r\n      .address {\r\n        color: #666;\r\n      }\r\n    }\r\n  }\r\n\r\n  .add-address {\r\n    text-align: center;\r\n    margin-top: 20px;\r\n  }\r\n}\r\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}