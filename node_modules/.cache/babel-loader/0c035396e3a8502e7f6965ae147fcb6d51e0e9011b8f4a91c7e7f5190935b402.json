{"ast":null,"code":"import \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.every.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport \"core-js/modules/esnext.iterator.for-each.js\";\nimport \"core-js/modules/esnext.iterator.reduce.js\";\nexport default {\n  name: 'CartView',\n  data() {\n    return {\n      cartItems: [{\n        id: 1,\n        name: '商品名称1',\n        specs: '规格：默认',\n        price: 199.00,\n        originalPrice: 299.00,\n        quantity: 1,\n        stock: 15,\n        image: 'https://via.placeholder.com/120',\n        selected: false,\n        available: true\n      }, {\n        id: 2,\n        name: '商品名称2',\n        specs: '规格：默认',\n        price: 299.00,\n        quantity: 2,\n        stock: 5,\n        image: 'https://via.placeholder.com/120',\n        selected: false,\n        available: true\n      }, {\n        id: 3,\n        name: '商品名称3（已下架）',\n        specs: '规格：默认',\n        price: 99.00,\n        quantity: 1,\n        stock: 0,\n        image: 'https://via.placeholder.com/120',\n        selected: false,\n        available: false\n      }]\n    };\n  },\n  computed: {\n    selectAll: {\n      get() {\n        return this.cartItems.length > 0 && this.cartItems.every(item => !item.available || item.selected);\n      },\n      set(value) {\n        this.cartItems.forEach(item => {\n          if (item.available) {\n            item.selected = value;\n          }\n        });\n      }\n    },\n    selectedCount() {\n      return this.cartItems.filter(item => item.selected).length;\n    },\n    totalPrice() {\n      return this.cartItems.reduce((total, item) => {\n        if (item.selected) {\n          return total + item.price * item.quantity;\n        }\n        return total;\n      }, 0);\n    }\n  },\n  methods: {\n    handleSelectAll(val) {\n      this.cartItems.forEach(item => {\n        if (item.available) {\n          item.selected = val;\n        }\n      });\n    },\n    handleItemSelect(item) {\n      // 更新商品选择状态\n      console.log('商品选择状态更改：', item);\n    },\n    handleQuantityChange(item) {\n      // 处理数量变化\n      console.log('数量变化：', item);\n    },\n    removeItem(item) {\n      this.$confirm('确定要删除该商品吗？', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        const index = this.cartItems.indexOf(item);\n        this.cartItems.splice(index, 1);\n        this.$message.success('删除成功');\n      }).catch(() => {});\n    },\n    moveToFavorite(item) {\n      // 移入收藏夹\n      this.$message.success('已移入收藏夹');\n    },\n    batchDelete() {\n      const selectedItems = this.cartItems.filter(item => item.selected);\n      if (selectedItems.length === 0) {\n        this.$message.warning('请选择要删除的商品');\n        return;\n      }\n      this.$confirm(`确定要删除这${selectedItems.length}件商品吗？`, '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        this.cartItems = this.cartItems.filter(item => !item.selected);\n        this.$message.success('删除成功');\n      }).catch(() => {});\n    },\n    batchMoveToFavorite() {\n      // 批量移入收藏夹\n    },\n    clearInvalidItems() {\n      // 清除失效��品\n    },\n    checkout() {\n      // 结算\n      console.log('结算商品：', this.cartItems.filter(item => item.selected));\n    }\n  }\n};","map":{"version":3,"names":["name","data","cartItems","id","specs","price","originalPrice","quantity","stock","image","selected","available","computed","selectAll","get","length","every","item","set","value","forEach","selectedCount","filter","totalPrice","reduce","total","methods","handleSelectAll","val","handleItemSelect","console","log","handleQuantityChange","removeItem","$confirm","confirmButtonText","cancelButtonText","type","then","index","indexOf","splice","$message","success","catch","moveToFavorite","batchDelete","selectedItems","warning","batchMoveToFavorite","clearInvalidItems","checkout"],"sources":["src/views/CartView.vue"],"sourcesContent":["<template>\r\n  <div class=\"cart-page\">\r\n    <div class=\"cart-container\">\r\n      <!-- 购物车头部 -->\r\n      <div class=\"cart-header\">\r\n        <h2>我的购物车</h2>\r\n        <el-button type=\"text\" @click=\"clearInvalidItems\">\r\n          <i class=\"el-icon-delete\"></i> 清除失效商品\r\n        </el-button>\r\n      </div>\r\n\r\n      <!-- 购物车主体 -->\r\n      <div class=\"cart-main\" v-if=\"cartItems.length > 0\">\r\n        <!-- 表头 -->\r\n        <div class=\"cart-table-header\">\r\n          <el-checkbox \r\n            v-model=\"selectAll\"\r\n            @change=\"handleSelectAll\"\r\n          >全选</el-checkbox>\r\n          <span class=\"column-product\">商品信息</span>\r\n          <span class=\"column-price\">单价</span>\r\n          <span class=\"column-quantity\">数量</span>\r\n          <span class=\"column-total\">小计</span>\r\n          <span class=\"column-action\">操作</span>\r\n        </div>\r\n\r\n        <!-- 商品列表 -->\r\n        <div class=\"cart-items\">\r\n          <div \r\n            v-for=\"item in cartItems\" \r\n            :key=\"item.id\"\r\n            class=\"cart-item\"\r\n            :class=\"{ 'item-invalid': !item.available }\"\r\n          >\r\n            <el-checkbox \r\n              v-model=\"item.selected\"\r\n              :disabled=\"!item.available\"\r\n              @change=\"handleItemSelect(item)\"\r\n            ></el-checkbox>\r\n            \r\n            <div class=\"item-product\">\r\n              <img :src=\"item.image\" :alt=\"item.name\">\r\n              <div class=\"product-info\">\r\n                <h3>{{ item.name }}</h3>\r\n                <p class=\"specs\">{{ item.specs }}</p>\r\n                <p class=\"status\" v-if=\"!item.available\">该商品已下架</p>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"item-price\">\r\n              <span class=\"current-price\">¥{{ item.price.toFixed(2) }}</span>\r\n              <span class=\"original-price\" v-if=\"item.originalPrice\">¥{{ item.originalPrice.toFixed(2) }}</span>\r\n            </div>\r\n\r\n            <div class=\"item-quantity\">\r\n              <el-input-number \r\n                v-model=\"item.quantity\" \r\n                :min=\"1\" \r\n                :max=\"item.stock\"\r\n                :disabled=\"!item.available\"\r\n                @change=\"handleQuantityChange(item)\"\r\n              ></el-input-number>\r\n              <p class=\"stock\" v-if=\"item.stock < 10\">仅剩{{ item.stock }}件</p>\r\n            </div>\r\n\r\n            <div class=\"item-total\">\r\n              ¥{{ (item.price * item.quantity).toFixed(2) }}\r\n            </div>\r\n\r\n            <div class=\"item-action\">\r\n              <el-button type=\"text\" @click=\"removeItem(item)\">删除</el-button>\r\n              <el-button type=\"text\" @click=\"moveToFavorite(item)\">移入收藏夹</el-button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- 空购物车提示 -->\r\n      <div v-else class=\"empty-cart\">\r\n        <i class=\"el-icon-shopping-cart-2\"></i>\r\n        <p>购物车还是空的</p>\r\n        <el-button type=\"primary\" @click=\"$router.push('/')\">去逛逛</el-button>\r\n      </div>\r\n\r\n      <!-- 购物车底部 -->\r\n      <div class=\"cart-footer\" v-if=\"cartItems.length > 0\">\r\n        <div class=\"footer-left\">\r\n          <el-checkbox \r\n            v-model=\"selectAll\"\r\n            @change=\"handleSelectAll\"\r\n          >全选</el-checkbox>\r\n          <el-button type=\"text\" @click=\"batchDelete\">删除选中商品</el-button>\r\n          <el-button type=\"text\" @click=\"batchMoveToFavorite\">移入收藏夹</el-button>\r\n        </div>\r\n        <div class=\"footer-right\">\r\n          <div class=\"selected-info\">\r\n            已选择 <span>{{ selectedCount }}</span> 件商品\r\n            <div class=\"total-price\">\r\n              合计：<span>¥{{ totalPrice.toFixed(2) }}</span>\r\n            </div>\r\n          </div>\r\n          <el-button \r\n            type=\"primary\" \r\n            size=\"large\"\r\n            :disabled=\"selectedCount === 0\"\r\n            @click=\"checkout\"\r\n          >\r\n            立即结算\r\n          </el-button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'CartView',\r\n  data() {\r\n    return {\r\n      cartItems: [\r\n        {\r\n          id: 1,\r\n          name: '商品名称1',\r\n          specs: '规格：默认',\r\n          price: 199.00,\r\n          originalPrice: 299.00,\r\n          quantity: 1,\r\n          stock: 15,\r\n          image: 'https://via.placeholder.com/120',\r\n          selected: false,\r\n          available: true\r\n        },\r\n        {\r\n          id: 2,\r\n          name: '商品名称2',\r\n          specs: '规格：默认',\r\n          price: 299.00,\r\n          quantity: 2,\r\n          stock: 5,\r\n          image: 'https://via.placeholder.com/120',\r\n          selected: false,\r\n          available: true\r\n        },\r\n        {\r\n          id: 3,\r\n          name: '商品名称3（已下架）',\r\n          specs: '规格：默认',\r\n          price: 99.00,\r\n          quantity: 1,\r\n          stock: 0,\r\n          image: 'https://via.placeholder.com/120',\r\n          selected: false,\r\n          available: false\r\n        }\r\n      ]\r\n    }\r\n  },\r\n  computed: {\r\n    selectAll: {\r\n      get() {\r\n        return this.cartItems.length > 0 && \r\n               this.cartItems.every(item => !item.available || item.selected)\r\n      },\r\n      set(value) {\r\n        this.cartItems.forEach(item => {\r\n          if (item.available) {\r\n            item.selected = value\r\n          }\r\n        })\r\n      }\r\n    },\r\n    selectedCount() {\r\n      return this.cartItems.filter(item => item.selected).length\r\n    },\r\n    totalPrice() {\r\n      return this.cartItems.reduce((total, item) => {\r\n        if (item.selected) {\r\n          return total + item.price * item.quantity\r\n        }\r\n        return total\r\n      }, 0)\r\n    }\r\n  },\r\n  methods: {\r\n    handleSelectAll(val) {\r\n      this.cartItems.forEach(item => {\r\n        if (item.available) {\r\n          item.selected = val\r\n        }\r\n      })\r\n    },\r\n    handleItemSelect(item) {\r\n      // 更新商品选择状态\r\n      console.log('商品选择状态更改：', item)\r\n    },\r\n    handleQuantityChange(item) {\r\n      // 处理数量变化\r\n      console.log('数量变化：', item)\r\n    },\r\n    removeItem(item) {\r\n      this.$confirm('确定要删除该商品吗？', '提示', {\r\n        confirmButtonText: '确定',\r\n        cancelButtonText: '取消',\r\n        type: 'warning'\r\n      }).then(() => {\r\n        const index = this.cartItems.indexOf(item)\r\n        this.cartItems.splice(index, 1)\r\n        this.$message.success('删除成功')\r\n      }).catch(() => {})\r\n    },\r\n    moveToFavorite(item) {\r\n      // 移入收藏夹\r\n      this.$message.success('已移入收藏夹')\r\n    },\r\n    batchDelete() {\r\n      const selectedItems = this.cartItems.filter(item => item.selected)\r\n      if (selectedItems.length === 0) {\r\n        this.$message.warning('请选择要删除的商品')\r\n        return\r\n      }\r\n      this.$confirm(`确定要删除这${selectedItems.length}件商品吗？`, '提示', {\r\n        confirmButtonText: '确定',\r\n        cancelButtonText: '取消',\r\n        type: 'warning'\r\n      }).then(() => {\r\n        this.cartItems = this.cartItems.filter(item => !item.selected)\r\n        this.$message.success('删除成功')\r\n      }).catch(() => {})\r\n    },\r\n    batchMoveToFavorite() {\r\n      // 批量移入收藏夹\r\n    },\r\n    clearInvalidItems() {\r\n      // 清除失效��品\r\n    },\r\n    checkout() {\r\n      // 结算\r\n      console.log('结算商品：', this.cartItems.filter(item => item.selected))\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.cart-page {\r\n  background-color: #f5f5f5;\r\n  padding: 20px 0;\r\n  min-height: calc(100vh - 120px);\r\n}\r\n\r\n.cart-container {\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n  background-color: #fff;\r\n  border-radius: 8px;\r\n  padding: 20px;\r\n}\r\n\r\n.cart-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding-bottom: 20px;\r\n  border-bottom: 1px solid #eee;\r\n\r\n  h2 {\r\n    font-size: 20px;\r\n    font-weight: normal;\r\n  }\r\n}\r\n\r\n.cart-table-header {\r\n  display: grid;\r\n  grid-template-columns: 60px 400px 150px 150px 150px 100px;\r\n  align-items: center;\r\n  padding: 15px 0;\r\n  background-color: #f8f8f8;\r\n  margin: 20px 0;\r\n  border-radius: 4px;\r\n\r\n  span {\r\n    text-align: center;\r\n    color: #666;\r\n  }\r\n}\r\n\r\n.cart-item {\r\n  display: grid;\r\n  grid-template-columns: 60px 400px 150px 150px 150px 100px;\r\n  align-items: center;\r\n  padding: 20px 0;\r\n  border-bottom: 1px solid #eee;\r\n\r\n  &.item-invalid {\r\n    opacity: 0.5;\r\n  }\r\n\r\n  .item-product {\r\n    display: flex;\r\n    gap: 15px;\r\n\r\n    img {\r\n      width: 80px;\r\n      height: 80px;\r\n      object-fit: cover;\r\n      border-radius: 4px;\r\n    }\r\n\r\n    .product-info {\r\n      flex: 1;\r\n      display: flex;\r\n      flex-direction: column;\r\n      gap: 8px;\r\n\r\n      h3 {\r\n        font-size: 14px;\r\n        margin: 0;\r\n      }\r\n\r\n      .specs {\r\n        color: #999;\r\n        font-size: 12px;\r\n      }\r\n\r\n      .status {\r\n        color: #ff4d4f;\r\n        font-size: 12px;\r\n      }\r\n    }\r\n  }\r\n\r\n  .item-price {\r\n    text-align: center;\r\n\r\n    .current-price {\r\n      color: #ff6700;\r\n      font-size: 16px;\r\n    }\r\n\r\n    .original-price {\r\n      color: #999;\r\n      font-size: 12px;\r\n      text-decoration: line-through;\r\n      margin-left: 5px;\r\n    }\r\n  }\r\n\r\n  .item-quantity {\r\n    text-align: center;\r\n\r\n    .stock {\r\n      color: #ff4d4f;\r\n      font-size: 12px;\r\n      margin-top: 5px;\r\n    }\r\n  }\r\n\r\n  .item-total {\r\n    text-align: center;\r\n    color: #ff6700;\r\n    font-size: 16px;\r\n    font-weight: bold;\r\n  }\r\n\r\n  .item-action {\r\n    text-align: center;\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 8px;\r\n  }\r\n}\r\n\r\n.cart-footer {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding-top: 20px;\r\n  margin-top: 20px;\r\n  border-top: 1px solid #eee;\r\n\r\n  .footer-left {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 20px;\r\n  }\r\n\r\n  .footer-right {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 20px;\r\n\r\n    .selected-info {\r\n      text-align: right;\r\n\r\n      span {\r\n        color: #ff6700;\r\n        font-weight: bold;\r\n      }\r\n\r\n      .total-price {\r\n        margin-top: 5px;\r\n        font-size: 16px;\r\n\r\n        span {\r\n          color: #ff6700;\r\n          font-size: 24px;\r\n        }\r\n      }\r\n    }\r\n\r\n    .el-button {\r\n      padding: 15px 40px;\r\n    }\r\n  }\r\n}\r\n\r\n.empty-cart {\r\n  text-align: center;\r\n  padding: 60px 0;\r\n  color: #999;\r\n\r\n  i {\r\n    font-size: 60px;\r\n    margin-bottom: 20px;\r\n  }\r\n\r\n  .el-button {\r\n    margin-top: 20px;\r\n  }\r\n}\r\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}