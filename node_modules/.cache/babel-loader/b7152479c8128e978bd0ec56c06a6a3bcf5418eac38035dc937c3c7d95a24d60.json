{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.reduce.js\";\nexport default {\n  name: 'OrderConfirmView',\n  data() {\n    return {\n      orderProducts: [],\n      selectedAddress: null,\n      addresses: [],\n      remark: '',\n      discount: 0,\n      promotion: 0,\n      productid: null,\n      userid: this.$store.getters.userId,\n      shopid: null,\n      status: 'pending',\n      showAddressDialog: false,\n      addressList: [{\n        id: 1,\n        name: '张三',\n        phone: '13800138000',\n        address: '北京市朝阳区xxx街道xxx号'\n      }]\n    };\n  },\n  computed: {\n    totalPrice() {\n      return this.orderProducts.reduce((total, product) => {\n        return total + product.price * product.quantity;\n      }, 0);\n    },\n    finalPrice() {\n      return this.totalPrice - this.discount - this.promotion;\n    }\n  },\n  methods: {\n    calculateTotal() {\n      // 重新计算总价\n      this.totalPrice;\n    },\n    removeProduct(index) {\n      this.orderProducts.splice(index, 1);\n    },\n    selectAddress(address) {\n      this.selectedAddress = address;\n      this.showAddressDialog = false;\n    },\n    addNewAddress() {\n      // 实现新增地址\n    },\n    editAddress() {\n      // 实现编辑地址\n    },\n    deleteAddress() {\n      // 实现删除地址\n    },\n    async submitOrder() {\n      if (!this.selectedAddress) {\n        this.$message.warning('请选择收货地址');\n        return;\n      }\n      try {\n        const orderData = {\n          user_id: this.userid,\n          product_id: this.productid,\n          address_id: this.selectedAddress.id,\n          status: this.status,\n          quantity: this.orderProducts[0].quantity,\n          shop_id: this.shopid,\n          price: this.finalPrice\n        };\n        const response = await this.$axios.post('http://localhost:8081/order/create', orderData);\n        if (response.status === 201) {\n          this.$message.success('订单提交成功');\n          this.$router.push({\n            name: 'order-success',\n            query: {\n              orderId: response.data\n            }\n          });\n        }\n      } catch (error) {\n        this.$message.error('订单提交失败，请重试');\n        console.error('提交订单失败:', error);\n      }\n    }\n  },\n  created() {\n    // 从路由获取商品信息\n    const productInfo = this.$route.query.product_info;\n    if (productInfo) {\n      // 将商品信息添加到订单商品列表\n      this.orderProducts = [{\n        ...productInfo,\n        quantity: 1,\n        // 默认数量为1\n        stock: productInfo.quantity ? productInfo.quantity[0].quantity : 0 // 获取第一个规格的库存\n      }];\n\n      // 保存商品ID和店铺ID\n      this.productid = productInfo.product_id;\n      this.shopid = productInfo.shop_id;\n    }\n  }\n};","map":{"version":3,"names":["name","data","orderProducts","selectedAddress","addresses","remark","discount","promotion","productid","userid","$store","getters","userId","shopid","status","showAddressDialog","addressList","id","phone","address","computed","totalPrice","reduce","total","product","price","quantity","finalPrice","methods","calculateTotal","removeProduct","index","splice","selectAddress","addNewAddress","editAddress","deleteAddress","submitOrder","$message","warning","orderData","user_id","product_id","address_id","shop_id","response","$axios","post","success","$router","push","query","orderId","error","console","created","productInfo","$route","product_info","stock"],"sources":["src/views/OrderConfirmView.vue"],"sourcesContent":["<template>\r\n  <div class=\"order-confirm-page\">\r\n    <div class=\"order-container\">\r\n      <!-- 左侧区域 -->\r\n      <div class=\"order-left\">\r\n        <!-- 订单明细 -->\r\n        <div class=\"order-detail\">\r\n          <h2>订单明细</h2>\r\n          <div class=\"product-list\">\r\n            <el-table :data=\"orderProducts\" style=\"width: 100%\">\r\n              <el-table-column label=\"商品名称\">\r\n                <template slot-scope=\"scope\">\r\n                  <div class=\"product-info\">\r\n                    <img :src=\"`http://localhost:8081${scope.row.picture_id[0]}`\" :alt=\"scope.row.name\">\r\n                    <span>{{ scope.row.name }}</span>\r\n                  </div>\r\n                </template>\r\n              </el-table-column>\r\n              <el-table-column label=\"价格\" width=\"120\">\r\n                <template slot-scope=\"scope\">\r\n                  <span class=\"price\">¥{{ scope.row.price.toFixed(2) }}</span>\r\n                </template>\r\n              </el-table-column>\r\n              <el-table-column label=\"数量\" width=\"150\">\r\n                <template slot-scope=\"scope\">\r\n                  <el-input-number \r\n                    v-model=\"scope.row.quantity\" \r\n                    :min=\"1\"\r\n                    :max=\"scope.row.stock\"\r\n                    @change=\"calculateTotal\"\r\n                  ></el-input-number>\r\n                </template>\r\n              </el-table-column>\r\n              <el-table-column label=\"操作\" width=\"80\">\r\n                <template slot-scope=\"scope\">\r\n                  <el-button \r\n                    type=\"text\" \r\n                    @click=\"removeProduct(scope.$index)\"\r\n                  >\r\n                    <i class=\"el-icon-delete\"></i>\r\n                  </el-button>\r\n                </template>\r\n              </el-table-column>\r\n            </el-table>\r\n          </div>\r\n\r\n          <!-- 备注信息 -->\r\n          <div class=\"order-remark\">\r\n            <h3>备注</h3>\r\n            <el-input\r\n              type=\"textarea\"\r\n              v-model=\"remark\"\r\n              :maxlength=\"100\"\r\n              show-word-limit\r\n              placeholder=\"输入备注信息，100字以内\"\r\n              rows=\"3\"\r\n            ></el-input>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- 右侧区域 -->\r\n      <div class=\"order-right\">\r\n        <!-- 收货信息 -->\r\n        <div class=\"delivery-info\">\r\n          <h3>收货信息</h3>\r\n          <div v-if=\"selectedAddress\" class=\"address-info\">\r\n            <div class=\"address-detail\">\r\n              <p>\r\n                <span class=\"label\">收货人：</span>\r\n                {{ selectedAddress.name }}\r\n              </p>\r\n              <p>\r\n                <span class=\"label\">联系电话：</span>\r\n                {{ selectedAddress.phone }}\r\n              </p>\r\n              <p>\r\n                <span class=\"label\">收货地址：</span>\r\n                {{ selectedAddress.address }}\r\n              </p>\r\n            </div>\r\n            <el-button type=\"text\" @click=\"showAddressDialog = true\">\r\n              更换地址\r\n            </el-button>\r\n          </div>\r\n          <div v-else class=\"no-address\">\r\n            <p>当前无地址信息</p>\r\n            <el-button type=\"text\" @click=\"showAddressDialog = true\">\r\n              请新建地址\r\n            </el-button>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- 结算信息 -->\r\n        <div class=\"order-summary\">\r\n          <div class=\"summary-item\">\r\n            <span>商品总价</span>\r\n            <span class=\"price\">¥{{ totalPrice.toFixed(2) }}</span>\r\n          </div>\r\n          <div class=\"summary-item\">\r\n            <span>商品优惠</span>\r\n            <span class=\"discount\">-¥{{ discount.toFixed(2) }}</span>\r\n          </div>\r\n          <div class=\"summary-item\">\r\n            <span>商品折扣</span>\r\n            <span class=\"discount\">-¥{{ promotion.toFixed(2) }}</span>\r\n          </div>\r\n          <div class=\"summary-item total\">\r\n            <span>合计</span>\r\n            <span class=\"price\">¥{{ finalPrice.toFixed(2) }}</span>\r\n          </div>\r\n          <div class=\"action-buttons\">\r\n            <el-button @click=\"$router.back()\">返回</el-button>\r\n            <el-button \r\n              type=\"primary\" \r\n              :disabled=\"!selectedAddress\"\r\n              @click=\"submitOrder\"\r\n            >\r\n              提交订单\r\n            </el-button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- 地址选择对话框 -->\r\n    <el-dialog\r\n      title=\"选择收货地址\"\r\n      :visible.sync=\"showAddressDialog\"\r\n      width=\"50%\"\r\n    >\r\n      <div class=\"address-list\">\r\n        <div \r\n          v-for=\"address in addressList\" \r\n          :key=\"address.id\"\r\n          class=\"address-item\"\r\n          :class=\"{ active: selectedAddress && selectedAddress.id === address.id }\"\r\n          @click=\"selectAddress(address)\"\r\n        >\r\n          <div class=\"address-content\">\r\n            <p class=\"name\">{{ address.name }} {{ address.phone }}</p>\r\n            <p class=\"address\">{{ address.address }}</p>\r\n          </div>\r\n          <div class=\"address-actions\">\r\n            <el-button type=\"text\" @click.stop=\"editAddress(address)\">\r\n              编辑\r\n            </el-button>\r\n            <el-button type=\"text\" @click.stop=\"deleteAddress(address)\">\r\n              删除\r\n            </el-button>\r\n          </div>\r\n        </div>\r\n        <div class=\"add-address\">\r\n          <el-button type=\"dashed\" @click=\"addNewAddress\">+ 新增收货地址</el-button>\r\n        </div>\r\n      </div>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'OrderConfirmView',\r\n  data() {\r\n    return {\r\n      orderProducts: [],\r\n      selectedAddress: null,\r\n      addresses: [],\r\n      remark: '',\r\n      discount: 0,\r\n      promotion: 0,\r\n      productid: null,\r\n      userid: this.$store.getters.userId,\r\n      shopid: null,\r\n      status: 'pending',\r\n      showAddressDialog: false,\r\n      addressList: [\r\n        {\r\n          id: 1,\r\n          name: '张三',\r\n          phone: '13800138000',\r\n          address: '北京市朝阳区xxx街道xxx号'\r\n        }\r\n      ]\r\n    }\r\n  },\r\n  computed: {\r\n    totalPrice() {\r\n      return this.orderProducts.reduce((total, product) => {\r\n        return total + product.price * product.quantity;\r\n      }, 0);\r\n    },\r\n    finalPrice() {\r\n      return this.totalPrice - this.discount - this.promotion;\r\n    }\r\n  },\r\n  methods: {\r\n    calculateTotal() {\r\n      // 重新计算总价\r\n      this.totalPrice;\r\n    },\r\n    removeProduct(index) {\r\n      this.orderProducts.splice(index, 1);\r\n    },\r\n    selectAddress(address) {\r\n      this.selectedAddress = address;\r\n      this.showAddressDialog = false;\r\n    },\r\n    addNewAddress() {\r\n      // 实现新增地址\r\n    },\r\n    editAddress() {\r\n      // 实现编辑地址\r\n    },\r\n    deleteAddress() {\r\n      // 实现删除地址\r\n    },\r\n    async submitOrder() {\r\n      if (!this.selectedAddress) {\r\n        this.$message.warning('请选择收货地址');\r\n        return;\r\n      }\r\n      \r\n      try {\r\n        const orderData = {\r\n          user_id: this.userid,\r\n          product_id: this.productid,\r\n          address_id: this.selectedAddress.id,\r\n          status: this.status,\r\n          quantity: this.orderProducts[0].quantity,\r\n          shop_id: this.shopid,\r\n          price: this.finalPrice\r\n        };\r\n\r\n        const response = await this.$axios.post('http://localhost:8081/order/create', orderData);\r\n        \r\n        if (response.status === 201) {\r\n          this.$message.success('订单提交成功');\r\n          this.$router.push({\r\n            name: 'order-success',\r\n            query: { orderId: response.data }\r\n          });\r\n        }\r\n      } catch (error) {\r\n        this.$message.error('订单提交失败，请重试');\r\n        console.error('提交订单失败:', error);\r\n      }\r\n    }\r\n  },\r\n  created() {\r\n    // 从路由获取商品信息\r\n    const productInfo = this.$route.query.product_info;\r\n    if (productInfo) {\r\n      // 将商品信息添加到订单商品列表\r\n      this.orderProducts = [{\r\n        ...productInfo,\r\n        quantity: 1, // 默认数量为1\r\n        stock: productInfo.quantity ? productInfo.quantity[0].quantity : 0 // 获取第一个规格的库存\r\n      }];\r\n      \r\n      // 保存商品ID和店铺ID\r\n      this.productid = productInfo.product_id;\r\n      this.shopid = productInfo.shop_id;\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.order-confirm-page {\r\n  background-color: #f5f5f5;\r\n  padding: 20px 0;\r\n  min-height: calc(100vh - 120px);\r\n}\r\n\r\n.order-container {\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n  display: flex;\r\n  gap: 20px;\r\n}\r\n\r\n.order-left {\r\n  flex: 1;\r\n  min-width: 0;\r\n}\r\n\r\n.order-detail {\r\n  background: white;\r\n  padding: 20px;\r\n  border-radius: 8px;\r\n\r\n  h2 {\r\n    margin-bottom: 20px;\r\n    font-size: 20px;\r\n    font-weight: normal;\r\n  }\r\n\r\n  .product-info {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 10px;\r\n\r\n    img {\r\n      width: 80px;\r\n      height: 80px;\r\n      object-fit: cover;\r\n      border-radius: 4px;\r\n    }\r\n  }\r\n\r\n  .price {\r\n    color: #ff6700;\r\n    font-weight: bold;\r\n  }\r\n}\r\n\r\n.order-remark {\r\n  margin-top: 20px;\r\n\r\n  h3 {\r\n    margin-bottom: 10px;\r\n    font-size: 16px;\r\n    font-weight: normal;\r\n  }\r\n}\r\n\r\n.order-right {\r\n  width: 300px;\r\n}\r\n\r\n.delivery-info {\r\n  background: white;\r\n  padding: 20px;\r\n  border-radius: 8px;\r\n  margin-bottom: 20px;\r\n\r\n  h3 {\r\n    margin-bottom: 15px;\r\n    font-size: 16px;\r\n    font-weight: normal;\r\n  }\r\n\r\n  .address-info {\r\n    .address-detail {\r\n      margin-bottom: 10px;\r\n\r\n      p {\r\n        margin: 5px 0;\r\n        \r\n        .label {\r\n          color: #666;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  .no-address {\r\n    text-align: center;\r\n    color: #999;\r\n\r\n    p {\r\n      margin-bottom: 10px;\r\n    }\r\n  }\r\n}\r\n\r\n.order-summary {\r\n  background: white;\r\n  padding: 20px;\r\n  border-radius: 8px;\r\n\r\n  .summary-item {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    margin-bottom: 10px;\r\n\r\n    &.total {\r\n      margin-top: 20px;\r\n      padding-top: 20px;\r\n      border-top: 1px solid #eee;\r\n      font-size: 18px;\r\n\r\n      .price {\r\n        font-size: 24px;\r\n      }\r\n    }\r\n\r\n    .price {\r\n      color: #ff6700;\r\n      font-weight: bold;\r\n    }\r\n\r\n    .discount {\r\n      color: #52c41a;\r\n    }\r\n  }\r\n\r\n  .action-buttons {\r\n    margin-top: 20px;\r\n    display: flex;\r\n    gap: 10px;\r\n\r\n    .el-button {\r\n      flex: 1;\r\n    }\r\n  }\r\n}\r\n\r\n.address-list {\r\n  .address-item {\r\n    padding: 15px;\r\n    border: 1px solid #ddd;\r\n    border-radius: 4px;\r\n    margin-bottom: 10px;\r\n    cursor: pointer;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n\r\n    &:hover {\r\n      border-color: #ff6700;\r\n    }\r\n\r\n    &.active {\r\n      border-color: #ff6700;\r\n      background-color: #fff1f0;\r\n    }\r\n\r\n    .address-content {\r\n      .name {\r\n        font-weight: bold;\r\n        margin-bottom: 5px;\r\n      }\r\n\r\n      .address {\r\n        color: #666;\r\n      }\r\n    }\r\n  }\r\n\r\n  .add-address {\r\n    text-align: center;\r\n    margin-top: 20px;\r\n  }\r\n}\r\n</style> "],"mappings":";;;AAiKA;EACAA,IAAA;EACAC,KAAA;IACA;MACAC,aAAA;MACAC,eAAA;MACAC,SAAA;MACAC,MAAA;MACAC,QAAA;MACAC,SAAA;MACAC,SAAA;MACAC,MAAA,OAAAC,MAAA,CAAAC,OAAA,CAAAC,MAAA;MACAC,MAAA;MACAC,MAAA;MACAC,iBAAA;MACAC,WAAA,GACA;QACAC,EAAA;QACAjB,IAAA;QACAkB,KAAA;QACAC,OAAA;MACA;IAEA;EACA;EACAC,QAAA;IACAC,WAAA;MACA,YAAAnB,aAAA,CAAAoB,MAAA,EAAAC,KAAA,EAAAC,OAAA;QACA,OAAAD,KAAA,GAAAC,OAAA,CAAAC,KAAA,GAAAD,OAAA,CAAAE,QAAA;MACA;IACA;IACAC,WAAA;MACA,YAAAN,UAAA,QAAAf,QAAA,QAAAC,SAAA;IACA;EACA;EACAqB,OAAA;IACAC,eAAA;MACA;MACA,KAAAR,UAAA;IACA;IACAS,cAAAC,KAAA;MACA,KAAA7B,aAAA,CAAA8B,MAAA,CAAAD,KAAA;IACA;IACAE,cAAAd,OAAA;MACA,KAAAhB,eAAA,GAAAgB,OAAA;MACA,KAAAJ,iBAAA;IACA;IACAmB,cAAA;MACA;IAAA,CACA;IACAC,YAAA;MACA;IAAA,CACA;IACAC,cAAA;MACA;IAAA,CACA;IACA,MAAAC,YAAA;MACA,UAAAlC,eAAA;QACA,KAAAmC,QAAA,CAAAC,OAAA;QACA;MACA;MAEA;QACA,MAAAC,SAAA;UACAC,OAAA,OAAAhC,MAAA;UACAiC,UAAA,OAAAlC,SAAA;UACAmC,UAAA,OAAAxC,eAAA,CAAAc,EAAA;UACAH,MAAA,OAAAA,MAAA;UACAY,QAAA,OAAAxB,aAAA,IAAAwB,QAAA;UACAkB,OAAA,OAAA/B,MAAA;UACAY,KAAA,OAAAE;QACA;QAEA,MAAAkB,QAAA,cAAAC,MAAA,CAAAC,IAAA,uCAAAP,SAAA;QAEA,IAAAK,QAAA,CAAA/B,MAAA;UACA,KAAAwB,QAAA,CAAAU,OAAA;UACA,KAAAC,OAAA,CAAAC,IAAA;YACAlD,IAAA;YACAmD,KAAA;cAAAC,OAAA,EAAAP,QAAA,CAAA5C;YAAA;UACA;QACA;MACA,SAAAoD,KAAA;QACA,KAAAf,QAAA,CAAAe,KAAA;QACAC,OAAA,CAAAD,KAAA,YAAAA,KAAA;MACA;IACA;EACA;EACAE,QAAA;IACA;IACA,MAAAC,WAAA,QAAAC,MAAA,CAAAN,KAAA,CAAAO,YAAA;IACA,IAAAF,WAAA;MACA;MACA,KAAAtD,aAAA;QACA,GAAAsD,WAAA;QACA9B,QAAA;QAAA;QACAiC,KAAA,EAAAH,WAAA,CAAA9B,QAAA,GAAA8B,WAAA,CAAA9B,QAAA,IAAAA,QAAA;MACA;;MAEA;MACA,KAAAlB,SAAA,GAAAgD,WAAA,CAAAd,UAAA;MACA,KAAA7B,MAAA,GAAA2C,WAAA,CAAAZ,OAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}