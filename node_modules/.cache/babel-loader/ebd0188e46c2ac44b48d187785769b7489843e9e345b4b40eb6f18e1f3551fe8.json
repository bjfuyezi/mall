{"ast":null,"code":"import axios from 'axios';\nexport default {\n  name: 'AddAdForm',\n  data() {\n    return {\n      formData: {\n        ps_id: null,\n        name: '',\n        type: 'shop',\n        start_time: null,\n        end_time: null,\n        price: null,\n        picture: null,\n        // 这里将保存文件对象\n        selectedProduct: null // 新增字段用于存储选中的产品ID\n      },\n      price: 0,\n      showProductSelect: false,\n      // 控制是否显示产品选择下拉列表\n      isSubmitting: false,\n      error: null,\n      products: [] // 存储从后端获取的产品列表\n    };\n  },\n  methods: {\n    handleFileChange(event) {\n      const file = event.target.files[0];\n      if (file) {\n        this.formData.picture = file; // 只保存第一个文件\n      } else {\n        this.formData.picture = null;\n      }\n    },\n    convertToInt(value) {\n      return value !== null && value !== '' ? parseInt(value, 10) : 0;\n    },\n    convertToFloat(value) {\n      return value !== null && value !== '' ? parseFloat(value).toFixed(2) : '0.00';\n    },\n    formatDate(isoString) {\n      // 将 ISO 字符串解析为 Date 对象\n      const date = new Date(isoString);\n      // 获取年份、月份和日期，并确保月份和日期是两位数\n      const year = date.getFullYear();\n      const month = String(date.getMonth() + 1).padStart(2, '0');\n      const day = String(date.getDate()).padStart(2, '0');\n      // 返回格式化的日期字符串\n      return `${year}-${month}-${day}`;\n    },\n    async checkStart() {\n      const startTimeInput = document.getElementById('start_time');\n      const startTimeError = document.getElementById('start_time_error');\n      if (!this.formData.start_time) {\n        console.log(\"哈哈哈哈哈哈哈哈\");\n        startTimeInput.style.borderColor = 'red';\n        startTimeError.style.display = 'block';\n      } else {\n        console.log(this.formData.start_time);\n        startTimeInput.style.borderColor = '';\n        startTimeError.style.display = 'none';\n      }\n    },\n    async price_cal() {\n      console.log(this.formatDate.start_time);\n      try {\n        const response = await axios.get('http://localhost:8081/advertise/money', {\n          params: {\n            start: this.formatDate(this.formData.start_time),\n            end: this.formatDate(this.formData.end_time),\n            times: 0,\n            banner: true\n          }\n        });\n        this.formData.price = response.data; // 假设后端返回的是一个价格\n      } catch (err) {\n        this.error = '无法加载预计价格，请稍等';\n      }\n    },\n    async onTypeChange() {\n      if (this.formData.type === 'product') {\n        try {\n          // 从后端获取产品列表\n          //const response = await axios.get('http://localhost:8081/products');\n          this.products = [{\n            id: 1,\n            name: '商品1'\n          }, {\n            id: 2,\n            name: '商品2'\n          }, {\n            id: 3,\n            name: '商品3'\n          }]; //response.data; // 假设后端返回的是一个产品数组\n          this.showProductSelect = true; // 显示产品选择下拉列表\n        } catch (err) {\n          this.error = '无法加载产品列表，请稍后再试';\n        }\n      } else {\n        this.showProductSelect = false;\n        this.products = [];\n        this.formData.selectedProduct = null;\n      }\n    },\n    async handleSubmit() {\n      try {\n        this.error = null;\n        const formData = new FormData();\n        const userid = this.$store.getters.userId;\n        const shopResponse = await axios.post('http://localhost:8081/shop/getByUser_id', {\n          id: userid\n        });\n        if (shopResponse.data != null) {\n          formData.append('shop_id', shopResponse.data.shop_id);\n        }\n        formData.append('name', this.formData.name);\n        // 如果是产品广告，附加选中的产品ID\n        if (this.formData.type === 'product' && this.formData.selectedProduct) {\n          formData.append('ps_id', this.convertToInt(this.formData.selectedProduct));\n        } else formData.append('ps_id', -1);\n        formData.append('type', this.formData.type);\n        formData.append('start_time', this.formatDate(this.formData.start_time));\n        formData.append('end_time', this.formatDate(this.formData.end_time));\n        formData.append('times', 0);\n        formData.append('price', this.convertToFloat(this.formData.price));\n        formData.append('banner', true);\n\n        // 添加文件（如果有）\n        if (this.formData.picture) {\n          formData.append('picture', this.formData.picture); // 使用正确的键名 'pictrue'\n        } else {\n          formData.append('picture', null);\n        }\n\n        //发送请求到服务器\n        const response = await axios.post('http://localhost:8081/advertise/create', formData);\n        if (response.status == 200) {\n          console.log(response.data);\n          this.$emit('refresh', response.data);\n        } else if (response.data == 409) {\n          alert('当前时间段广告申请已达上限');\n        }\n      } catch (err) {\n        this.error = err.message || '发生错误，请稍后再试';\n      }\n      console.log('到这里');\n      this.closeDialog();\n    },\n    // 关闭弹窗的方法\n    closeDialog() {\n      //this.dialogVisible = false;\n      // alert('小弹窗');\n      this.$emit('close-ad');\n    },\n    clearForm() {\n      this.formData = {\n        ps_id: null,\n        name: '',\n        type: 'shop',\n        start_time: null,\n        end_time: null,\n        price: null,\n        picture: null\n      };\n      // 手动清除文件输入框\n      this.$refs.pictureInput.value = null;\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","formData","ps_id","type","start_time","end_time","price","picture","selectedProduct","showProductSelect","isSubmitting","error","products","methods","handleFileChange","event","file","target","files","convertToInt","value","parseInt","convertToFloat","parseFloat","toFixed","formatDate","isoString","date","Date","year","getFullYear","month","String","getMonth","padStart","day","getDate","checkStart","startTimeInput","document","getElementById","startTimeError","console","log","style","borderColor","display","price_cal","response","get","params","start","end","times","banner","err","onTypeChange","id","handleSubmit","FormData","userid","$store","getters","userId","shopResponse","post","append","shop_id","status","$emit","alert","message","closeDialog","clearForm","$refs","pictureInput"],"sources":["src/components/AddBanner.vue"],"sourcesContent":["<template>\r\n  <form @submit.prevent=\"handleSubmit\" class=\"add-ad-form\">  \r\n    <h2>添加新广告</h2>\r\n\r\n    <!-- 广告标题 -->\r\n    <div class=\"form-group\">\r\n      <label for=\"name\">名称</label>\r\n      <input id=\"name\" v-model=\"formData.name\" type=\"text\" required />\r\n    </div>\r\n\r\n    <!-- 广告类型 -->\r\n    <div class=\"form-group\">\r\n      <label for=\"type\">类型</label>\r\n      <select id=\"type\" v-model=\"formData.type\" @change=\"onTypeChange\" required>\r\n        <option value=\"shop\">店铺广告</option>\r\n        <option value=\"product\">产品广告</option>\r\n        <!-- 添加其他可能的广告类型 -->\r\n      </select>\r\n    </div>\r\n\r\n<!-- 动态显示的产品选择下拉列表 -->\r\n    <div v-if=\"showProductSelect\" class=\"form-group\">\r\n      <label for=\"product\">选择商品</label>\r\n      <select id=\"product\" v-model=\"formData.selectedProduct\" required>\r\n        <option v-for=\"product in products\" :key=\"product.id\" :value=\"product.id\">\r\n          {{ product.name }}\r\n        </option>\r\n      </select>\r\n    </div>\r\n\r\n    <!-- 开始时间 -->\r\n    <div class=\"form-group\" >\r\n      <label for=\"start_time\">开始时间</label>\r\n      <input id=\"start_time\" v-model=\"formData.start_time\" type=\"date\" required />\r\n       <span id=\"start_time_error\" style=\"color: red; display: none;\">开始时间不能为空</span>\r\n    </div>\r\n\r\n    <!-- 结束时间 -->\r\n    <div class=\"form-group\">\r\n      <label for=\"end_time\">结束时间</label>\r\n      <input id=\"end_time\" v-model=\"formData.end_time\" type=\"date\" @focus=\"checkStart\" @change=\"price_cal\" required />\r\n    </div>\r\n\r\n    <!-- 价格 -->\r\n    <div class=\"form-group\">\r\n      <label for=\"price\">价格 (元)</label>\r\n      <input id=\"price\" v-model.number=\"formData.price\" type=\"number\" step=\"0.01\" min=\"0\" disabled/>\r\n    </div>\r\n\r\n  <!-- 图片上传 -->\r\n    <div class=\"form-group\">\r\n      <label for=\"picture\">图片</label>\r\n      <input id=\"picture\" ref=\"pictureInput\" type=\"file\" @change=\"handleFileChange\" />\r\n      <span v-if=\"formData.picture\">{{ formData.picture.name }}</span>\r\n      <span v-else class=\"error\" >请选择一个文件</span>\r\n    </div>\r\n\r\n    <!-- 提交按钮 -->\r\n    <button type=\"submit\" :disabled=\"isSubmitting\">提交</button>\r\n\r\n    <!-- 错误信息 -->\r\n    <div v-if=\"error\" class=\"error\">{{ error }}</div>\r\n  </form>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nexport default {\r\n  name: 'AddAdForm',\r\n  data() {\r\n    return {\r\n      formData: {\r\n        ps_id: null,\r\n        name: '',\r\n        type: 'shop',\r\n        start_time: null,\r\n        end_time: null,\r\n        price: null,\r\n        picture: null, // 这里将保存文件对象\r\n        selectedProduct: null, // 新增字段用于存储选中的产品ID\r\n      },\r\n      price:0,\r\n      showProductSelect: false, // 控制是否显示产品选择下拉列表\r\n      isSubmitting: false,\r\n      error: null,\r\n      products: [], // 存储从后端获取的产品列表\r\n    };\r\n  },\r\n  methods: {\r\n    handleFileChange(event) {\r\n      const file = event.target.files[0];\r\n      if (file) {\r\n        this.formData.picture = file; // 只保存第一个文件\r\n      } else {\r\n        this.formData.picture = null;\r\n      }\r\n    },\r\n    convertToInt(value) {\r\n      return value !== null && value !== '' ? parseInt(value, 10) : 0;\r\n    },\r\n    convertToFloat(value) {\r\n      return value !== null && value !== '' ? parseFloat(value).toFixed(2) : '0.00';\r\n    },formatDate(isoString) {\r\n      // 将 ISO 字符串解析为 Date 对象\r\n      const date = new Date(isoString);\r\n      // 获取年份、月份和日期，并确保月份和日期是两位数\r\n      const year = date.getFullYear();\r\n      const month = String(date.getMonth() + 1).padStart(2, '0');\r\n      const day = String(date.getDate()).padStart(2, '0');\r\n      // 返回格式化的日期字符串\r\n      return `${year}-${month}-${day}`;\r\n    },async checkStart() {\r\n        const startTimeInput = document.getElementById('start_time');\r\n        const startTimeError = document.getElementById('start_time_error');\r\n        if(!this.formData.start_time){\r\n          console.log(\"哈哈哈哈哈哈哈哈\")\r\n          startTimeInput.style.borderColor = 'red';\r\n          startTimeError.style.display = 'block';\r\n        }else{\r\n          console.log(this.formData.start_time)\r\n          startTimeInput.style.borderColor = '';\r\n          startTimeError.style.display = 'none';\r\n        }\r\n    },\r\n    async price_cal(){\r\n      console.log(this.formatDate.start_time)\r\n        try {\r\n          const response = await axios.get('http://localhost:8081/advertise/money',{\r\n            params: {\r\n            start: this.formatDate(this.formData.start_time),\r\n            end: this.formatDate(this.formData.end_time),\r\n            times: 0,\r\n            banner: true\r\n            }\r\n            });\r\n          this.formData.price = response.data; // 假设后端返回的是一个价格\r\n        } catch (err) {\r\n          this.error = '无法加载预计价格，请稍等';\r\n        }\r\n    },\r\n    async onTypeChange() {\r\n      if (this.formData.type === 'product') {\r\n        try {\r\n          // 从后端获取产品列表\r\n          //const response = await axios.get('http://localhost:8081/products');\r\n          this.products = [{id:1,name:'商品1'},{id:2,name:'商品2'},{id:3,name:'商品3'}]//response.data; // 假设后端返回的是一个产品数组\r\n          this.showProductSelect = true; // 显示产品选择下拉列表\r\n        } catch (err) {\r\n          this.error = '无法加载产品列表，请稍后再试';\r\n        }\r\n      } else {\r\n        this.showProductSelect = false;\r\n        this.products = [];\r\n        this.formData.selectedProduct = null;\r\n      }\r\n    },\r\n    async handleSubmit() {\r\n      try {\r\n        this.error = null;\r\n\r\n        const formData = new FormData();\r\n        const userid = this.$store.getters.userId;\r\n        const shopResponse = await axios.post('http://localhost:8081/shop/getByUser_id', {id:userid});\r\n        if ( shopResponse.data != null ) {\r\n          formData.append('shop_id',shopResponse.data.shop_id);\r\n        }\r\n        formData.append('name', this.formData.name);\r\n        // 如果是产品广告，附加选中的产品ID\r\n        if (this.formData.type === 'product' && this.formData.selectedProduct) {\r\n            formData.append('ps_id', this.convertToInt(this.formData.selectedProduct));\r\n        }else formData.append('ps_id', -1);\r\n        formData.append('type', this.formData.type);\r\n        formData.append('start_time', this.formatDate(this.formData.start_time));\r\n        formData.append('end_time', this.formatDate(this.formData.end_time));\r\n        formData.append('times', 0);\r\n        formData.append('price', this.convertToFloat(this.formData.price));\r\n        formData.append('banner', true);\r\n\r\n        // 添加文件（如果有）\r\n        if (this.formData.picture) {\r\n          formData.append('picture', this.formData.picture); // 使用正确的键名 'pictrue'\r\n        }else{\r\n          formData.append('picture',null)\r\n        }\r\n\r\n        //发送请求到服务器\r\n        const response = await axios.post('http://localhost:8081/advertise/create', formData);\r\n        if(response.status==200){\r\n            console.log(response.data);\r\n            this.$emit('refresh',response.data);\r\n        }else if(response.data==409){\r\n          alert('当前时间段广告申请已达上限');\r\n        }\r\n      } catch (err) {\r\n        this.error = err.message || '发生错误，请稍后再试';\r\n      }\r\n      console.log('到这里');\r\n      this.closeDialog();\r\n    },\r\n    // 关闭弹窗的方法\r\n    closeDialog() {\r\n      //this.dialogVisible = false;\r\n      // alert('小弹窗');\r\n      this.$emit('close-ad'); \r\n    },\r\n    clearForm() {\r\n      this.formData = {\r\n        ps_id: null,\r\n        name: '',\r\n        type: 'shop',\r\n        start_time: null,\r\n        end_time: null,\r\n        price: null,\r\n        picture: null,\r\n      };\r\n      // 手动清除文件输入框\r\n      this.$refs.pictureInput.value = null;\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\n.add-ad-form {\r\n  padding: 20px;\r\n  background-color: #fff;\r\n  border-radius: 8px;\r\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n  max-height: calc(80vh - 100px);\r\n  overflow-y: auto; /* 当内容超出容器的高度时，允许垂直滚动 */\r\n\r\n  h2 {\r\n    margin-top: 0;\r\n    font-size: 1.5em;\r\n    color: #ff6700;\r\n  }\r\n\r\n  .form-group {\r\n    margin-bottom: 1rem;\r\n\r\n    label {\r\n      display: block;\r\n      margin-bottom: 0.5rem;\r\n      font-weight: bold;\r\n    }\r\n\r\n    input, textarea, select {\r\n      width: 90%;\r\n      padding: 0.5rem;\r\n      border: 1px solid #ccc;\r\n      border-radius: 4px;\r\n      transition: border-color 0.3s ease;\r\n\r\n      &:focus {\r\n        outline: none;\r\n        border-color: #ff6700;\r\n      }\r\n    }\r\n\r\n    textarea {\r\n      resize: vertical;\r\n    }\r\n    .error{\r\n      display: inline-block;\r\n    }\r\n  }\r\n\r\n  button {\r\n    padding: 0.75rem 1.5rem;\r\n    border: none;\r\n    border-radius: 4px;\r\n    cursor: pointer;\r\n    color: #fff;\r\n    background-color: #ff6700;\r\n    transition: background-color 0.3s ease;\r\n\r\n    &:hover:not(:disabled) {\r\n      background-color: darken(#ff6700, 10%);\r\n    }\r\n\r\n    &[disabled] {\r\n      opacity: 0.65;\r\n      cursor: not-allowed;\r\n    }\r\n  }\r\n\r\n  .error {\r\n    margin-top: 1rem;\r\n    color: red;\r\n  }\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}