{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  name: 'UserComment',\n  data() {\n    return {\n      imageList: [],\n      // 存储图片预览URL\n      commentForm: {\n        comment_id: null,\n        user_id: null,\n        order_id: null,\n        content: '',\n        level: 5,\n        product_id: null,\n        status: '待评价',\n        created_time: null\n      }\n    };\n  },\n  computed: {\n    canSubmit() {\n      return this.commentForm.content.trim() && this.commentForm.level > 0 && this.commentForm.order_id && this.commentForm.product_id;\n    }\n  },\n  created() {\n    // 从路由参数获取订单ID和商品ID\n    this.commentForm.order_id = Number(this.$route.query.orderId) || null;\n    this.commentForm.product_id = Number(this.$route.query.productId) || null;\n    this.commentForm.user_id = this.$store.getters.userId;\n  },\n  methods: {\n    beforeUpload(file) {\n      // 验证文件类型和大小\n      const isImage = file.type.startsWith('image/');\n      const isLt2M = file.size / 1024 / 1024 < 2;\n      if (!isImage) {\n        this.$message.error('只能上传图片文件！');\n        return false;\n      }\n      if (!isLt2M) {\n        this.$message.error('图片大小不能超过 2MB！');\n        return false;\n      }\n      if (this.imageList.length >= 5) {\n        this.$message.warning('最多只能上传5张图片');\n        return false;\n      }\n      return true;\n    },\n    async handleUpload(options) {\n      try {\n        const file = options.file;\n        const formData = new FormData();\n        formData.append('file', file);\n\n        // 上传图片到后端\n        const response = await this.$axios.post('http://localhost:8081/comment/uploadpic', formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        });\n        if (response.data) {\n          // 显示图片预览\n          const reader = new FileReader();\n          reader.readAsDataURL(file);\n          reader.onload = () => {\n            this.imageList.push(reader.result);\n          };\n          this.$message.success('图片上传成功');\n        } else {\n          throw new Error('上传失败');\n        }\n      } catch (error) {\n        this.$message.error('图片上传失败，请重试');\n        console.error('上传图片失败:', error);\n      }\n    },\n    removeImage(index) {\n      this.imageList.splice(index, 1);\n    },\n    async submitComment() {\n      if (!this.canSubmit) {\n        return;\n      }\n      try {\n        // 构造符合后端要求的数据格式\n        const commentData = {\n          comment_id: null,\n          // 由后端生成\n          user_id: this.commentForm.user_id,\n          order_id: this.commentForm.order_id,\n          content: this.commentForm.content.trim(),\n          // 去除空格\n          level: Number(this.commentForm.level),\n          // 确保是数字\n          product_id: this.commentForm.product_id,\n          status: this.commentForm.status,\n          created_time: null // 由后端生成\n        };\n\n        // 发送评价数据到后端\n        const response = await this.$axios.post('http://localhost:8081/comment/create', commentData);\n        if (response.status === 201) {\n          this.$message.success('评价提交成功！');\n          this.$router.push('/user/orders');\n        } else {\n          throw new Error(response.data.message || '提交失败');\n        }\n      } catch (error) {\n        this.$message.error(error.message || '评价提交失败，请重试');\n        console.error('提交评价失败:', error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["name","data","imageList","commentForm","comment_id","user_id","order_id","content","level","product_id","status","created_time","computed","canSubmit","trim","created","Number","$route","query","orderId","productId","$store","getters","userId","methods","beforeUpload","file","isImage","type","startsWith","isLt2M","size","$message","error","length","warning","handleUpload","options","formData","FormData","append","response","$axios","post","headers","reader","FileReader","readAsDataURL","onload","push","result","success","Error","console","removeImage","index","splice","submitComment","commentData","$router","message"],"sources":["src/views/usermodel/UserComment.vue"],"sourcesContent":["<template>\r\n    <div class=\"review-container\">\r\n      <div class=\"review-card\">\r\n        <h2>商品评价</h2>\r\n        \r\n        <!-- 图片上传区域 -->\r\n        <div class=\"upload-section\">\r\n          <el-upload\r\n            class=\"image-uploader\"\r\n            action=\"#\"\r\n            :http-request=\"handleUpload\"\r\n            :show-file-list=\"false\"\r\n            :before-upload=\"beforeUpload\"\r\n            multiple\r\n          >\r\n            <div class=\"upload-box\" v-if=\"imageList.length < 5\">\r\n              <i class=\"el-icon-plus\"></i>\r\n              <span>添加图片</span>\r\n            </div>\r\n          </el-upload>\r\n          \r\n          <!-- 已上传的图片预览 -->\r\n          <div class=\"image-preview-list\">\r\n            <div v-for=\"(img, index) in imageList\" :key=\"index\" class=\"image-preview-item\">\r\n              <img :src=\"img\" alt=\"评价图片\">\r\n              <div class=\"image-actions\">\r\n                <i class=\"el-icon-delete\" @click=\"removeImage(index)\"></i>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n  \r\n        <!-- 评价内容输入框 -->\r\n        <div class=\"content-section\">\r\n          <el-input\r\n            type=\"textarea\"\r\n            v-model=\"commentForm.content\"\r\n            :rows=\"4\"\r\n            placeholder=\"请输入您的评价内容...\"\r\n            :maxlength=\"200\"\r\n            show-word-limit\r\n          ></el-input>\r\n        </div>\r\n  \r\n        <!-- 星级评分 -->\r\n        <div class=\"rating-section\">\r\n          <span class=\"rating-label\">商品评分：</span>\r\n          <el-rate\r\n            v-model=\"commentForm.level\"\r\n            :colors=\"['#99A9BF', '#F7BA2A', '#FF9900']\"\r\n          ></el-rate>\r\n        </div>\r\n  \r\n        <!-- 提交按钮 -->\r\n        <div class=\"submit-section\">\r\n          <el-button type=\"primary\" @click=\"submitComment\" :disabled=\"!canSubmit\">\r\n            提交评价\r\n          </el-button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  export default {\r\n    name: 'UserComment',\r\n    data() {\r\n      return {\r\n        imageList: [], // 存储图片预览URL\r\n        commentForm: {\r\n          comment_id: null,\r\n          user_id: null,\r\n          order_id: null,\r\n          content: '',\r\n          level: 5,\r\n          product_id: null,\r\n          status: '待评价',\r\n          created_time: null\r\n        }\r\n      }\r\n    },\r\n    computed: {\r\n      canSubmit() {\r\n        return this.commentForm.content.trim() && \r\n               this.commentForm.level > 0 &&\r\n               this.commentForm.order_id &&\r\n               this.commentForm.product_id\r\n      }\r\n    },\r\n    created() {\r\n      // 从路由参数获取订单ID和商品ID\r\n      this.commentForm.order_id = Number(this.$route.query.orderId) || null\r\n      this.commentForm.product_id = Number(this.$route.query.productId) || null\r\n      this.commentForm.user_id = this.$store.getters.userId;\r\n    },\r\n    methods: {\r\n      beforeUpload(file) {\r\n        // 验证文件类型和大小\r\n        const isImage = file.type.startsWith('image/')\r\n        const isLt2M = file.size / 1024 / 1024 < 2\r\n  \r\n        if (!isImage) {\r\n          this.$message.error('只能上传图片文件！')\r\n          return false\r\n        }\r\n        if (!isLt2M) {\r\n          this.$message.error('图片大小不能超过 2MB！')\r\n          return false\r\n        }\r\n  \r\n        if (this.imageList.length >= 5) {\r\n          this.$message.warning('最多只能上传5张图片')\r\n          return false\r\n        }\r\n  \r\n        return true\r\n      },\r\n      async handleUpload(options) {\r\n        try {\r\n          const file = options.file;\r\n          const formData = new FormData();\r\n          formData.append('file', file);\r\n          \r\n          // 上传图片到后端\r\n          const response = await this.$axios.post('http://localhost:8081/comment/uploadpic', formData, {\r\n            headers: {\r\n              'Content-Type': 'multipart/form-data'\r\n            }\r\n          });\r\n\r\n          if (response.data) {\r\n            // 显示图片预览\r\n            const reader = new FileReader();\r\n            reader.readAsDataURL(file);\r\n            reader.onload = () => {\r\n              this.imageList.push(reader.result);\r\n            };\r\n\r\n            this.$message.success('图片上传成功');\r\n          } else {\r\n            throw new Error('上传失败');\r\n          }\r\n        } catch (error) {\r\n          this.$message.error('图片上传失败，请重试');\r\n          console.error('上传图片失败:', error);\r\n        }\r\n      },\r\n      removeImage(index) {\r\n        this.imageList.splice(index, 1);\r\n      },\r\n      async submitComment() {\r\n        if (!this.canSubmit) {\r\n          return\r\n        }\r\n  \r\n        try {\r\n          // 构造符合后端要求的数据格式\r\n          const commentData = {\r\n            comment_id: null,  // 由后端生成\r\n            user_id: this.commentForm.user_id,\r\n            order_id: this.commentForm.order_id,\r\n            content: this.commentForm.content.trim(),  // 去除空格\r\n            level: Number(this.commentForm.level),     // 确保是数字\r\n            product_id: this.commentForm.product_id,\r\n            status: this.commentForm.status,\r\n            created_time: null  // 由后端生成\r\n          }\r\n  \r\n          // 发送评价数据到后端\r\n          const response = await this.$axios.post('http://localhost:8081/comment/create', commentData)\r\n          \r\n          if (response.status === 201) {\r\n            this.$message.success('评价提交成功！')\r\n            this.$router.push('/user/orders')\r\n          } else {\r\n            throw new Error(response.data.message || '提交失败')\r\n          }\r\n        } catch (error) {\r\n          this.$message.error(error.message || '评价提交失败，请重试')\r\n          console.error('提交评价失败:', error)\r\n        }\r\n      }\r\n    }\r\n  }\r\n  </script>\r\n  \r\n  <style lang=\"scss\" scoped>\r\n  .review-container {\r\n    padding: 40px 20px;\r\n    background-color: #f5f5f5;\r\n    min-height: calc(100vh - 120px);\r\n  \r\n    .review-card {\r\n      max-width: 800px;\r\n      margin: 0 auto;\r\n      background: white;\r\n      padding: 30px;\r\n      border-radius: 8px;\r\n      box-shadow: 0 2px 12px rgba(0, 0, 0, 0.1);\r\n  \r\n      h2 {\r\n        text-align: center;\r\n        margin-bottom: 30px;\r\n        font-weight: normal;\r\n        color: #333;\r\n      }\r\n    }\r\n  \r\n    .upload-section {\r\n      margin-bottom: 20px;\r\n  \r\n      .upload-box {\r\n        width: 120px;\r\n        height: 120px;\r\n        border: 1px dashed #d9d9d9;\r\n        border-radius: 6px;\r\n        display: flex;\r\n        flex-direction: column;\r\n        justify-content: center;\r\n        align-items: center;\r\n        cursor: pointer;\r\n        transition: border-color 0.3s;\r\n  \r\n        &:hover {\r\n          border-color: #409EFF;\r\n        }\r\n  \r\n        i {\r\n          font-size: 28px;\r\n          color: #8c939d;\r\n          margin-bottom: 5px;\r\n        }\r\n  \r\n        span {\r\n          font-size: 14px;\r\n          color: #8c939d;\r\n        }\r\n      }\r\n  \r\n      .image-preview-list {\r\n        display: flex;\r\n        flex-wrap: wrap;\r\n        gap: 10px;\r\n        margin-top: 10px;\r\n  \r\n        .image-preview-item {\r\n          position: relative;\r\n          width: 120px;\r\n          height: 120px;\r\n  \r\n          img {\r\n            width: 100%;\r\n            height: 100%;\r\n            object-fit: cover;\r\n            border-radius: 6px;\r\n          }\r\n  \r\n          .image-actions {\r\n            position: absolute;\r\n            top: 5px;\r\n            right: 5px;\r\n            \r\n            i {\r\n              color: #fff;\r\n              font-size: 18px;\r\n              cursor: pointer;\r\n              text-shadow: 0 0 3px rgba(0,0,0,0.5);\r\n              \r\n              &:hover {\r\n                color: #ff4444;\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  \r\n    .content-section {\r\n      margin-bottom: 20px;\r\n    }\r\n  \r\n    .rating-section {\r\n      margin-bottom: 30px;\r\n      display: flex;\r\n      align-items: center;\r\n  \r\n      .rating-label {\r\n        margin-right: 10px;\r\n        color: #606266;\r\n      }\r\n    }\r\n  \r\n    .submit-section {\r\n      text-align: center;\r\n  \r\n      .el-button {\r\n        padding: 12px 40px;\r\n      }\r\n    }\r\n  }\r\n  </style>\r\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}