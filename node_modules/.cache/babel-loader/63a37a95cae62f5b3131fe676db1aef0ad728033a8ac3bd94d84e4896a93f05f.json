{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  data() {\n    return {\n      user_id: 1,\n      shop_id: '',\n      // session获取\n      pictures_id: '',\n      // 存储图片的id\n      product: {\n        name: '',\n        category: '',\n        price: null,\n        description: '',\n        stock: [],\n        unit: '',\n        notice: '',\n        images: [] // 存储图片信息\n      },\n      categories: ['生鲜食品', '零食小吃', '酒水饮料', '干货腌货', '即食食品', '农产品']\n    };\n  },\n  created() {\n    // 页面加载时获取店铺信息\n    this.fetchShopIdByUserId();\n    this.user_id = this.$store.getters.userId;\n  },\n  methods: {\n    async fetchShopIdByUserId() {\n      this.user_id = this.$store.getters.userId;\n      try {\n        const shopResponse = await axios.post('http://localhost:8081/shop/getByUser_id', {\n          id: this.user_id\n        });\n        if (shopResponse.data) {\n          const shopData = shopResponse.data;\n          this.shop_id = shopData.shop_id;\n        }\n      } catch (error) {\n        console.error('获取店铺信息失败:', error);\n        alert('获取店铺信息失败');\n      }\n    },\n    addStock() {\n      if (this.product.stock.length < 5) {\n        this.product.stock.push({\n          flavor: '',\n          quantity: 0\n        });\n      }\n    },\n    removeStock(index) {\n      this.product.stock.splice(index, 1);\n    },\n    addImage() {\n      if (this.product.images.length < 5) {\n        this.product.images.push({\n          file: null,\n          previewUrl: null\n        });\n      }\n    },\n    handleImageUpload(event, index) {\n      this.user_id = this.$store.getters.userId;\n      const file = event.target.files[0];\n      if (file) {\n        const fileType = file.type;\n        const fileSize = file.size;\n\n        // 验证文件类型和大小\n        if (['image/jpeg', 'image/png'].includes(fileType) && fileSize <= 20 * 1024 * 1024) {\n          // 限制大小为5MB以内\n          const reader = new FileReader();\n          reader.onload = e => {\n            this.$set(this.product.images, index, {\n              file: file,\n              previewUrl: e.target.result\n            });\n          };\n          reader.readAsDataURL(file);\n        } else {\n          alert(\"只支持上传 jpg, jpeg, png 格式的图片，并且大小不能超过 20MB！\");\n        }\n      }\n    },\n    removeImage(index) {\n      this.product.images.splice(index, 1);\n    },\n    async submitForm() {\n      this.user_id = this.$store.getters.userId;\n      // 准备表单数据\n      const formData = new FormData();\n      formData.append('name', this.product.name);\n      formData.append('category', this.product.category);\n      formData.append('price', this.product.price);\n      formData.append('description', this.product.description);\n      formData.append('unit', this.product.unit);\n      formData.append('notice', this.product.notice);\n      formData.append('shop_id', this.shop_id);\n\n      // 将库存信息（每个口味和数量）添加到 FormData 中\n      formData.append('stock', JSON.stringify(this.product.stock));\n\n      // 将图片信息添加到 FormData 中（最多5个文件）\n      for (let image of this.product.images) {\n        if (image.file) {\n          let imageData = new FormData();\n          imageData.append(\"file\", image.file);\n          const response = await axios.post('http://localhost:8081/pic/uploadAndId', imageData);\n          if (response.status === 200) {\n            this.pictures_id = this.pictures_id + response.data + \",\";\n            imageData = null;\n          } else {\n            console.error('文件上传失败');\n          }\n        }\n      }\n      // 将图片信息（id列表）添加到 FormData 中\n      formData.append('images', this.pictures_id);\n      axios.post('http://localhost:8081/product/addProduct', formData).then(response => {\n        if (response.status === 200) {\n          alert('申请成功');\n          // 关闭弹窗啥的\n          this.$emit('close');\n        } else if (response.status === 409) {\n          alert('存在重名商品，请重新输入');\n          window.location.reload();\n        } else {\n          alert('找不到店铺，请检查登录状态');\n          this.$emit('close');\n        }\n      }).catch(error => {\n        if (error.response.status === 409) {\n          alert('存在重名商品，请重新输入');\n          window.location.reload();\n        } else {\n          alert('找不到店铺，请检查登录状态');\n          this.$emit('close');\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","data","user_id","shop_id","pictures_id","product","name","category","price","description","stock","unit","notice","images","categories","created","fetchShopIdByUserId","$store","getters","userId","methods","shopResponse","post","id","shopData","error","console","alert","addStock","length","push","flavor","quantity","removeStock","index","splice","addImage","file","previewUrl","handleImageUpload","event","target","files","fileType","type","fileSize","size","includes","reader","FileReader","onload","e","$set","result","readAsDataURL","removeImage","submitForm","formData","FormData","append","JSON","stringify","image","imageData","response","status","then","$emit","window","location","reload","catch"],"sources":["src/views/shopmodel/AddProduct.vue"],"sourcesContent":["<template>\r\n  <div class=\"create-product\">\r\n    <h2>创建商品</h2>\r\n    <form @submit.prevent=\"submitForm\" class=\"product-form\">\r\n      <!-- 商品名称 -->\r\n      <div class=\"form-group\">\r\n        <label for=\"productName\">商品名称</label>\r\n        <input v-model=\"product.name\" type=\"text\" id=\"productName\" required />\r\n      </div>\r\n\r\n      <!-- 商品类别 -->\r\n      <div class=\"form-group\">\r\n        <label for=\"category\">类别</label>\r\n        <select v-model=\"product.category\" id=\"category\" required>\r\n          <option v-for=\"category in categories\" :key=\"category\" :value=\"category\">\r\n            {{ category }}\r\n          </option>\r\n        </select>\r\n      </div>\r\n\r\n      <!-- 定价 -->\r\n      <div class=\"form-group\">\r\n        <label for=\"price\">定价</label>\r\n        <input v-model=\"product.price\" type=\"number\" id=\"price\" min=\"0\" step=\"0.01\" required />\r\n      </div>\r\n\r\n      <!-- 商品描述 -->\r\n      <div class=\"form-group\">\r\n        <label for=\"description\">商品描述</label>\r\n        <textarea v-model=\"product.description\" id=\"description\" required></textarea>\r\n      </div>\r\n\r\n      <!-- 初始库存量 -->\r\n      <div class=\"form-group\">\r\n        <label for=\"stock\">初始库存量</label>\r\n        <div class=\"stock-tags\">\r\n          <div v-for=\"(stock, index) in product.stock\" :key=\"index\" class=\"stock-tag\">\r\n            <input v-model=\"stock.flavor\" placeholder=\"口味\" />\r\n            <input v-model=\"stock.quantity\" type=\"number\" min=\"0\" placeholder=\"库存量\" />\r\n            <button type=\"button\" @click=\"removeStock(index)\">移除</button>\r\n          </div>\r\n          <button type=\"button\" @click=\"addStock\" :disabled=\"product.stock.length >= 5\">添加组合标签</button>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- 售卖单位 -->\r\n      <div class=\"form-group\">\r\n        <label for=\"unit\">售卖单位</label>\r\n        <input v-model=\"product.unit\" type=\"text\" id=\"unit\" required />\r\n      </div>\r\n\r\n      <!-- 注意事项 -->\r\n      <div class=\"form-group\">\r\n        <label for=\"notice\">注意事项</label>\r\n        <textarea v-model=\"product.notice\" id=\"notice\" required></textarea>\r\n      </div>\r\n\r\n      <!-- 商品图片上传 -->\r\n      <div class=\"form-group\">\r\n        <label for=\"productImages\">商品图片</label>\r\n        <div class=\"image-upload-container\">\r\n          <input \r\n            type=\"file\" \r\n            accept=\"image/*\"\r\n            v-for=\"(image, index) in product.images\" \r\n            :key=\"index\"\r\n            :id=\"'image-' + index\"\r\n            @change=\"handleImageUpload($event, index)\"\r\n            :disabled=\"product.images.length >= 5\"\r\n          />\r\n          <button type=\"button\" @click=\"addImage\" :disabled=\"product.images.length >= 5\">添加图片</button>\r\n        </div>\r\n        <div class=\"image-previews\">\r\n          <div v-for=\"(image, index) in product.images\" :key=\"'preview-' + index\" class=\"image-preview\">\r\n            <img :src=\"image.previewUrl\" :alt=\"'preview-' + index\" />\r\n            <button type=\"button\" @click=\"removeImage(index)\">移除</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- 提交按钮 -->\r\n      <div class=\"form-group\">\r\n        <button type=\"submit\" class=\"submit-button\">申请上架</button>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      user_id: 1,\r\n      shop_id: '',     // session获取\r\n      pictures_id: '',  // 存储图片的id\r\n      product: {\r\n        name: '',\r\n        category: '',\r\n        price: null,\r\n        description: '',\r\n        stock: [],\r\n        unit: '',\r\n        notice: '',\r\n        images: [], // 存储图片信息\r\n      },\r\n      categories: [\r\n        '生鲜食品', '零食小吃', '酒水饮料', '干货腌货', '即食食品', '农产品'\r\n      ],\r\n    };\r\n  },\r\n  created() {\r\n    // 页面加载时获取店铺信息\r\n    this.fetchShopIdByUserId();\r\n    this.user_id=this.$store.getters.userId;\r\n  },\r\n  methods: {\r\n    async fetchShopIdByUserId() {\r\n      this.user_id=this.$store.getters.userId;\r\n      try {\r\n        const shopResponse = await axios.post('http://localhost:8081/shop/getByUser_id', {id:this.user_id});\r\n        if ( shopResponse.data ) {\r\n          const shopData = shopResponse.data;\r\n          this.shop_id = shopData.shop_id;\r\n        }\r\n      } catch (error) {\r\n        console.error('获取店铺信息失败:', error);\r\n        alert('获取店铺信息失败');\r\n      }\r\n    },\r\n    addStock() {\r\n      if (this.product.stock.length < 5) {\r\n        this.product.stock.push({ flavor: '', quantity: 0 });\r\n      }\r\n    },\r\n    removeStock(index) {\r\n      this.product.stock.splice(index, 1);\r\n    },\r\n    addImage() {\r\n      if (this.product.images.length < 5) {\r\n        this.product.images.push({ file: null, previewUrl: null });\r\n      }\r\n    },\r\n    handleImageUpload(event, index) {\r\n      this.user_id=this.$store.getters.userId;\r\n      const file = event.target.files[0];\r\n\r\n      if (file) {\r\n          const fileType = file.type;\r\n          const fileSize = file.size;\r\n\r\n          // 验证文件类型和大小\r\n          if (['image/jpeg', 'image/png'].includes(fileType) && fileSize <= 20 * 1024 * 1024) { // 限制大小为5MB以内\r\n            const reader = new FileReader();\r\n            reader.onload = (e) => {\r\n              this.$set(this.product.images, index, {\r\n              file: file,\r\n              previewUrl: e.target.result\r\n              });\r\n          };\r\n          reader.readAsDataURL(file);\r\n          } else {\r\n              alert(\"只支持上传 jpg, jpeg, png 格式的图片，并且大小不能超过 20MB！\");\r\n          }\r\n      }\r\n    },\r\n    removeImage(index) {\r\n      this.product.images.splice(index, 1);\r\n    },\r\n    async submitForm() {\r\n      this.user_id=this.$store.getters.userId;\r\n      // 准备表单数据\r\n      const formData = new FormData();\r\n      formData.append('name', this.product.name);\r\n      formData.append('category', this.product.category);\r\n      formData.append('price', this.product.price);\r\n      formData.append('description', this.product.description);\r\n      formData.append('unit', this.product.unit);\r\n      formData.append('notice', this.product.notice);\r\n      formData.append('shop_id', this.shop_id);\r\n\r\n      // 将库存信息（每个口味和数量）添加到 FormData 中\r\n      formData.append('stock', JSON.stringify(this.product.stock));\r\n\r\n      // 将图片信息添加到 FormData 中（最多5个文件）\r\n      for (let image of this.product.images){\r\n          if (image.file) {\r\n            let imageData = new FormData();\r\n            imageData.append(\"file\", image.file);\r\n            const response = await axios.post('http://localhost:8081/pic/uploadAndId', imageData);\r\n            if ( response.status === 200 ){\r\n              this.pictures_id = this.pictures_id + response.data + \",\";\r\n              imageData = null;\r\n            } else {\r\n                console.error('文件上传失败');\r\n            }\r\n          }\r\n      }\r\n      // 将图片信息（id列表）添加到 FormData 中\r\n      formData.append('images', this.pictures_id);\r\n\r\n      axios.post('http://localhost:8081/product/addProduct', formData)\r\n          .then(response => {\r\n            if ( response.status === 200 ){\r\n              alert('申请成功');\r\n              // 关闭弹窗啥的\r\n              this.$emit('close');\r\n            } else if ( response.status === 409 ) {\r\n              alert('存在重名商品，请重新输入');\r\n              window.location.reload();\r\n            } else {\r\n              alert('找不到店铺，请检查登录状态');\r\n              this.$emit('close');\r\n            }\r\n          })\r\n          .catch(error => {\r\n            if ( error.response.status === 409 ){\r\n              alert('存在重名商品，请重新输入');\r\n              window.location.reload();\r\n            } else {\r\n              alert('找不到店铺，请检查登录状态');\r\n              this.$emit('close');\r\n            }\r\n          });\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.create-product {\r\n  width: 100%;\r\n  max-width: 600px;\r\n  margin: 0 auto;\r\n}\r\n\r\n.product-form {\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.form-group {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.form-group label {\r\n  display: block;\r\n  font-weight: bold;\r\n  margin-bottom: 5px;\r\n}\r\n\r\ninput, select, textarea {\r\n  width: 100%;\r\n  padding: 10px;\r\n  font-size: 14px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 5px;\r\n}\r\n\r\ntextarea {\r\n  resize: vertical;\r\n  min-height: 100px;\r\n}\r\n\r\n.stock-tags {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 10px;\r\n}\r\n\r\n.stock-tag {\r\n  display: flex;\r\n  gap: 10px;\r\n  align-items: center;\r\n}\r\n\r\n.stock-tag input {\r\n  flex: 1;\r\n}\r\n\r\nbutton {\r\n  background-color: #ff6700;\r\n  color: white;\r\n  border: none;\r\n  padding: 5px 10px;\r\n  cursor: pointer;\r\n  border-radius: 5px;\r\n}\r\n\r\nbutton:disabled {\r\n  background-color: #ccc;\r\n  cursor: not-allowed;\r\n}\r\n\r\n.submit-button {\r\n  background-color: #4CAF50;\r\n  color: white;\r\n  border: none;\r\n  padding: 10px;\r\n  font-size: 16px;\r\n  cursor: pointer;\r\n  border-radius: 5px;\r\n}\r\n\r\n.submit-button:hover {\r\n  background-color: #45a049;\r\n}\r\n\r\n/* 图片上传部分样式 */\r\n.image-upload-container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 10px;\r\n}\r\n\r\n.image-previews {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 10px;\r\n}\r\n\r\n.image-preview {\r\n  position: relative;\r\n}\r\n\r\n.image-preview img {\r\n  width: 100px;\r\n  height: 100px;\r\n  object-fit: cover;\r\n  border-radius: 5px;\r\n}\r\n\r\n.image-preview button {\r\n  position: absolute;\r\n  top: 5px;\r\n  right: 5px;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  color: white;\r\n  border: none;\r\n  padding: 2px 5px;\r\n  border-radius: 50%;\r\n  cursor: pointer;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}