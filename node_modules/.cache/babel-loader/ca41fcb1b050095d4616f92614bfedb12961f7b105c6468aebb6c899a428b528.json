{"ast":null,"code":"import \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport \"core-js/modules/esnext.iterator.map.js\";\nimport axios from 'axios'; // 暂时注释掉未使用的导入\n\nexport default {\n  name: 'ShopAuditView',\n  data() {\n    return {\n      formattedShopDetails: [],\n      // 用于展示详情和修改\n      dialogInfoVisibleShop: false,\n      // 详情弹窗\n      formattedProductDetails: [],\n      // 用于展示详情和修改\n      dialogInfoVisible: false,\n      // 详情弹窗\n      shopList: [],\n      rejectDialogVisible: false,\n      rejectReason: '',\n      currentShop: null,\n      categoryMap: {\n        'fresh': '生鲜食品',\n        'snack': '零食小吃',\n        'drink': '酒水饮料',\n        'dry': '干货腌货',\n        'instant': '即食食品',\n        'green': '农产品'\n      }\n    };\n  },\n  methods: {\n    // 库存解析：将库存字段从字符串转换为对象\n    parseJson(str) {\n      return JSON.parse(str);\n    },\n    async viewDetails(product) {\n      let pictures = [];\n      // 查images的url\n      const imageResponse = await axios.post('http://localhost:8081/pic/getManyUrl', {\n        id: product.picture_id\n      });\n      if (imageResponse.data != null) {\n        pictures = imageResponse.data;\n      }\n      // 格式化商品详情数据，适配弹窗中表格的展示\n      this.formattedProductDetails = [{\n        label: '商品名称',\n        value: product.name\n      }, {\n        label: '类别',\n        value: this.categoryMap[product.category]\n      }, {\n        label: '定价',\n        value: product.price\n      }, {\n        label: '描述',\n        value: product.description\n      }, {\n        label: '创建时间',\n        value: product.created_time\n      }, {\n        label: '更新时间',\n        value: product.updated_time\n      }, {\n        label: '库存量',\n        value: this.parseJson(product.quantity).map(item => `${item.flavor}: ${item.quantity}`).join(', ')\n      }, {\n        label: '售卖单位',\n        value: product.unit\n      }, {\n        label: '商品图片',\n        value: pictures\n      }, {\n        label: '注意事项',\n        value: product.notice\n      }, {\n        label: '特产地',\n        value: product.location\n      }];\n\n      // 打开弹窗\n      this.dialogInfoVisible = true;\n    },\n    // eslint-disable-next-line no-unused-vars\n    async approveShop(shop) {\n      let data = new FormData();\n      data.append(\"id\", shop.product_id);\n      data.append(\"status\", \"empty\");\n      const proAddResponse = await axios.post('http://localhost:8081/product/updateStatus', data);\n      if (proAddResponse.status === 200) {\n        alert('已通过审核');\n        window.location.reload();\n      }\n    },\n    rejectShop(shop) {\n      this.currentShop = shop;\n      this.rejectDialogVisible = true;\n    },\n    async confirmReject() {\n      const proAddResponse = await axios.post('http://localhost:8081/product/insertReason', {\n        id: this.currentShop.product_id,\n        status: \"suspended\",\n        reason: this.rejectReason\n      });\n      if (proAddResponse.status === 200) {\n        alert('已驳回申请');\n        window.location.reload();\n      }\n      this.rejectDialogVisible = false;\n    },\n    async viewDetailsShop(product) {\n      let shop = {};\n      const shopResponse = await axios.post('http://localhost:8081/shop/getById', {\n        id: product.shop_id\n      });\n      if (shopResponse.data != null) {\n        shop = shopResponse.data;\n      }\n      let pictures = '';\n      // 查images的url\n      const imageResponse = await axios.post('http://localhost:8081/pic/getUrl', {\n        id: shop.picture_id\n      });\n      if (imageResponse.data != null) {\n        pictures = imageResponse.data;\n      }\n      // 格式化商品详情数据，适配弹窗中表格的展示\n      this.formattedShopDetails = [{\n        label: '店铺名称',\n        value: shop.shop_name\n      }, {\n        label: '店铺描述',\n        value: shop.shop_description\n      }, {\n        label: '创建时间',\n        value: shop.created_time\n      }, {\n        label: '更新时间',\n        value: shop.updated_time\n      }, {\n        label: '店铺等级',\n        value: shop.level\n      }, {\n        label: '许可证',\n        value: pictures\n      }, {\n        label: '特产地',\n        value: shop.location\n      }];\n\n      // 打开弹窗\n      this.dialogInfoVisibleShop = true;\n    }\n  },\n  async created() {\n    const proAddResponse = await axios.post('http://localhost:8081/product/', {});\n    if (proAddResponse.data != null) {\n      this.shopList = proAddResponse.data.filter(product => product.status === 'waiting');\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","formattedShopDetails","dialogInfoVisibleShop","formattedProductDetails","dialogInfoVisible","shopList","rejectDialogVisible","rejectReason","currentShop","categoryMap","methods","parseJson","str","JSON","parse","viewDetails","product","pictures","imageResponse","post","id","picture_id","label","value","category","price","description","created_time","updated_time","quantity","map","item","flavor","join","unit","notice","location","approveShop","shop","FormData","append","product_id","proAddResponse","status","alert","window","reload","rejectShop","confirmReject","reason","viewDetailsShop","shopResponse","shop_id","shop_name","shop_description","level","created","filter"],"sources":["src/views/admin/ProductAuditView.vue"],"sourcesContent":["<template>\r\n  <div class=\"shop-audit\">\r\n    <el-table :data=\"shopList\" style=\"width: 100%\">\r\n      <el-table-column prop=\"name\" label=\"商品名称\"></el-table-column>\r\n      <el-table-column prop=\"description\" label=\"商品描述\"></el-table-column>\r\n      <el-table-column prop=\"price\" label=\"定价\"></el-table-column>\r\n      <el-table-column prop=\"updated_time\" label=\"申请时间\"></el-table-column>\r\n      <el-table-column label=\"操作\" width=\"200\">\r\n        <template slot-scope=\"scope\">\r\n          <el-button size=\"mini\" @click=\"viewDetails(scope.row)\">查看商品详情</el-button>\r\n          <el-button size=\"mini\" @click=\"viewDetailsShop(scope.row)\">查看所属店铺</el-button>\r\n          <el-button size=\"mini\" type=\"success\" @click=\"approveShop(scope.row)\">通过</el-button>\r\n          <el-button size=\"mini\" type=\"danger\" @click=\"rejectShop(scope.row)\">驳回</el-button>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n\r\n    <!-- 驳回原因对话框 -->\r\n    <el-dialog title=\"驳回原因\" :visible.sync=\"rejectDialogVisible\" width=\"30%\">\r\n      <el-input\r\n        type=\"textarea\"\r\n        :rows=\"4\"\r\n        placeholder=\"请输入驳回原因\"\r\n        v-model=\"rejectReason\">\r\n      </el-input>\r\n      <span slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"rejectDialogVisible = false\">取 消</el-button>\r\n        <el-button type=\"primary\" @click=\"confirmReject\">确 定</el-button>\r\n      </span>\r\n    </el-dialog>\r\n\r\n    <!-- 店铺详情弹窗 -->\r\n    <el-dialog :visible.sync=\"dialogInfoVisibleShop\" title=\"店铺详情\">\r\n      <el-table :data=\"this.formattedShopDetails\" style=\"width: 100%\">\r\n        <el-table-column prop=\"label\"></el-table-column>\r\n        <el-table-column prop=\"value\">\r\n          <template slot-scope=\"scope\">\r\n            <!-- 判断是否为商品图片 -->\r\n            <template v-if=\"scope.row.label === '许可证'\">\r\n              <img :src=\"'http://localhost:8081'+scope.row.value\" alt=\"商品图片\" style=\"width: 50px; height: 50px; object-fit: cover;\" />\r\n            </template>\r\n            <!-- 显示其他字段 -->\r\n            <template v-else>\r\n              <span>{{ scope.row.value }}</span>\r\n            </template>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n      <div slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"dialogInfoVisibleShop = false\">关闭</el-button>\r\n      </div>\r\n    </el-dialog>\r\n\r\n    <!-- 商品详情弹窗 -->\r\n    <el-dialog :visible.sync=\"dialogInfoVisible\" title=\"商品详情\">\r\n      <el-table :data=\"this.formattedProductDetails\" style=\"width: 100%\">\r\n        <el-table-column prop=\"label\"></el-table-column>\r\n        <el-table-column prop=\"value\">\r\n          <template slot-scope=\"scope\">\r\n            <!-- 判断是否为商品图片 -->\r\n            <template v-if=\"scope.row.label === '商品图片'\">\r\n              <!-- 如果是商品图片，则遍历图片数组并显示 -->\r\n              <div v-for=\"(image, index) in scope.row.value\" :key=\"index\" style=\"display: inline-block; margin-right: 10px;\">\r\n                <img :src=\"'http://localhost:8081'+image\" alt=\"商品图片\" style=\"width: 50px; height: 50px; object-fit: cover;\" />\r\n              </div>\r\n            </template>\r\n            <!-- 显示其他字段 -->\r\n            <template v-else>\r\n              <span>{{ scope.row.value }}</span>\r\n            </template>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n      <div slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"dialogInfoVisible = false\">关闭</el-button>\r\n      </div>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';  // 暂时注释掉未使用的导入\r\n\r\nexport default {\r\n  name: 'ShopAuditView',\r\n  data() {\r\n    return {\r\n      formattedShopDetails:[],   // 用于展示详情和修改\r\n      dialogInfoVisibleShop: false,     // 详情弹窗\r\n      formattedProductDetails:[],   // 用于展示详情和修改\r\n      dialogInfoVisible: false,     // 详情弹窗\r\n      shopList: [],\r\n      rejectDialogVisible: false,\r\n      rejectReason: '',\r\n      currentShop: null,\r\n      categoryMap: {\r\n          'fresh': '生鲜食品',\r\n          'snack': '零食小吃',\r\n          'drink': '酒水饮料',\r\n          'dry': '干货腌货',\r\n          'instant': '即食食品',\r\n          'green': '农产品'\r\n        }\r\n    }\r\n  },\r\n  methods: {\r\n    // 库存解析：将库存字段从字符串转换为对象\r\n    parseJson(str) {\r\n      return JSON.parse(str);\r\n    },\r\n    async viewDetails(product) {\r\n      let pictures = [];\r\n      // 查images的url\r\n      const imageResponse = await axios.post('http://localhost:8081/pic/getManyUrl', {id:product.picture_id});\r\n      if ( imageResponse.data != null ) {\r\n        pictures = imageResponse.data;\r\n      }\r\n      // 格式化商品详情数据，适配弹窗中表格的展示\r\n      this.formattedProductDetails = [\r\n        { label: '商品名称', value: product.name },\r\n        { label: '类别', value: this.categoryMap[product.category] },\r\n        { label: '定价', value: product.price },\r\n        { label: '描述', value: product.description },\r\n        { label: '创建时间', value: product.created_time },\r\n        { label: '更新时间', value: product.updated_time },\r\n        { label: '库存量', value: this.parseJson(product.quantity).map(item => `${item.flavor}: ${item.quantity}`).join(', ') },\r\n        { label: '售卖单位', value: product.unit },\r\n        { label: '商品图片', value: pictures },\r\n        { label: '注意事项', value: product.notice },\r\n        { label: '特产地', value: product.location }\r\n      ];\r\n\r\n      // 打开弹窗\r\n      this.dialogInfoVisible = true;\r\n    },\r\n    // eslint-disable-next-line no-unused-vars\r\n    async approveShop(shop) {\r\n      let data = new FormData();\r\n      data.append(\"id\",shop.product_id);\r\n      data.append(\"status\",\"empty\");\r\n      const proAddResponse = await axios.post('http://localhost:8081/product/updateStatus',data);\r\n      if ( proAddResponse.status === 200) {\r\n        alert('已通过审核');\r\n        window.location.reload();\r\n      }\r\n    },\r\n    rejectShop(shop) {\r\n      this.currentShop = shop;\r\n      this.rejectDialogVisible = true;\r\n    },\r\n    async confirmReject() {\r\n      const proAddResponse = await axios.post('http://localhost:8081/product/insertReason',{id:this.currentShop.product_id, status:\"suspended\", reason:this.rejectReason});\r\n      if ( proAddResponse.status === 200) {\r\n        alert('已驳回申请');\r\n        window.location.reload();\r\n      }\r\n      this.rejectDialogVisible = false;\r\n    },\r\n    async viewDetailsShop(product) {\r\n      let shop = {};\r\n      const shopResponse = await axios.post('http://localhost:8081/shop/getById', {id:product.shop_id});\r\n      if ( shopResponse.data != null ) {\r\n        shop = shopResponse.data;\r\n      }\r\n      let pictures = '';\r\n      // 查images的url\r\n      const imageResponse = await axios.post('http://localhost:8081/pic/getUrl', {id:shop.picture_id});\r\n      if ( imageResponse.data != null ) {\r\n        pictures = imageResponse.data;\r\n      }\r\n      // 格式化商品详情数据，适配弹窗中表格的展示\r\n      this.formattedShopDetails = [\r\n        { label: '店铺名称', value: shop.shop_name },\r\n        { label: '店铺描述', value: shop.shop_description},\r\n        { label: '创建时间', value: shop.created_time },\r\n        { label: '更新时间', value: shop.updated_time },\r\n        { label: '店铺等级', value: shop.level },\r\n        { label: '许可证', value: pictures },\r\n        { label: '特产地', value: shop.location }\r\n      ];\r\n\r\n      // 打开弹窗\r\n      this.dialogInfoVisibleShop = true;\r\n    },\r\n  },\r\n  async created() {\r\n    const proAddResponse = await axios.post('http://localhost:8081/product/',{});\r\n    if ( proAddResponse.data != null) {\r\n      this.shopList = proAddResponse.data.filter(product => product.status === 'waiting');\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.shop-audit {\r\n  .el-table {\r\n    margin-top: 20px;\r\n  }\r\n}\r\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}