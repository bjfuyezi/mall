{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport axios from 'axios';\nexport default {\n  data() {\n    return {\n      user_id: 1,\n      // session获取\n      shop_id: '',\n      searchKeyword: '',\n      searchType: 'name',\n      // 默认为根据名称搜索\n      searchKeywordNow: '',\n      searchTypeNow: '',\n      // 搜索用\n      deleteDialogVisible: false,\n      productStatus: 'all',\n      // 默认为“全部”状态\n      deleteProductNow: '',\n      // 用户删除商品\n      categoryMap: {\n        'fresh': '生鲜食品',\n        'snack': '零食小吃',\n        'drink': '酒水饮料',\n        'dry': '干货腌货',\n        'instant': '即食食品',\n        'green': '农产品'\n      },\n      statusMap: {\n        'sale': '售卖中',\n        'empty': '已下架/售罄',\n        'waiting': '审核中',\n        'suspended': '审核未通过'\n      },\n      products: [],\n      currentPage: 1,\n      pageSize: 15,\n      totalItems: 3 // 模拟总商品数\n    };\n  },\n  computed: {\n    // 过滤后的商品列表\n    filteredProducts() {\n      if (this.searchKeywordNow === '' || this.searchTypeNow === '') {\n        if (this.productStatus === 'all') {\n          return this.products;\n        }\n        return this.products.filter(product => product.status === this.productStatus);\n      } else if (this.searchTypeNow === 'name') {\n        if (this.productStatus === 'all') {\n          return this.products.filter(product => product.name.includes(this.searchKeywordNow));\n        }\n        return this.products.filter(product => product.status === this.productStatus && product.name.includes(this.searchKeywordNow));\n      } else {\n        if (this.productStatus === 'all') {\n          return this.products.filter(product => this.categoryMap[product.category].includes(this.searchKeywordNow));\n        }\n        return this.products.filter(product => product.status === this.productStatus && this.categoryMap[product.category].includes(this.searchKeywordNow));\n      }\n    }\n  },\n  created() {\n    this.getProducts();\n    this.user_id = this.$store.getters.userId;\n  },\n  methods: {\n    async getProducts() {\n      this.user_id = this.$store.getters.userId;\n      const proResponse = await axios.post('http://localhost:8081/product/selectStarByUserId', {\n        id: this.user_id\n      });\n      if (proResponse.data != null) {\n        this.products = proResponse.data;\n        this.totalItems = this.products.length;\n      }\n    },\n    // 模拟商品搜索功能\n    searchProducts() {\n      this.searchKeywordNow = this.searchKeyword;\n      this.searchTypeNow = this.searchType;\n    },\n    handlePageChange(page) {\n      console.log('当前页:', page);\n    },\n    // 商品管理操作\n    deleteProduct(id) {\n      this.deleteProductNow = id;\n      this.deleteDialogVisible = true;\n    },\n    // 重置删除状态\n    resetDeleteState() {\n      this.deleteProductNow = null;\n    },\n    // 确认删除\n    async confirmDelete() {\n      // 调用后端 API 删除商品\n      const proAddResponse = await axios.post('http://localhost:8081/product/deleteStar', {\n        pid: this.deleteProductNow,\n        uid: this.user_id\n      });\n      if (proAddResponse.status === 200) {\n        this.deleteDialogVisible = false;\n        alert('商品取消收藏成功');\n        window.location.reload();\n      } else {\n        this.deleteDialogVisible = false;\n        alert('商品取消收藏失败');\n        window.location.reload();\n      }\n    },\n    async showProductDetails(product_id) {\n      this.$router.push({\n        name: 'product',\n        params: {\n          id: product_id\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","data","user_id","shop_id","searchKeyword","searchType","searchKeywordNow","searchTypeNow","deleteDialogVisible","productStatus","deleteProductNow","categoryMap","statusMap","products","currentPage","pageSize","totalItems","computed","filteredProducts","filter","product","status","name","includes","category","created","getProducts","$store","getters","userId","methods","proResponse","post","id","length","searchProducts","handlePageChange","page","console","log","deleteProduct","resetDeleteState","confirmDelete","proAddResponse","pid","uid","alert","window","location","reload","showProductDetails","product_id","$router","push","params"],"sources":["src/views/star/ProductStarView.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <h2>商品收藏管理</h2>\r\n      \r\n      <!-- 搜索栏和操作按钮（顶部）-->\r\n      <div class=\"search-bar\">\r\n        <div style=\"display: flex; align-items: center;\">\r\n          <!-- 搜索方式选择 -->\r\n          <el-select\r\n            v-model=\"searchType\"\r\n            placeholder=\"请选择搜索方式\"\r\n            style=\"width: 150px; margin-right: 10px;\">\r\n            <el-option label=\"名称\" value=\"name\" />\r\n            <el-option label=\"类别\" value=\"category\" />\r\n          </el-select>\r\n  \r\n          <!-- 搜索框 -->\r\n          <el-input\r\n            v-model=\"searchKeyword\"\r\n            placeholder=\"请输入商品名称或类别\"\r\n            style=\"width: 200px; margin-right: 10px;\"\r\n          />\r\n  \r\n          <!-- 搜索按钮 -->\r\n          <el-button @click=\"searchProducts\" type=\"primary\">搜索</el-button>\r\n        </div>\r\n  \r\n        <div style=\"margin-top: 10px; display: flex; align-items: center;\">\r\n          <!-- 商品状态选择 -->\r\n          <el-select\r\n            v-model=\"productStatus\"\r\n            placeholder=\"选择商品状态\"\r\n            style=\"width: 200px; margin-right: 10px;\">\r\n            <el-option label=\"全部\" value=\"all\" />\r\n            <el-option label=\"售卖中\" value=\"sale\" />\r\n            <el-option label=\"已下架/售罄\" value=\"empty\" />\r\n            <el-option label=\"审核中\" value=\"waiting\" />\r\n            <el-option label=\"审核未通过\" value=\"suspended\" />\r\n          </el-select>\r\n        </div>\r\n      </div>\r\n  \r\n      <!-- 商品列表（中部）-->\r\n      <div>\r\n        <el-table :data=\"filteredProducts\" style=\"width: 100%\">\r\n          <el-table-column prop=\"name\" label=\"商品名称\" />\r\n          <el-table-column prop=\"category\" label=\"类别\" :formatter=\"(row, column, cellValue) => categoryMap[cellValue] || '未知类别'\"/>\r\n          <el-table-column prop=\"price\" label=\"价格\" />\r\n  \r\n          <el-table-column label=\"操作\">\r\n            <template slot-scope=\"scope\">\r\n              <el-button @click=\"deleteProduct(scope.row.product_id)\" size=\"small\" type=\"danger\">取消收藏</el-button>\r\n              <el-button @click=\"showProductDetails(scope.row.product_id)\" size=\"small\" type=\"info\">查看详情</el-button>\r\n            </template>\r\n          </el-table-column>\r\n        </el-table>\r\n\r\n        <!-- 删除确认弹窗 -->\r\n        <el-dialog\r\n          title=\"确认取消收藏\"\r\n          :visible.sync=\"deleteDialogVisible\"\r\n          width=\"400px\"\r\n          @close=\"resetDeleteState\"\r\n        >\r\n          <p>确定要取消收藏这个商品吗？</p>\r\n          <span slot=\"footer\" class=\"dialog-footer\">\r\n            <el-button @click=\"deleteDialogVisible = false\">取消</el-button>\r\n            <el-button type=\"primary\" @click=\"confirmDelete\">确认</el-button>\r\n          </span>\r\n        </el-dialog>\r\n\r\n        <!-- 翻页组件 -->\r\n        <el-pagination\r\n          :current-page=\"currentPage\"\r\n          :page-size=\"pageSize\"\r\n          :total=\"totalItems\"\r\n          @current-change=\"handlePageChange\"\r\n          layout=\"prev, pager, next\"\r\n        />\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import axios from 'axios';\r\n\r\n  export default {\r\n    data() {\r\n      return {\r\n        user_id: 1,   // session获取\r\n        shop_id: '',\r\n        searchKeyword: '',\r\n        searchType: 'name',  // 默认为根据名称搜索\r\n        searchKeywordNow:'',\r\n        searchTypeNow: '',  // 搜索用\r\n        deleteDialogVisible:false,\r\n        productStatus: 'all',  // 默认为“全部”状态\r\n        deleteProductNow:'',  // 用户删除商品\r\n        categoryMap: {\r\n          'fresh': '生鲜食品',\r\n          'snack': '零食小吃',\r\n          'drink': '酒水饮料',\r\n          'dry': '干货腌货',\r\n          'instant': '即食食品',\r\n          'green': '农产品'\r\n        },\r\n        statusMap: {\r\n          'sale': '售卖中',\r\n          'empty': '已下架/售罄',\r\n          'waiting': '审核中',\r\n          'suspended': '审核未通过'\r\n        },\r\n        products: [],\r\n        currentPage: 1,\r\n        pageSize: 15,\r\n        totalItems: 3, // 模拟总商品数\r\n      };\r\n    },\r\n    computed: {\r\n      // 过滤后的商品列表\r\n      filteredProducts() {\r\n        if (this.searchKeywordNow==='' || this.searchTypeNow===''){\r\n          if (this.productStatus === 'all') {\r\n              return this.products;\r\n          }\r\n          return this.products.filter(product => product.status === this.productStatus);\r\n        }\r\n        else if (this.searchTypeNow==='name') {\r\n          if (this.productStatus === 'all') {\r\n            return this.products.filter(product => product.name.includes(this.searchKeywordNow));\r\n          }\r\n          return this.products.filter(product => product.status === this.productStatus && product.name.includes(this.searchKeywordNow));\r\n        } else {\r\n          if (this.productStatus === 'all') {\r\n            return this.products.filter(product => this.categoryMap[product.category].includes(this.searchKeywordNow));\r\n          }\r\n          return this.products.filter(product => product.status === this.productStatus && this.categoryMap[product.category].includes(this.searchKeywordNow));\r\n        }\r\n      }\r\n    },\r\n    created() {\r\n      this.getProducts();\r\n      this.user_id=this.$store.getters.userId;\r\n    },\r\n    methods: {\r\n      async getProducts() {\r\n        this.user_id=this.$store.getters.userId;\r\n        const proResponse = await axios.post('http://localhost:8081/product/selectStarByUserId', {id:this.user_id});\r\n        if ( proResponse.data != null ) {\r\n          this.products = proResponse.data;\r\n          this.totalItems = this.products.length;\r\n        }\r\n      },\r\n      // 模拟商品搜索功能\r\n      searchProducts() {\r\n        this.searchKeywordNow = this.searchKeyword;\r\n        this.searchTypeNow = this.searchType;\r\n      },\r\n      handlePageChange(page) {\r\n        console.log('当前页:', page);\r\n      },\r\n      // 商品管理操作\r\n      deleteProduct(id) {\r\n        this.deleteProductNow = id;\r\n        this.deleteDialogVisible = true;\r\n      },\r\n      // 重置删除状态\r\n      resetDeleteState() {\r\n        this.deleteProductNow = null;\r\n      },\r\n      // 确认删除\r\n      async confirmDelete() {\r\n        // 调用后端 API 删除商品\r\n        const proAddResponse = await axios.post('http://localhost:8081/product/deleteStar', {pid: this.deleteProductNow, uid:this.user_id});\r\n        if ( proAddResponse.status === 200) {\r\n          this.deleteDialogVisible = false;\r\n          alert('商品取消收藏成功');\r\n          window.location.reload();\r\n        } else {\r\n          this.deleteDialogVisible = false;\r\n          alert('商品取消收藏失败');\r\n          window.location.reload();\r\n        }\r\n      },\r\n      async showProductDetails(product_id) {\r\n        this.$router.push({\r\n          name: 'product',\r\n          params: { id: product_id }\r\n        });\r\n      },\r\n    },\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .search-bar {\r\n    margin-bottom: 20px;\r\n  }\r\n  \r\n  .el-table th {\r\n    background-color: #f4f4f4;\r\n  }\r\n  \r\n  .dialog-footer {\r\n    text-align: right;\r\n  }\r\n  \r\n  .stock-table {\r\n    width: 100%;\r\n    border-collapse: collapse;\r\n  }\r\n  \r\n  .stock-table th,\r\n  .stock-table td {\r\n    padding: 10px;\r\n    text-align: center;\r\n    border: 1px solid #ddd;\r\n  }\r\n  \r\n  .stock-table th {\r\n    background-color: #f2f2f2;\r\n    font-weight: bold;\r\n  }\r\n  \r\n  .stock-table tr:nth-child(even) {\r\n    background-color: #f9f9f9;\r\n  }\r\n  \r\n  .stock-table tr:hover {\r\n    background-color: #f1f1f1;\r\n  }\r\n  /* 设定图片预览的最大宽度和高度 */\r\n  .preview-img {\r\n    max-width: 150px; /* 控制最大宽度 */\r\n    max-height: 150px; /* 控制最大高度 */\r\n    object-fit: cover; /* 确保图片按比例缩放且不会变形 */\r\n  }\r\n  </style>\r\n  "],"mappings":";;;AAoFA,OAAAA,KAAA;AAEA;EACAC,KAAA;IACA;MACAC,OAAA;MAAA;MACAC,OAAA;MACAC,aAAA;MACAC,UAAA;MAAA;MACAC,gBAAA;MACAC,aAAA;MAAA;MACAC,mBAAA;MACAC,aAAA;MAAA;MACAC,gBAAA;MAAA;MACAC,WAAA;QACA;QACA;QACA;QACA;QACA;QACA;MACA;MACAC,SAAA;QACA;QACA;QACA;QACA;MACA;MACAC,QAAA;MACAC,WAAA;MACAC,QAAA;MACAC,UAAA;IACA;EACA;EACAC,QAAA;IACA;IACAC,iBAAA;MACA,SAAAZ,gBAAA,gBAAAC,aAAA;QACA,SAAAE,aAAA;UACA,YAAAI,QAAA;QACA;QACA,YAAAA,QAAA,CAAAM,MAAA,CAAAC,OAAA,IAAAA,OAAA,CAAAC,MAAA,UAAAZ,aAAA;MACA,OACA,SAAAF,aAAA;QACA,SAAAE,aAAA;UACA,YAAAI,QAAA,CAAAM,MAAA,CAAAC,OAAA,IAAAA,OAAA,CAAAE,IAAA,CAAAC,QAAA,MAAAjB,gBAAA;QACA;QACA,YAAAO,QAAA,CAAAM,MAAA,CAAAC,OAAA,IAAAA,OAAA,CAAAC,MAAA,UAAAZ,aAAA,IAAAW,OAAA,CAAAE,IAAA,CAAAC,QAAA,MAAAjB,gBAAA;MACA;QACA,SAAAG,aAAA;UACA,YAAAI,QAAA,CAAAM,MAAA,CAAAC,OAAA,SAAAT,WAAA,CAAAS,OAAA,CAAAI,QAAA,EAAAD,QAAA,MAAAjB,gBAAA;QACA;QACA,YAAAO,QAAA,CAAAM,MAAA,CAAAC,OAAA,IAAAA,OAAA,CAAAC,MAAA,UAAAZ,aAAA,SAAAE,WAAA,CAAAS,OAAA,CAAAI,QAAA,EAAAD,QAAA,MAAAjB,gBAAA;MACA;IACA;EACA;EACAmB,QAAA;IACA,KAAAC,WAAA;IACA,KAAAxB,OAAA,QAAAyB,MAAA,CAAAC,OAAA,CAAAC,MAAA;EACA;EACAC,OAAA;IACA,MAAAJ,YAAA;MACA,KAAAxB,OAAA,QAAAyB,MAAA,CAAAC,OAAA,CAAAC,MAAA;MACA,MAAAE,WAAA,SAAA/B,KAAA,CAAAgC,IAAA;QAAAC,EAAA,OAAA/B;MAAA;MACA,IAAA6B,WAAA,CAAA9B,IAAA;QACA,KAAAY,QAAA,GAAAkB,WAAA,CAAA9B,IAAA;QACA,KAAAe,UAAA,QAAAH,QAAA,CAAAqB,MAAA;MACA;IACA;IACA;IACAC,eAAA;MACA,KAAA7B,gBAAA,QAAAF,aAAA;MACA,KAAAG,aAAA,QAAAF,UAAA;IACA;IACA+B,iBAAAC,IAAA;MACAC,OAAA,CAAAC,GAAA,SAAAF,IAAA;IACA;IACA;IACAG,cAAAP,EAAA;MACA,KAAAvB,gBAAA,GAAAuB,EAAA;MACA,KAAAzB,mBAAA;IACA;IACA;IACAiC,iBAAA;MACA,KAAA/B,gBAAA;IACA;IACA;IACA,MAAAgC,cAAA;MACA;MACA,MAAAC,cAAA,SAAA3C,KAAA,CAAAgC,IAAA;QAAAY,GAAA,OAAAlC,gBAAA;QAAAmC,GAAA,OAAA3C;MAAA;MACA,IAAAyC,cAAA,CAAAtB,MAAA;QACA,KAAAb,mBAAA;QACAsC,KAAA;QACAC,MAAA,CAAAC,QAAA,CAAAC,MAAA;MACA;QACA,KAAAzC,mBAAA;QACAsC,KAAA;QACAC,MAAA,CAAAC,QAAA,CAAAC,MAAA;MACA;IACA;IACA,MAAAC,mBAAAC,UAAA;MACA,KAAAC,OAAA,CAAAC,IAAA;QACA/B,IAAA;QACAgC,MAAA;UAAArB,EAAA,EAAAkB;QAAA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}