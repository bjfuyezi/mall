{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport AddProductForm from './AddProduct.vue';\nimport axios from 'axios';\nexport default {\n  components: {\n    AddProductForm\n  },\n  data() {\n    return {\n      user_id: 1,\n      // session获取\n      shop_id: '',\n      showAddProductDialog: false,\n      // 控制弹窗的显示\n      searchKeyword: '',\n      searchCategory: '',\n      searchType: 'name',\n      // 默认为根据名称搜索\n      productStatus: 'all',\n      // 默认为“全部”状态\n      categories: ['生鲜食品', '零食小吃', '酒水饮料', '干货腌货', '即食食品', '农产品'],\n      products: [{\n        id: 1,\n        name: '苹果',\n        category: '生鲜食品',\n        price: '19.9',\n        stock: [{\n          flavor: '甜味',\n          quantity: 30\n        }, {\n          flavor: '酸味',\n          quantity: 50\n        }],\n        description: '新鲜苹果，口感极佳。',\n        status: 'sale',\n        picture_id: [],\n        created_time: '',\n        updated_time: '',\n        location: '',\n        notice: '',\n        unit: '',\n        salenum: ''\n      }\n      // {\n      //   id: 1,\n      //   name: '苹果',\n      //   category: '生鲜食品',\n      //   stock: [\n      //     { flavor: '甜味', quantity: 30 },\n      //     { flavor: '酸味', quantity: 50 }\n      //   ],\n      //   description: '新鲜苹果，口感极佳。',\n      //   status: 'selling'\n      // },\n      // {\n      //   id: 2,\n      //   name: '薯片',\n      //   category: '零食小吃',\n      //   stock: [\n      //     { flavor: '海盐', quantity: 20 },\n      //     { flavor: '烧烤', quantity: 40 }\n      //   ],\n      //   description: '脆脆的薯片，搭配丰富的口味。',\n      //   status: 'sold_out'\n      // },\n      // {\n      //   id: 3,\n      //   name: '葡萄酒',\n      //   category: '酒水饮料',\n      //   stock: [\n      //     { flavor: '干型', quantity: 15 },\n      //     { flavor: '甜型', quantity: 25 }\n      //   ],\n      //   description: '高品质葡萄酒，适合各种场合。',\n      //   status: 'pending'\n      // }\n      ],\n      currentPage: 1,\n      pageSize: 15,\n      totalItems: 3,\n      // 模拟总商品数\n      addProductDialogVisible: false,\n      newProduct: {\n        name: '',\n        category: '',\n        stock: [],\n        description: ''\n      }\n    };\n  },\n  computed: {\n    // 过滤后的商品列表\n    filteredProducts() {\n      if (this.productStatus === 'all') {\n        return this.products;\n      }\n      return this.products.filter(product => product.status === this.productStatus);\n    }\n  },\n  created() {\n    console.log('商品数据加载完成');\n    this.getProducts();\n  },\n  methods: {\n    async getProducts() {\n      const shopResponse = await axios.post('http://localhost:8081/shop/getByUser_id', {\n        id: this.user_id\n      });\n      if (shopResponse.data != null) {\n        this.shop_id = shopResponse.data.shop_id;\n      }\n      const proResponse = await axios.post('http://localhost:8081/product/getAllByShop_id', {\n        id: this.shop_id\n      });\n      if (proResponse.data != null) {\n        console.log(\"products读出来了，还没扔列表里\");\n        console.log(proResponse.data);\n      }\n    },\n    // 模拟商品搜索功能\n    searchProducts() {\n      console.log('搜索商品:', this.searchKeyword, this.searchType, this.productStatus);\n    },\n    // 添加商品库存项\n    addStockRow() {\n      this.newProduct.stock.push({\n        flavor: '',\n        quantity: 0\n      });\n    },\n    // 库存解析：将库存字段从字符串转换为对象\n    parseStock(stock) {\n      return Array.isArray(stock) ? stock : [];\n    },\n    handlePageChange(page) {\n      console.log('当前页:', page);\n    },\n    // 商品管理操作\n    deleteProduct(id) {\n      console.log('删除商品:', id);\n    },\n    updateStock(id) {\n      console.log('更新库存:', id);\n    },\n    showProductDetails(id) {\n      console.log('查看商品详情:', id);\n    }\n  }\n};","map":{"version":3,"names":["AddProductForm","axios","components","data","user_id","shop_id","showAddProductDialog","searchKeyword","searchCategory","searchType","productStatus","categories","products","id","name","category","price","stock","flavor","quantity","description","status","picture_id","created_time","updated_time","location","notice","unit","salenum","currentPage","pageSize","totalItems","addProductDialogVisible","newProduct","computed","filteredProducts","filter","product","created","console","log","getProducts","methods","shopResponse","post","proResponse","searchProducts","addStockRow","push","parseStock","Array","isArray","handlePageChange","page","deleteProduct","updateStock","showProductDetails"],"sources":["src/views/shopmodel/ProductManagementView.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <h2>商品管理</h2>\r\n      \r\n      <!-- 搜索栏和操作按钮（顶部）-->\r\n      <div class=\"search-bar\">\r\n        <div style=\"display: flex; align-items: center;\">\r\n          <!-- 搜索方式选择 -->\r\n          <el-select\r\n            v-model=\"searchType\"\r\n            placeholder=\"请选择搜索方式\"\r\n            style=\"width: 150px; margin-right: 10px;\">\r\n            <el-option label=\"名称\" value=\"name\" />\r\n            <el-option label=\"类别\" value=\"category\" />\r\n          </el-select>\r\n  \r\n          <!-- 搜索框 -->\r\n          <el-input\r\n            v-model=\"searchKeyword\"\r\n            placeholder=\"请输入商品名称或类别\"\r\n            style=\"width: 200px; margin-right: 10px;\"\r\n          />\r\n  \r\n          <!-- 搜索按钮 -->\r\n          <el-button @click=\"searchProducts\" type=\"primary\">搜索</el-button>\r\n          \r\n          <!-- 添加商品按钮 -->\r\n            <el-button @click=\"showAddProductDialog = true\" type=\"success\" style=\"margin-left: 10px;\">添加商品</el-button>\r\n\r\n            <!-- 添加商品弹窗 -->\r\n            <el-dialog :visible.sync=\"showAddProductDialog\" title=\"添加商品\" width=\"50%\">\r\n            <!-- 引入添加商品表单组件 -->\r\n            <add-product-form @close=\"showAddProductDialog = false\" />\r\n            </el-dialog>\r\n        </div>\r\n  \r\n        <div style=\"margin-top: 10px; display: flex; align-items: center;\">\r\n          <!-- 商品状态选择 -->\r\n          <el-select\r\n            v-model=\"productStatus\"\r\n            placeholder=\"选择商品状态\"\r\n            style=\"width: 200px; margin-right: 10px;\">\r\n            <el-option label=\"全部\" value=\"all\" />\r\n            <el-option label=\"售卖中\" value=\"sale\" />\r\n            <el-option label=\"已下架/售罄\" value=\"empty\" />\r\n            <el-option label=\"审核中\" value=\"waiting\" />\r\n            <el-option label=\"审核未通过\" value=\"suspended\" />\r\n          </el-select>\r\n        </div>\r\n      </div>\r\n  \r\n      <!-- 商品列表（中部）-->\r\n      <div>\r\n        <el-table :data=\"filteredProducts\" style=\"width: 100%\">\r\n          <el-table-column prop=\"name\" label=\"商品名称\" />\r\n          <el-table-column prop=\"category\" label=\"类别\" />\r\n          <el-table-column prop=\"price\" label=\"定价\" />\r\n  \r\n          <!-- 库存显示为口味-数量 -->\r\n          <el-table-column label=\"库存\">\r\n            <template slot-scope=\"scope\">\r\n              <div>\r\n                <div v-if=\"scope.row.stock && scope.row.stock.length\">\r\n                  <div v-for=\"(item, index) in parseStock(scope.row.stock)\" :key=\"index\">\r\n                    <span>{{ item.flavor }}: {{ item.quantity }} 件</span>\r\n                  </div>\r\n                </div>\r\n                <div v-else>无库存</div>\r\n              </div>\r\n            </template>\r\n          </el-table-column>\r\n  \r\n          <el-table-column label=\"操作\">\r\n            <template slot-scope=\"scope\">\r\n              <el-button @click=\"deleteProduct(scope.row.id)\" size=\"small\" type=\"danger\">删除</el-button>\r\n              <el-button v-if=\"scope.row.status === 'sale'\" @click=\"emptyProduct(scope.row.id)\" size=\"small\" type=\"warning\">下架</el-button>\r\n              <el-button v-if=\"scope.row.status === 'empty'\" @click=\"saleProduct(scope.row.id)\" size=\"small\" type=\"warning\">上架</el-button>\r\n              <el-button @click=\"updateStock(scope.row.id)\" size=\"small\" type=\"info\">更新库存</el-button>\r\n              <el-button @click=\"showProductDetails(scope.row.id)\" size=\"small\" type=\"info\">详情</el-button>\r\n              <el-button v-if=\"scope.row.status != 'waiting'\" @click=\"updateProduct(scope.row.id)\" size=\"small\" type=\"info\">编辑</el-button>\r\n            </template>\r\n          </el-table-column>\r\n        </el-table>\r\n  \r\n        <!-- 翻页组件 -->\r\n        <el-pagination\r\n          :current-page=\"currentPage\"\r\n          :page-size=\"pageSize\"\r\n          :total=\"totalItems\"\r\n          @current-change=\"handlePageChange\"\r\n          layout=\"prev, pager, next\"\r\n        />\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import AddProductForm from './AddProduct.vue';\r\n  import axios from 'axios';\r\n\r\n  export default {\r\n    components: {\r\n        AddProductForm\r\n    },\r\n    data() {\r\n      return {\r\n        user_id: 1,   // session获取\r\n        shop_id: '',\r\n        showAddProductDialog: false,  // 控制弹窗的显示\r\n        searchKeyword: '',\r\n        searchCategory: '',\r\n        searchType: 'name',  // 默认为根据名称搜索\r\n        productStatus: 'all',  // 默认为“全部”状态\r\n        categories: ['生鲜食品', '零食小吃', '酒水饮料', '干货腌货', '即食食品', '农产品'],\r\n        products: [\r\n          {\r\n            id: 1,\r\n            name: '苹果',\r\n            category: '生鲜食品',\r\n            price: '19.9',\r\n            stock: [\r\n              { flavor: '甜味', quantity: 30 },\r\n              { flavor: '酸味', quantity: 50 }\r\n            ],\r\n            description: '新鲜苹果，口感极佳。',\r\n            status: 'sale',\r\n            picture_id: [],\r\n            created_time: '',\r\n            updated_time: '',\r\n            location: '',\r\n            notice: '',\r\n            unit: '',\r\n            salenum: ''\r\n          }\r\n          // {\r\n          //   id: 1,\r\n          //   name: '苹果',\r\n          //   category: '生鲜食品',\r\n          //   stock: [\r\n          //     { flavor: '甜味', quantity: 30 },\r\n          //     { flavor: '酸味', quantity: 50 }\r\n          //   ],\r\n          //   description: '新鲜苹果，口感极佳。',\r\n          //   status: 'selling'\r\n          // },\r\n          // {\r\n          //   id: 2,\r\n          //   name: '薯片',\r\n          //   category: '零食小吃',\r\n          //   stock: [\r\n          //     { flavor: '海盐', quantity: 20 },\r\n          //     { flavor: '烧烤', quantity: 40 }\r\n          //   ],\r\n          //   description: '脆脆的薯片，搭配丰富的口味。',\r\n          //   status: 'sold_out'\r\n          // },\r\n          // {\r\n          //   id: 3,\r\n          //   name: '葡萄酒',\r\n          //   category: '酒水饮料',\r\n          //   stock: [\r\n          //     { flavor: '干型', quantity: 15 },\r\n          //     { flavor: '甜型', quantity: 25 }\r\n          //   ],\r\n          //   description: '高品质葡萄酒，适合各种场合。',\r\n          //   status: 'pending'\r\n          // }\r\n        ],\r\n        currentPage: 1,\r\n        pageSize: 15,\r\n        totalItems: 3, // 模拟总商品数\r\n        addProductDialogVisible: false,\r\n        newProduct: {\r\n          name: '',\r\n          category: '',\r\n          stock: [],\r\n          description: ''\r\n        }\r\n      };\r\n    },\r\n    computed: {\r\n        // 过滤后的商品列表\r\n      filteredProducts() {\r\n        if (this.productStatus === 'all') {\r\n            return this.products;\r\n        }\r\n        return this.products.filter(product => product.status === this.productStatus);\r\n      }\r\n    },\r\n    created() {\r\n      console.log('商品数据加载完成');\r\n      this.getProducts();\r\n    },\r\n    methods: {\r\n      async getProducts() {\r\n        const shopResponse = await axios.post('http://localhost:8081/shop/getByUser_id', {id:this.user_id});\r\n        if ( shopResponse.data != null ) {\r\n          this.shop_id = shopResponse.data.shop_id;\r\n        }\r\n        const proResponse = await axios.post('http://localhost:8081/product/getAllByShop_id', {id:this.shop_id});\r\n        if ( proResponse.data != null ) {\r\n          console.log(\"products读出来了，还没扔列表里\");\r\n          console.log(proResponse.data);\r\n        }\r\n      },\r\n      // 模拟商品搜索功能\r\n      searchProducts() {\r\n        console.log('搜索商品:', this.searchKeyword, this.searchType, this.productStatus);\r\n      },\r\n  \r\n      // 添加商品库存项\r\n      addStockRow() {\r\n        this.newProduct.stock.push({ flavor: '', quantity: 0 });\r\n      },\r\n\r\n      // 库存解析：将库存字段从字符串转换为对象\r\n      parseStock(stock) {\r\n        return Array.isArray(stock) ? stock : [];\r\n      },\r\n  \r\n      handlePageChange(page) {\r\n        console.log('当前页:', page);\r\n      },\r\n  \r\n      // 商品管理操作\r\n      deleteProduct(id) {\r\n        console.log('删除商品:', id);\r\n      },\r\n  \r\n      updateStock(id) {\r\n        console.log('更新库存:', id);\r\n      },\r\n  \r\n      showProductDetails(id) {\r\n        console.log('查看商品详情:', id);\r\n      }\r\n    },\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .search-bar {\r\n    margin-bottom: 20px;\r\n  }\r\n  \r\n  .el-table th {\r\n    background-color: #f4f4f4;\r\n  }\r\n  \r\n  .dialog-footer {\r\n    text-align: right;\r\n  }\r\n  \r\n  .stock-table {\r\n    width: 100%;\r\n    border-collapse: collapse;\r\n  }\r\n  \r\n  .stock-table th,\r\n  .stock-table td {\r\n    padding: 10px;\r\n    text-align: center;\r\n    border: 1px solid #ddd;\r\n  }\r\n  \r\n  .stock-table th {\r\n    background-color: #f2f2f2;\r\n    font-weight: bold;\r\n  }\r\n  \r\n  .stock-table tr:nth-child(even) {\r\n    background-color: #f9f9f9;\r\n  }\r\n  \r\n  .stock-table tr:hover {\r\n    background-color: #f1f1f1;\r\n  }\r\n  </style>\r\n  "],"mappings":";;;AAiGA,OAAAA,cAAA;AACA,OAAAC,KAAA;AAEA;EACAC,UAAA;IACAF;EACA;EACAG,KAAA;IACA;MACAC,OAAA;MAAA;MACAC,OAAA;MACAC,oBAAA;MAAA;MACAC,aAAA;MACAC,cAAA;MACAC,UAAA;MAAA;MACAC,aAAA;MAAA;MACAC,UAAA;MACAC,QAAA,GACA;QACAC,EAAA;QACAC,IAAA;QACAC,QAAA;QACAC,KAAA;QACAC,KAAA,GACA;UAAAC,MAAA;UAAAC,QAAA;QAAA,GACA;UAAAD,MAAA;UAAAC,QAAA;QAAA,EACA;QACAC,WAAA;QACAC,MAAA;QACAC,UAAA;QACAC,YAAA;QACAC,YAAA;QACAC,QAAA;QACAC,MAAA;QACAC,IAAA;QACAC,OAAA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MAAA,CACA;MACAC,WAAA;MACAC,QAAA;MACAC,UAAA;MAAA;MACAC,uBAAA;MACAC,UAAA;QACAnB,IAAA;QACAC,QAAA;QACAE,KAAA;QACAG,WAAA;MACA;IACA;EACA;EACAc,QAAA;IACA;IACAC,iBAAA;MACA,SAAAzB,aAAA;QACA,YAAAE,QAAA;MACA;MACA,YAAAA,QAAA,CAAAwB,MAAA,CAAAC,OAAA,IAAAA,OAAA,CAAAhB,MAAA,UAAAX,aAAA;IACA;EACA;EACA4B,QAAA;IACAC,OAAA,CAAAC,GAAA;IACA,KAAAC,WAAA;EACA;EACAC,OAAA;IACA,MAAAD,YAAA;MACA,MAAAE,YAAA,SAAA1C,KAAA,CAAA2C,IAAA;QAAA/B,EAAA,OAAAT;MAAA;MACA,IAAAuC,YAAA,CAAAxC,IAAA;QACA,KAAAE,OAAA,GAAAsC,YAAA,CAAAxC,IAAA,CAAAE,OAAA;MACA;MACA,MAAAwC,WAAA,SAAA5C,KAAA,CAAA2C,IAAA;QAAA/B,EAAA,OAAAR;MAAA;MACA,IAAAwC,WAAA,CAAA1C,IAAA;QACAoC,OAAA,CAAAC,GAAA;QACAD,OAAA,CAAAC,GAAA,CAAAK,WAAA,CAAA1C,IAAA;MACA;IACA;IACA;IACA2C,eAAA;MACAP,OAAA,CAAAC,GAAA,eAAAjC,aAAA,OAAAE,UAAA,OAAAC,aAAA;IACA;IAEA;IACAqC,YAAA;MACA,KAAAd,UAAA,CAAAhB,KAAA,CAAA+B,IAAA;QAAA9B,MAAA;QAAAC,QAAA;MAAA;IACA;IAEA;IACA8B,WAAAhC,KAAA;MACA,OAAAiC,KAAA,CAAAC,OAAA,CAAAlC,KAAA,IAAAA,KAAA;IACA;IAEAmC,iBAAAC,IAAA;MACAd,OAAA,CAAAC,GAAA,SAAAa,IAAA;IACA;IAEA;IACAC,cAAAzC,EAAA;MACA0B,OAAA,CAAAC,GAAA,UAAA3B,EAAA;IACA;IAEA0C,YAAA1C,EAAA;MACA0B,OAAA,CAAAC,GAAA,UAAA3B,EAAA;IACA;IAEA2C,mBAAA3C,EAAA;MACA0B,OAAA,CAAAC,GAAA,YAAA3B,EAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}