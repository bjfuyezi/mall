{"ast":null,"code":"import axios from 'axios';\nexport default {\n  name: 'AddAdForm',\n  data() {\n    return {\n      formData: {\n        ps_id: null,\n        name: '',\n        type: 'shop',\n        start_time: null,\n        end_time: null,\n        price: null,\n        picture: null,\n        // 这里将保存文件对象\n        banner: false,\n        selectedProduct: null // 新增字段用于存储选中的产品ID\n      },\n      showProductSelect: false,\n      // 控制是否显示产品选择下拉列表\n      isSubmitting: false,\n      error: null,\n      products: [] // 存储从后端获取的产品列表\n    };\n  },\n  methods: {\n    handleFileChange(event) {\n      const file = event.target.files[0];\n      if (file) {\n        this.formData.picture = file; // 只保存第一个文件\n      } else {\n        this.formData.picture = null;\n      }\n    },\n    convertToInt(value) {\n      return value !== null && value !== '' ? parseInt(value, 10) : 0;\n    },\n    convertToFloat(value) {\n      return value !== null && value !== '' ? parseFloat(value).toFixed(2) : '0.00';\n    },\n    formatDate(isoString) {\n      // 将 ISO 字符串解析为 Date 对象\n      const date = new Date(isoString);\n      // 获取年份、月份和日期，并确保月份和日期是两位数\n      const year = date.getFullYear();\n      const month = String(date.getMonth() + 1).padStart(2, '0');\n      const day = String(date.getDate()).padStart(2, '0');\n      // 返回格式化的日期字符串\n      return `${year}-${month}-${day} 00:00:00`;\n    },\n    async onTypeChange() {\n      if (this.formData.type === 'product') {\n        try {\n          // 从后端获取产品列表\n          const response = await axios.get('http://localhost:8081/products');\n          this.products = response.data; // 假设后端返回的是一个产品数组\n          this.showProductSelect = true; // 显示产品选择下拉列表\n        } catch (err) {\n          this.error = '无法加载产品列表，请稍后再试';\n        }\n      } else {\n        this.showProductSelect = false;\n        this.products = [];\n        this.formData.selectedProduct = null;\n      }\n    },\n    async handleSubmit() {\n      try {\n        this.isSubmitting = true;\n        this.error = null;\n        const formData = new FormData();\n        formData.append('name', this.formData.name);\n        // 如果是产品广告，附加选中的产品ID\n        if (this.formData.type === 'product' && this.formData.selectedProduct) {\n          formData.append('ps_id', this.convertToInt(this.formData.selectedProduct));\n        } else formData.append('ps_id', -1);\n        formData.append('type', this.formData.type);\n        formData.append('start_time', this.formatDate(this.formData.start_time));\n        formData.append('end_time', this.formatDate(this.formData.end_time));\n        formData.append('price', this.convertToFloat(this.formData.price));\n        formData.append('banner', this.formData.banner.toString());\n\n        // 添加文件（如果有）\n        if (this.formData.picture) {\n          formData.append('picture', this.formData.picture); // 使用正确的键名 'pictrue'\n        }\n\n        // 发送请求到服务器\n        const response = await axios.post('http://localhost:8081/advertise/create', formData);\n        console.log(response);\n        console.log('Form submitted:', formData);\n        this.$emit('adAdded', {\n          ...this.formData\n        });\n        this.clearForm();\n      } catch (err) {\n        this.error = err.message || '发生错误，请稍后再试';\n      } finally {\n        this.isSubmitting = false;\n      }\n    },\n    clearForm() {\n      this.formData = {\n        ps_id: null,\n        name: '',\n        type: 'shop',\n        start_time: null,\n        end_time: null,\n        price: null,\n        picture: null,\n        banner: false\n      };\n      // 手动清除文件输入框\n      this.$refs.pictureInput.value = null;\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","formData","ps_id","type","start_time","end_time","price","picture","banner","selectedProduct","showProductSelect","isSubmitting","error","products","methods","handleFileChange","event","file","target","files","convertToInt","value","parseInt","convertToFloat","parseFloat","toFixed","formatDate","isoString","date","Date","year","getFullYear","month","String","getMonth","padStart","day","getDate","onTypeChange","response","get","err","handleSubmit","FormData","append","toString","post","console","log","$emit","clearForm","message","$refs","pictureInput"],"sources":["src/components/AddAdForm.vue"],"sourcesContent":["<template>\r\n  <form @submit.prevent=\"handleSubmit\" class=\"add-ad-form\">  \r\n    <h2>添加新广告</h2>\r\n\r\n    <!-- 广告标题 -->\r\n    <div class=\"form-group\">\r\n      <label for=\"name\">名称</label>\r\n      <input id=\"name\" v-model=\"formData.name\" type=\"text\" required />\r\n    </div>\r\n\r\n    <!-- 广告类型 -->\r\n    <div class=\"form-group\">\r\n      <label for=\"type\">类型</label>\r\n      <select id=\"type\" v-model=\"formData.type\" @change=\"onTypeChange\" required>\r\n        <option value=\"shop\">店铺广告</option>\r\n        <option value=\"product\">产品广告</option>\r\n        <!-- 添加其他可能的广告类型 -->\r\n      </select>\r\n    </div>\r\n\r\n<!-- 动态显示的产品选择下拉列表 -->\r\n    <div v-if=\"showProductSelect\" class=\"form-group\">\r\n      <label for=\"product\">选择商品</label>\r\n      <select id=\"product\" v-model=\"formData.selectedProduct\" required>\r\n        <option v-for=\"product in products\" :key=\"product.id\" :value=\"product.id\">\r\n          {{ product.name }}\r\n        </option>\r\n      </select>\r\n    </div>\r\n\r\n    <!-- 开始时间 -->\r\n    <div class=\"form-group\">\r\n      <label for=\"start_time\">开始时间</label>\r\n      <input id=\"start_time\" v-model=\"formData.start_time\" type=\"datetime-local\" required />\r\n    </div>\r\n\r\n    <!-- 结束时间 -->\r\n    <div class=\"form-group\">\r\n      <label for=\"end_time\">结束时间</label>\r\n      <input id=\"end_time\" v-model=\"formData.end_time\" type=\"datetime-local\" required />\r\n    </div>\r\n\r\n    <!-- 价格 -->\r\n    <div class=\"form-group\">\r\n      <label for=\"price\">价格 (元)</label>\r\n      <input id=\"price\" v-model.number=\"formData.price\" type=\"number\" step=\"0.01\" min=\"0\" required />\r\n    </div>\r\n\r\n  <!-- 图片上传 -->\r\n    <div class=\"form-group\">\r\n      <label for=\"picture\">图片</label>\r\n      <input id=\"picture\" ref=\"pictureInput\" type=\"file\" @change=\"handleFileChange\" />\r\n      <span v-if=\"formData.picture\">{{ formData.picture.name }}</span>\r\n      <span v-else class=\"error\">请选择一个文件</span>\r\n    </div>\r\n\r\n<!-- 是否申请banner页广告 -->\r\n    <div class=\"form-group\">\r\n      <label>是否申请banner页广告</label>\r\n      <div>\r\n        <label>\r\n          <input type=\"radio\" name=\"banner\" value=\"true\" v-model=\"formData.banner\" />\r\n          是\r\n        </label>\r\n        <label>\r\n          <input type=\"radio\" name=\"banner\" value=\"false\" v-model=\"formData.banner\" checked />\r\n          否\r\n        </label>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- 提交按钮 -->\r\n    <button type=\"submit\" :disabled=\"isSubmitting\">提交</button>\r\n\r\n    <!-- 错误信息 -->\r\n    <div v-if=\"error\" class=\"error\">{{ error }}</div>\r\n  </form>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nexport default {\r\n  name: 'AddAdForm',\r\n  data() {\r\n    return {\r\n      formData: {\r\n        ps_id: null,\r\n        name: '',\r\n        type: 'shop',\r\n        start_time: null,\r\n        end_time: null,\r\n        price: null,\r\n        picture: null, // 这里将保存文件对象\r\n        banner: false,\r\n        selectedProduct: null // 新增字段用于存储选中的产品ID\r\n      },\r\n      showProductSelect: false, // 控制是否显示产品选择下拉列表\r\n      isSubmitting: false,\r\n      error: null,\r\n      products: [], // 存储从后端获取的产品列表\r\n    };\r\n  },\r\n  methods: {\r\n    handleFileChange(event) {\r\n      const file = event.target.files[0];\r\n      if (file) {\r\n        this.formData.picture = file; // 只保存第一个文件\r\n      } else {\r\n        this.formData.picture = null;\r\n      }\r\n    },\r\n    convertToInt(value) {\r\n      return value !== null && value !== '' ? parseInt(value, 10) : 0;\r\n    },\r\n    convertToFloat(value) {\r\n      return value !== null && value !== '' ? parseFloat(value).toFixed(2) : '0.00';\r\n    },formatDate(isoString) {\r\n      // 将 ISO 字符串解析为 Date 对象\r\n      const date = new Date(isoString);\r\n      // 获取年份、月份和日期，并确保月份和日期是两位数\r\n      const year = date.getFullYear();\r\n      const month = String(date.getMonth() + 1).padStart(2, '0');\r\n      const day = String(date.getDate()).padStart(2, '0');\r\n      // 返回格式化的日期字符串\r\n      return `${year}-${month}-${day} 00:00:00`;\r\n    },\r\n    async onTypeChange() {\r\n      if (this.formData.type === 'product') {\r\n        try {\r\n          // 从后端获取产品列表\r\n          const response = await axios.get('http://localhost:8081/products');\r\n          this.products = response.data; // 假设后端返回的是一个产品数组\r\n          this.showProductSelect = true; // 显示产品选择下拉列表\r\n        } catch (err) {\r\n          this.error = '无法加载产品列表，请稍后再试';\r\n        }\r\n      } else {\r\n        this.showProductSelect = false;\r\n        this.products = [];\r\n        this.formData.selectedProduct = null;\r\n      }\r\n    },\r\n    async handleSubmit() {\r\n      try {\r\n        this.isSubmitting = true;\r\n        this.error = null;\r\n\r\n        const formData = new FormData();\r\n        formData.append('name', this.formData.name);\r\n        // 如果是产品广告，附加选中的产品ID\r\n        if (this.formData.type === 'product' && this.formData.selectedProduct) {\r\n            formData.append('ps_id', this.convertToInt(this.formData.selectedProduct));\r\n        }else formData.append('ps_id', -1);\r\n        formData.append('type', this.formData.type);\r\n        formData.append('start_time', this.formatDate(this.formData.start_time));\r\n        formData.append('end_time', this.formatDate(this.formData.end_time));\r\n        formData.append('price', this.convertToFloat(this.formData.price));\r\n        formData.append('banner', this.formData.banner.toString());\r\n\r\n        // 添加文件（如果有）\r\n        if (this.formData.picture) {\r\n          formData.append('picture', this.formData.picture); // 使用正确的键名 'pictrue'\r\n        }\r\n\r\n        // 发送请求到服务器\r\n        const response = await axios.post('http://localhost:8081/advertise/create', formData);\r\n\r\n        console.log(response);\r\n        console.log('Form submitted:', formData);\r\n        this.$emit('adAdded', { ...this.formData });\r\n        this.clearForm();\r\n      } catch (err) {\r\n        this.error = err.message || '发生错误，请稍后再试';\r\n      } finally {\r\n        this.isSubmitting = false;\r\n      }\r\n    },\r\n    clearForm() {\r\n      this.formData = {\r\n        ps_id: null,\r\n        name: '',\r\n        type: 'shop',\r\n        start_time: null,\r\n        end_time: null,\r\n        price: null,\r\n        picture: null,\r\n        banner: false\r\n      };\r\n      // 手动清除文件输入框\r\n      this.$refs.pictureInput.value = null;\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\n.add-ad-form {\r\n  padding: 20px;\r\n  background-color: #fff;\r\n  border-radius: 8px;\r\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n\r\n  h2 {\r\n    margin-top: 0;\r\n    font-size: 1.5em;\r\n    color: #ff6700;\r\n  }\r\n\r\n  .form-group {\r\n    margin-bottom: 1rem;\r\n\r\n    label {\r\n      display: block;\r\n      margin-bottom: 0.5rem;\r\n      font-weight: bold;\r\n    }\r\n\r\n    input, textarea, select {\r\n      width: 100%;\r\n      padding: 0.5rem;\r\n      border: 1px solid #ccc;\r\n      border-radius: 4px;\r\n      transition: border-color 0.3s ease;\r\n\r\n      &:focus {\r\n        outline: none;\r\n        border-color: #ff6700;\r\n      }\r\n    }\r\n\r\n    textarea {\r\n      resize: vertical;\r\n    }\r\n  }\r\n\r\n  button {\r\n    padding: 0.75rem 1.5rem;\r\n    border: none;\r\n    border-radius: 4px;\r\n    cursor: pointer;\r\n    color: #fff;\r\n    background-color: #ff6700;\r\n    transition: background-color 0.3s ease;\r\n\r\n    &:hover:not(:disabled) {\r\n      background-color: darken(#ff6700, 10%);\r\n    }\r\n\r\n    &[disabled] {\r\n      opacity: 0.65;\r\n      cursor: not-allowed;\r\n    }\r\n  }\r\n\r\n  .error {\r\n    margin-top: 1rem;\r\n    color: red;\r\n  }\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}