{"ast":null,"code":"import { mapState, mapGetters } from 'vuex';\nexport default {\n  name: 'UserProfile',\n  data() {\n    return {\n      userForm: {\n        username: '',\n        email: '',\n        password: ''\n      },\n      isEditing: false,\n      originalForm: null\n    };\n  },\n  computed: {\n    ...mapState({\n      currentUser: state => state.user\n    }),\n    ...mapGetters(['userId'])\n  },\n  methods: {\n    async loadUserProfile() {\n      try {\n        const response = await fetch(`http://localhost:8081/users/${this.userId}`);\n        const data = await response.json();\n        if (data.status === 'success') {\n          this.userForm = {\n            ...data.data,\n            password: ''\n          };\n          this.originalForm = {\n            ...data.data\n          };\n        }\n      } catch (error) {\n        this.$message.error('获取用户信息失败');\n      }\n    },\n    startEdit() {\n      this.isEditing = true;\n      this.originalForm = {\n        ...this.userForm\n      };\n    },\n    cancelEdit() {\n      this.isEditing = false;\n      this.userForm = {\n        ...this.originalForm,\n        password: ''\n      };\n    },\n    async saveProfile() {\n      try {\n        const response = await fetch('http://localhost:8081/users/profile/update', {\n          method: 'PUT',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(this.userForm)\n        });\n        const data = await response.json();\n        if (data.status === 'success') {\n          this.$message.success('保存成功');\n          this.isEditing = false;\n          await this.loadUserProfile();\n          this.$store.dispatch('updateUserProfile', this.userForm);\n        } else {\n          this.$message.error(data.message || '保存失败');\n        }\n      } catch (error) {\n        this.$message.error('保存失败');\n      }\n    }\n  },\n  created() {\n    this.loadUserProfile();\n  }\n};","map":{"version":3,"names":["mapState","mapGetters","name","data","userForm","username","email","password","isEditing","originalForm","computed","currentUser","state","user","methods","loadUserProfile","response","fetch","userId","json","status","error","$message","startEdit","cancelEdit","saveProfile","method","headers","body","JSON","stringify","success","$store","dispatch","message","created"],"sources":["src/views/UserProfile.vue"],"sourcesContent":["<template>\r\n  <div class=\"user-profile\">\r\n    <el-card class=\"profile-card\" shadow=\"never\">\r\n      <div slot=\"header\" class=\"card-header\">\r\n        <span>个人资料</span>\r\n        <el-button type=\"text\" @click=\"startEdit\" v-if=\"!isEditing\">\r\n          <i class=\"el-icon-edit\"></i> 编辑\r\n        </el-button>\r\n      </div>\r\n      \r\n      <el-form \r\n        :model=\"userForm\" \r\n        :disabled=\"!isEditing\" \r\n        label-width=\"100px\"\r\n        class=\"profile-form\">\r\n        <el-form-item label=\"用户名\">\r\n          <el-input v-model=\"userForm.username\" disabled></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"邮箱\">\r\n          <el-input v-model=\"userForm.email\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"密码\" v-if=\"isEditing\">\r\n          <el-input \r\n            v-model=\"userForm.password\" \r\n            type=\"password\" \r\n            placeholder=\"留空表示不修改\"\r\n            show-password>\r\n          </el-input>\r\n        </el-form-item>\r\n        <el-form-item v-if=\"isEditing\">\r\n          <el-button type=\"primary\" @click=\"saveProfile\">保存</el-button>\r\n          <el-button @click=\"cancelEdit\">取消</el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapState, mapGetters } from 'vuex'\r\n\r\nexport default {\r\n  name: 'UserProfile',\r\n  data() {\r\n    return {\r\n      userForm: {\r\n        username: '',\r\n        email: '',\r\n        password: ''\r\n      },\r\n      isEditing: false,\r\n      originalForm: null\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapState({\r\n      currentUser: state => state.user\r\n    }),\r\n    ...mapGetters(['userId'])\r\n  },\r\n  methods: {\r\n    async loadUserProfile() {\r\n      try {\r\n        const response = await fetch(`http://localhost:8081/users/${this.userId}`);\r\n        const data = await response.json();\r\n        if (data.status === 'success') {\r\n          this.userForm = { ...data.data, password: '' };\r\n          this.originalForm = { ...data.data };\r\n        }\r\n      } catch (error) {\r\n        this.$message.error('获取用户信息失败');\r\n      }\r\n    },\r\n    startEdit() {\r\n      this.isEditing = true;\r\n      this.originalForm = { ...this.userForm };\r\n    },\r\n    cancelEdit() {\r\n      this.isEditing = false;\r\n      this.userForm = { ...this.originalForm, password: '' };\r\n    },\r\n    async saveProfile() {\r\n      try {\r\n        const response = await fetch('http://localhost:8081/users/profile/update', {\r\n          method: 'PUT',\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify(this.userForm)\r\n        });\r\n        const data = await response.json();\r\n        if (data.status === 'success') {\r\n          this.$message.success('保存成功');\r\n          this.isEditing = false;\r\n          await this.loadUserProfile();\r\n          this.$store.dispatch('updateUserProfile', this.userForm);\r\n        } else {\r\n          this.$message.error(data.message || '保存失败');\r\n        }\r\n      } catch (error) {\r\n        this.$message.error('保存失败');\r\n      }\r\n    }\r\n  },\r\n  created() {\r\n    this.loadUserProfile();\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.user-profile {\r\n  .profile-card {\r\n    border: none;\r\n    \r\n    .card-header {\r\n      display: flex;\r\n      justify-content: space-between;\r\n      align-items: center;\r\n      padding: 15px 0;\r\n      border-bottom: 2px solid #ff6700;\r\n\r\n      span {\r\n        font-size: 18px;\r\n        font-weight: bold;\r\n        color: #333;\r\n      }\r\n    }\r\n\r\n    .profile-form {\r\n      max-width: 500px;\r\n      margin: 30px auto;\r\n\r\n      .el-form-item {\r\n        margin-bottom: 25px;\r\n      }\r\n\r\n      ::v-deep .el-form-item__label {\r\n        font-weight: 500;\r\n      }\r\n\r\n      ::v-deep .el-input__inner {\r\n        &:disabled {\r\n          background-color: #f5f5f5;\r\n        }\r\n      }\r\n\r\n      .el-button {\r\n        padding: 12px 25px;\r\n      }\r\n    }\r\n  }\r\n}\r\n</style> "],"mappings":"AAuCA,SAAAA,QAAA,EAAAC,UAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,QAAA;QACAC,QAAA;QACAC,KAAA;QACAC,QAAA;MACA;MACAC,SAAA;MACAC,YAAA;IACA;EACA;EACAC,QAAA;IACA,GAAAV,QAAA;MACAW,WAAA,EAAAC,KAAA,IAAAA,KAAA,CAAAC;IACA;IACA,GAAAZ,UAAA;EACA;EACAa,OAAA;IACA,MAAAC,gBAAA;MACA;QACA,MAAAC,QAAA,SAAAC,KAAA,qCAAAC,MAAA;QACA,MAAAf,IAAA,SAAAa,QAAA,CAAAG,IAAA;QACA,IAAAhB,IAAA,CAAAiB,MAAA;UACA,KAAAhB,QAAA;YAAA,GAAAD,IAAA,CAAAA,IAAA;YAAAI,QAAA;UAAA;UACA,KAAAE,YAAA;YAAA,GAAAN,IAAA,CAAAA;UAAA;QACA;MACA,SAAAkB,KAAA;QACA,KAAAC,QAAA,CAAAD,KAAA;MACA;IACA;IACAE,UAAA;MACA,KAAAf,SAAA;MACA,KAAAC,YAAA;QAAA,QAAAL;MAAA;IACA;IACAoB,WAAA;MACA,KAAAhB,SAAA;MACA,KAAAJ,QAAA;QAAA,QAAAK,YAAA;QAAAF,QAAA;MAAA;IACA;IACA,MAAAkB,YAAA;MACA;QACA,MAAAT,QAAA,SAAAC,KAAA;UACAS,MAAA;UACAC,OAAA;YACA;UACA;UACAC,IAAA,EAAAC,IAAA,CAAAC,SAAA,MAAA1B,QAAA;QACA;QACA,MAAAD,IAAA,SAAAa,QAAA,CAAAG,IAAA;QACA,IAAAhB,IAAA,CAAAiB,MAAA;UACA,KAAAE,QAAA,CAAAS,OAAA;UACA,KAAAvB,SAAA;UACA,WAAAO,eAAA;UACA,KAAAiB,MAAA,CAAAC,QAAA,2BAAA7B,QAAA;QACA;UACA,KAAAkB,QAAA,CAAAD,KAAA,CAAAlB,IAAA,CAAA+B,OAAA;QACA;MACA,SAAAb,KAAA;QACA,KAAAC,QAAA,CAAAD,KAAA;MACA;IACA;EACA;EACAc,QAAA;IACA,KAAApB,eAAA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}