{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport axios from 'axios';\nexport default {\n  data() {\n    return {\n      user_id: 1,\n      // session获取\n      shop_id: '',\n      searchKeyword: '',\n      searchType: 'name',\n      // 默认为根据名称搜索\n      searchKeywordNow: '',\n      searchTypeNow: '',\n      // 搜索用\n      deleteDialogVisible: false,\n      shopStatus: 'all',\n      // 默认为“全部”状态\n      deleteShopNow: '',\n      // 用户删除店铺关系\n      statusMap: {\n        'star': '收藏',\n        'black': '拉黑'\n      },\n      shops: [],\n      currentPage: 1,\n      pageSize: 15,\n      totalItems: 3 // 模拟总商品数\n    };\n  },\n  computed: {\n    // 过滤后的商品列表\n    filteredShops() {\n      if (this.searchKeywordNow === '' || this.searchTypeNow === '') {\n        if (this.shopStatus === 'all') {\n          return this.shops;\n        }\n        return this.shops.filter(product => product.relation === this.shopStatus);\n      } else if (this.searchTypeNow === 'name') {\n        if (this.shopStatus === 'all') {\n          return this.shops.filter(product => product.shop_name.includes(this.searchKeywordNow));\n        }\n        return this.shops.filter(product => product.relation === this.shopStatus && product.shop_name.includes(this.searchKeywordNow));\n      } else {\n        if (this.shopStatus === 'all') {\n          return this.shops.filter(product => product.location.includes(this.searchKeywordNow));\n        }\n        return this.shops.filter(product => product.relation === this.shopStatus && product.location.includes(this.searchKeywordNow));\n      }\n    }\n  },\n  created() {\n    this.getShops();\n    this.user_id = this.$store.getters.userId;\n  },\n  methods: {\n    async getShops() {\n      this.user_id = this.$store.getters.userId;\n      const proResponse = await axios.post('http://localhost:8081/shop/selectByUser', {\n        uid: this.user_id\n      });\n      if (proResponse.data != null) {\n        for (let shop of proResponse.data) {\n          const starResponse = await axios.post('http://localhost:8081/shop/checkRelation', {\n            uid: this.user_id,\n            sid: shop.shop_id\n          });\n          if (starResponse.data != null) {\n            this.shops.push({\n              shop_id: shop.shop_id,\n              shop_name: shop.shop_name,\n              location: shop.location,\n              level: shop.level,\n              relation: starResponse.data\n            });\n          }\n        }\n        this.totalItems = this.shops.length;\n      }\n    },\n    // 模拟商品搜索功能\n    searchShops() {\n      this.searchKeywordNow = this.searchKeyword;\n      this.searchTypeNow = this.searchType;\n    },\n    handlePageChange(page) {\n      console.log('当前页:', page);\n    },\n    // 商品管理操作\n    deleteShop(id) {\n      this.deleteShopNow = id;\n      this.deleteDialogVisible = true;\n    },\n    // 重置删除状态\n    resetDeleteState() {\n      this.deleteShopNow = null;\n    },\n    // 确认删除\n    async confirmDelete() {\n      // 调用后端 API 删除商品\n      const proAddResponse = await axios.post('http://localhost:8081/shop/changeRelation', {\n        sid: this.deleteShopNow,\n        uid: this.user_id,\n        relation: \"none\"\n      });\n      if (proAddResponse.status === 200) {\n        this.deleteDialogVisible = false;\n        alert('取消成功');\n        window.location.reload();\n      } else {\n        this.deleteDialogVisible = false;\n        alert('取消失败');\n        window.location.reload();\n      }\n    },\n    async showShopDetails(shop_id) {\n      this.$router.push({\n        name: 'shop-show',\n        params: {\n          id: shop_id\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","data","user_id","shop_id","searchKeyword","searchType","searchKeywordNow","searchTypeNow","deleteDialogVisible","shopStatus","deleteShopNow","statusMap","shops","currentPage","pageSize","totalItems","computed","filteredShops","filter","product","relation","shop_name","includes","location","created","getShops","$store","getters","userId","methods","proResponse","post","uid","shop","starResponse","sid","push","level","length","searchShops","handlePageChange","page","console","log","deleteShop","id","resetDeleteState","confirmDelete","proAddResponse","status","alert","window","reload","showShopDetails","$router","name","params"],"sources":["src/views/star/ShopStarView.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <h2>店铺收藏与拉黑管理</h2>\r\n      \r\n      <!-- 搜索栏和操作按钮（顶部）-->\r\n      <div class=\"search-bar\">\r\n        <div style=\"display: flex; align-items: center;\">\r\n          <!-- 搜索方式选择 -->\r\n          <el-select\r\n            v-model=\"searchType\"\r\n            placeholder=\"请选择搜索方式\"\r\n            style=\"width: 150px; margin-right: 10px;\">\r\n            <el-option label=\"名称\" value=\"name\" />\r\n            <el-option label=\"特产地\" value=\"location\" />\r\n          </el-select>\r\n  \r\n          <!-- 搜索框 -->\r\n          <el-input\r\n            v-model=\"searchKeyword\"\r\n            placeholder=\"请输入店铺名称或地区\"\r\n            style=\"width: 200px; margin-right: 10px;\"\r\n          />\r\n  \r\n          <!-- 搜索按钮 -->\r\n          <el-button @click=\"searchShops\" type=\"primary\">搜索</el-button>\r\n        </div>\r\n  \r\n        <div style=\"margin-top: 10px; display: flex; align-items: center;\">\r\n          <!-- 商品状态选择 -->\r\n          <el-select\r\n            v-model=\"shopStatus\"\r\n            placeholder=\"选择店铺关联\"\r\n            style=\"width: 200px; margin-right: 10px;\">\r\n            <el-option label=\"全部\" value=\"all\" />\r\n            <el-option label=\"收藏\" value=\"star\" />\r\n            <el-option label=\"拉黑\" value=\"black\" />\r\n          </el-select>\r\n        </div>\r\n      </div>\r\n  \r\n      <!-- 店铺列表（中部）-->\r\n      <div>\r\n        <el-table :data=\"filteredShops\" style=\"width: 100%\">\r\n          <el-table-column prop=\"shop_name\" label=\"店铺名称\" />\r\n          <el-table-column prop=\"location\" label=\"所在地\"/>\r\n          <el-table-column prop=\"level\" label=\"店铺等级\" />\r\n  \r\n          <el-table-column label=\"操作\">\r\n            <template slot-scope=\"scope\">\r\n              <el-button v-if=\"scope.row.relation === 'star'\" @click=\"deleteShop(scope.row.shop_id)\" size=\"small\" type=\"danger\">取消收藏</el-button>\r\n              <el-button v-if=\"scope.row.relation === 'black'\" @click=\"deleteShop(scope.row.shop_id)\" size=\"small\" type=\"danger\">取消拉黑</el-button>\r\n              <el-button @click=\"showShopDetails(scope.row.shop_id)\" size=\"small\" type=\"info\">查看详情</el-button>\r\n            </template>\r\n          </el-table-column>\r\n        </el-table>\r\n\r\n        <!-- 删除确认弹窗 -->\r\n        <el-dialog\r\n          title=\"确认取消\"\r\n          :visible.sync=\"deleteDialogVisible\"\r\n          width=\"400px\"\r\n          @close=\"resetDeleteState\"\r\n        >\r\n          <p>确定要取消和这个店铺的关系吗？</p>\r\n          <span slot=\"footer\" class=\"dialog-footer\">\r\n            <el-button @click=\"deleteDialogVisible = false\">取消</el-button>\r\n            <el-button type=\"primary\" @click=\"confirmDelete\">确认</el-button>\r\n          </span>\r\n        </el-dialog>\r\n\r\n        <!-- 翻页组件 -->\r\n        <el-pagination\r\n          :current-page=\"currentPage\"\r\n          :page-size=\"pageSize\"\r\n          :total=\"totalItems\"\r\n          @current-change=\"handlePageChange\"\r\n          layout=\"prev, pager, next\"\r\n        />\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import axios from 'axios';\r\n\r\n  export default {\r\n    data() {\r\n      return {\r\n        user_id: 1,   // session获取\r\n        shop_id: '',\r\n        searchKeyword: '',\r\n        searchType: 'name',  // 默认为根据名称搜索\r\n        searchKeywordNow:'',\r\n        searchTypeNow: '',  // 搜索用\r\n        deleteDialogVisible:false,\r\n        shopStatus: 'all',  // 默认为“全部”状态\r\n        deleteShopNow:'',  // 用户删除店铺关系\r\n        statusMap: {\r\n          'star': '收藏',\r\n          'black': '拉黑',\r\n        },\r\n        shops: [],\r\n        currentPage: 1,\r\n        pageSize: 15,\r\n        totalItems: 3, // 模拟总商品数\r\n      };\r\n    },\r\n    computed: {\r\n      // 过滤后的商品列表\r\n      filteredShops() {\r\n        if (this.searchKeywordNow==='' || this.searchTypeNow===''){\r\n          if (this.shopStatus === 'all') {\r\n              return this.shops;\r\n          }\r\n          return this.shops.filter(product => product.relation === this.shopStatus);\r\n        }\r\n        else if (this.searchTypeNow==='name') {\r\n          if (this.shopStatus === 'all') {\r\n            return this.shops.filter(product => product.shop_name.includes(this.searchKeywordNow));\r\n          }\r\n          return this.shops.filter(product => product.relation === this.shopStatus && product.shop_name.includes(this.searchKeywordNow));\r\n        } else {\r\n          if (this.shopStatus === 'all') {\r\n            return this.shops.filter(product => product.location.includes(this.searchKeywordNow));\r\n          }\r\n          return this.shops.filter(product => product.relation === this.shopStatus && product.location.includes(this.searchKeywordNow));\r\n        }\r\n      }\r\n    },\r\n    created() {\r\n      this.getShops();\r\n      this.user_id=this.$store.getters.userId;\r\n    },\r\n    methods: {\r\n      async getShops() {\r\n        this.user_id=this.$store.getters.userId;\r\n        const proResponse = await axios.post('http://localhost:8081/shop/selectByUser', {uid:this.user_id});\r\n        if ( proResponse.data != null ) {\r\n            for ( let shop of proResponse.data ) {\r\n                const starResponse = await axios.post('http://localhost:8081/shop/checkRelation', {uid:this.user_id,sid:shop.shop_id});\r\n                if ( starResponse.data != null ) {\r\n                    this.shops.push({shop_id: shop.shop_id, shop_name: shop.shop_name, location: shop.location, level: shop.level, relation: starResponse.data});\r\n                }\r\n          }\r\n          this.totalItems = this.shops.length;\r\n        }\r\n      },\r\n      // 模拟商品搜索功能\r\n      searchShops() {\r\n        this.searchKeywordNow = this.searchKeyword;\r\n        this.searchTypeNow = this.searchType;\r\n      },\r\n      handlePageChange(page) {\r\n        console.log('当前页:', page);\r\n      },\r\n      // 商品管理操作\r\n      deleteShop(id) {\r\n        this.deleteShopNow = id;\r\n        this.deleteDialogVisible = true;\r\n      },\r\n      // 重置删除状态\r\n      resetDeleteState() {\r\n        this.deleteShopNow = null;\r\n      },\r\n      // 确认删除\r\n      async confirmDelete() {\r\n        // 调用后端 API 删除商品\r\n        const proAddResponse = await axios.post('http://localhost:8081/shop/changeRelation', {sid: this.deleteShopNow, uid:this.user_id, relation: \"none\"});\r\n        if ( proAddResponse.status === 200) {\r\n          this.deleteDialogVisible = false;\r\n          alert('取消成功');\r\n          window.location.reload();\r\n        } else {\r\n          this.deleteDialogVisible = false;\r\n          alert('取消失败');\r\n          window.location.reload();\r\n        }\r\n      },\r\n      async showShopDetails(shop_id) {\r\n        this.$router.push({\r\n          name: 'shop-show',\r\n          params: { id: shop_id }\r\n        });\r\n      },\r\n    },\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .search-bar {\r\n    margin-bottom: 20px;\r\n  }\r\n  \r\n  .el-table th {\r\n    background-color: #f4f4f4;\r\n  }\r\n  \r\n  .dialog-footer {\r\n    text-align: right;\r\n  }\r\n  \r\n  .stock-table {\r\n    width: 100%;\r\n    border-collapse: collapse;\r\n  }\r\n  \r\n  .stock-table th,\r\n  .stock-table td {\r\n    padding: 10px;\r\n    text-align: center;\r\n    border: 1px solid #ddd;\r\n  }\r\n  \r\n  .stock-table th {\r\n    background-color: #f2f2f2;\r\n    font-weight: bold;\r\n  }\r\n  \r\n  .stock-table tr:nth-child(even) {\r\n    background-color: #f9f9f9;\r\n  }\r\n  \r\n  .stock-table tr:hover {\r\n    background-color: #f1f1f1;\r\n  }\r\n  /* 设定图片预览的最大宽度和高度 */\r\n  .preview-img {\r\n    max-width: 150px; /* 控制最大宽度 */\r\n    max-height: 150px; /* 控制最大高度 */\r\n    object-fit: cover; /* 确保图片按比例缩放且不会变形 */\r\n  }\r\n  </style>\r\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}