{"ast":null,"code":"export default {\n  name: 'UserCommentList',\n  data() {\n    return {\n      comments: []\n    };\n  },\n  created() {\n    this.fetchComments();\n  },\n  methods: {\n    async fetchComments() {\n      try {\n        const response = await this.$axios.post('http://localhost:8081/comment/getCommentByUserId', {\n          user_id: this.$store.getters.userId\n        });\n        if (response.data) {\n          this.comments = response.data;\n        }\n      } catch (error) {\n        this.$message.error('获取评价列表失败');\n        console.error('获取评价列表失败:', error);\n      }\n    },\n    previewImage(url) {\n      // 图片预览\n      this.$imagePreview({\n        images: [url],\n        index: 0\n      });\n    }\n  }\n};","map":{"version":3,"names":["name","data","comments","created","fetchComments","methods","response","$axios","post","user_id","$store","getters","userId","error","$message","console","previewImage","url","$imagePreview","images","index"],"sources":["src/views/usermodel/UserCommentList.vue"],"sourcesContent":["<template>\r\n  <div class=\"user-comments-container\">\r\n    <div class=\"user-comments-page\">\r\n      <div class=\"comments-container\">\r\n        <h2>我的评价</h2>\r\n        \r\n        <!-- 评价列表 -->\r\n        <div class=\"comment-list\">\r\n          <div v-for=\"comment in comments\" :key=\"comment.comment_id\" class=\"comment-item\">\r\n            <div class=\"comment-header\">\r\n              <div class=\"comment-info\">\r\n                <span class=\"comment-date\">{{ new Date(comment.created_time).toLocaleString() }}</span>\r\n              </div>\r\n              <div class=\"comment-rating\">\r\n                <el-rate\r\n                  v-model=\"comment.level\"\r\n                  disabled\r\n                  :colors=\"['#99A9BF', '#F7BA2A', '#FF9900']\"\r\n                ></el-rate>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"comment-content\">\r\n              <div class=\"product-info\">\r\n                <img :src=\"comment.product_image\" :alt=\"comment.product_name\">\r\n                <div class=\"product-detail\">\r\n                  <h4>{{ comment.product_name }}</h4>\r\n                  <p class=\"price\">¥{{ comment.product_price }}</p>\r\n                </div>\r\n              </div>\r\n              \r\n              <div class=\"comment-text\">\r\n                {{ comment.content }}\r\n              </div>\r\n\r\n              <!-- 评价图片 -->\r\n              <div class=\"comment-images\" v-if=\"comment.picture_urls && comment.picture_urls.length\">\r\n                <img \r\n                  v-for=\"(url, index) in comment.picture_urls\" \r\n                  :key=\"index\" \r\n                  :src=\"url\" \r\n                  @click=\"previewImage(url)\"\r\n                >\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- 空状态 -->\r\n        <div v-if=\"comments.length === 0\" class=\"empty-state\">\r\n          <i class=\"el-icon-chat-dot-square\"></i>\r\n          <p>暂无评价记录</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'UserCommentList',\r\n  data() {\r\n    return {\r\n      comments: []\r\n    }\r\n  },\r\n  created() {\r\n    this.fetchComments();\r\n  },\r\n  methods: {\r\n    async fetchComments() {\r\n      try {\r\n        const response = await this.$axios.post('http://localhost:8081/comment/getCommentByUserId', {\r\n          user_id: this.$store.getters.userId\r\n        });\r\n        \r\n        if (response.data) {\r\n          this.comments = response.data;\r\n        }\r\n      } catch (error) {\r\n        this.$message.error('获取评价列表失败');\r\n        console.error('获取评价列表失败:', error);\r\n      }\r\n    },\r\n    previewImage(url) {\r\n      // 图片预览\r\n      this.$imagePreview({\r\n        images: [url],\r\n        index: 0\r\n      });\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.user-comments-container {\r\n  width: 100%;\r\n}\r\n\r\n.user-comments-page {\r\n  background-color: #f5f5f5;\r\n  padding: 20px 0;\r\n  min-height: calc(100vh - 120px);\r\n}\r\n\r\n.comments-container {\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n  padding: 0 20px;\r\n\r\n  h2 {\r\n    margin-bottom: 20px;\r\n    font-size: 24px;\r\n    font-weight: normal;\r\n  }\r\n}\r\n\r\n.comment-list {\r\n  .comment-item {\r\n    background: white;\r\n    border-radius: 8px;\r\n    margin-bottom: 20px;\r\n    overflow: hidden;\r\n\r\n    .comment-header {\r\n      padding: 15px 20px;\r\n      border-bottom: 1px solid #eee;\r\n      display: flex;\r\n      justify-content: space-between;\r\n      align-items: center;\r\n\r\n      .comment-date {\r\n        color: #999;\r\n      }\r\n    }\r\n\r\n    .comment-content {\r\n      padding: 20px;\r\n\r\n      .product-info {\r\n        display: flex;\r\n        gap: 15px;\r\n        padding-bottom: 15px;\r\n        border-bottom: 1px solid #eee;\r\n\r\n        img {\r\n          width: 80px;\r\n          height: 80px;\r\n          object-fit: cover;\r\n          border-radius: 4px;\r\n        }\r\n\r\n        .product-detail {\r\n          h4 {\r\n            margin: 0 0 10px;\r\n            font-size: 16px;\r\n          }\r\n\r\n          .price {\r\n            color: #ff6700;\r\n            font-weight: bold;\r\n          }\r\n        }\r\n      }\r\n\r\n      .comment-text {\r\n        padding: 15px 0;\r\n        color: #333;\r\n        line-height: 1.6;\r\n      }\r\n\r\n      .comment-images {\r\n        display: flex;\r\n        flex-wrap: wrap;\r\n        gap: 10px;\r\n\r\n        img {\r\n          width: 100px;\r\n          height: 100px;\r\n          object-fit: cover;\r\n          border-radius: 4px;\r\n          cursor: pointer;\r\n          transition: opacity 0.3s;\r\n\r\n          &:hover {\r\n            opacity: 0.8;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n.empty-state {\r\n  text-align: center;\r\n  padding: 60px 0;\r\n  color: #999;\r\n\r\n  i {\r\n    font-size: 60px;\r\n    margin-bottom: 20px;\r\n  }\r\n}\r\n</style> "],"mappings":"AA2DA;EACAA,IAAA;EACAC,KAAA;IACA;MACAC,QAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,aAAA;EACA;EACAC,OAAA;IACA,MAAAD,cAAA;MACA;QACA,MAAAE,QAAA,cAAAC,MAAA,CAAAC,IAAA;UACAC,OAAA,OAAAC,MAAA,CAAAC,OAAA,CAAAC;QACA;QAEA,IAAAN,QAAA,CAAAL,IAAA;UACA,KAAAC,QAAA,GAAAI,QAAA,CAAAL,IAAA;QACA;MACA,SAAAY,KAAA;QACA,KAAAC,QAAA,CAAAD,KAAA;QACAE,OAAA,CAAAF,KAAA,cAAAA,KAAA;MACA;IACA;IACAG,aAAAC,GAAA;MACA;MACA,KAAAC,aAAA;QACAC,MAAA,GAAAF,GAAA;QACAG,KAAA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}