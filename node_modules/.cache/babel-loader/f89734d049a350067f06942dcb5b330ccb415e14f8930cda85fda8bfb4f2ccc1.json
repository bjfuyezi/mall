{"ast":null,"code":"import axios from 'axios';\nexport default {\n  data() {\n    return {\n      users: [],\n      // 用户列表\n      addUserDialog: false,\n      editUserDialog: false,\n      newUser: {\n        username: '',\n        password: '',\n        email: '',\n        role: '',\n        isActive: false // 默认活跃状态\n      },\n      currentUser: {}\n    };\n  },\n  methods: {\n    fetchUsers() {\n      axios.get('http://localhost:8081/users/list').then(response => {\n        this.users = response.data; // 使用 response\n      }).catch(error => {\n        console.error('Error fetching users:', error);\n      });\n    },\n    showAddUserDialog() {\n      this.addUserDialog = true;\n    },\n    addUser() {\n      axios.post('http://localhost:8081/users/add', this.newUser).then(response => {\n        console.log('Add user response:', response); // 使用 response\n        this.fetchUsers(); // 刷新用户列表\n        this.addUserDialog = false; // 关闭对话框\n      }).catch(error => {\n        console.error('Error adding user:', error);\n      });\n    },\n    editUser(user) {\n      this.currentUser = {\n        ...user\n      }; // 复制用户信息\n      this.editUserDialog = true; // 打开编辑对话框\n    },\n    updateUser() {\n      axios.put(`http://localhost:8081/users/edit/${this.currentUser.user_id}`, this.currentUser).then(response => {\n        console.log('Update user response:', response); // 使用 response\n        this.fetchUsers(); // 刷新用户列表\n        this.editUserDialog = false; // 关闭对话框\n      }).catch(error => {\n        console.error('Error updating user:', error);\n      });\n    },\n    confirmDeleteUser(userId) {\n      this.$confirm('确定要删除此用户吗?', '警告', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        this.deleteUser(userId);\n      }).catch(() => {\n        this.$message({\n          type: 'info',\n          message: '已取消删除'\n        });\n      });\n    },\n    deleteUser(userId) {\n      axios.delete(`http://localhost:8081/users/delete/${userId}`).then(response => {\n        console.log('Delete user response:', response); // 使用 response\n        this.fetchUsers(); // 刷新用户列表\n      }).catch(error => {\n        console.error('Error deleting user:', error);\n      });\n    }\n  },\n  mounted() {\n    this.fetchUsers(); // 获取用户列表\n  }\n};","map":{"version":3,"names":["axios","data","users","addUserDialog","editUserDialog","newUser","username","password","email","role","isActive","currentUser","methods","fetchUsers","get","then","response","catch","error","console","showAddUserDialog","addUser","post","log","editUser","user","updateUser","put","user_id","confirmDeleteUser","userId","$confirm","confirmButtonText","cancelButtonText","type","deleteUser","$message","message","delete","mounted"],"sources":["src/views/admin/UserManagement.vue"],"sourcesContent":["<template>\r\n  <div class=\"user-management\">\r\n    <h2>用户管理</h2>\r\n    <el-button type=\"primary\" @click=\"showAddUserDialog\">添加用户</el-button>\r\n    <el-table :data=\"users\" style=\"width: 100%\">\r\n      <el-table-column prop=\"user_id\" label=\"用户ID\" width=\"80\"></el-table-column>\r\n      <el-table-column prop=\"username\" label=\"用户名\"></el-table-column>\r\n      <el-table-column prop=\"email\" label=\"邮箱\"></el-table-column>\r\n      <el-table-column label=\"操作\" width=\"180\">\r\n        <template slot-scope=\"scope\">\r\n          <el-button @click=\"editUser(scope.row)\">编辑</el-button>\r\n          <el-button type=\"danger\" @click=\"confirmDeleteUser(scope.row.user_id)\">删除</el-button>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n\r\n    <el-dialog title=\"添加用户\" :visible.sync=\"addUserDialog\">\r\n      <el-form :model=\"newUser\">\r\n        <el-form-item label=\"用户名\">\r\n          <el-input v-model=\"newUser.username\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"密码\">\r\n          <el-input type=\"password\" v-model=\"newUser.password\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"邮箱\">\r\n          <el-input v-model=\"newUser.email\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"角色\">\r\n          <el-input v-model=\"newUser.role\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"活跃状态\">\r\n          <el-switch v-model=\"newUser.isActive\"></el-switch>\r\n        </el-form-item>\r\n      </el-form>\r\n      <span slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"addUserDialog = false\">取 消</el-button>\r\n        <el-button type=\"primary\" @click=\"addUser\">确 定</el-button>\r\n      </span>\r\n    </el-dialog>\r\n\r\n    <el-dialog title=\"编辑用户\" :visible.sync=\"editUserDialog\">\r\n      <el-form :model=\"currentUser\">\r\n        <el-form-item label=\"用户名\">\r\n          <el-input v-model=\"currentUser.username\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"邮箱\">\r\n          <el-input v-model=\"currentUser.email\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"角色\">\r\n          <el-input v-model=\"currentUser.role\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"活跃状态\">\r\n          <el-switch v-model=\"currentUser.isActive\"></el-switch>\r\n        </el-form-item>\r\n      </el-form>\r\n      <span slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"editUserDialog = false\">取 消</el-button>\r\n        <el-button type=\"primary\" @click=\"updateUser\">确 定</el-button>\r\n      </span>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      users: [], // 用户列表\r\n      addUserDialog: false,\r\n      editUserDialog: false,\r\n      newUser: {\r\n        username: '',\r\n        password: '',\r\n        email: '',\r\n        role: '',\r\n        isActive: false // 默认活跃状态\r\n      },\r\n      currentUser: {}\r\n    };\r\n  },\r\n  methods: {\r\n    fetchUsers() {\r\n      axios.get('http://localhost:8081/users/list')\r\n        .then(response => {\r\n          this.users = response.data; // 使用 response\r\n        })\r\n        .catch(error => {\r\n          console.error('Error fetching users:', error);\r\n        });\r\n    },\r\n    showAddUserDialog() {\r\n      this.addUserDialog = true;\r\n    },\r\n    addUser() {\r\n      axios.post('http://localhost:8081/users/add', this.newUser)\r\n        .then(response => {\r\n          console.log('Add user response:', response); // 使用 response\r\n          this.fetchUsers(); // 刷新用户列表\r\n          this.addUserDialog = false; // 关闭对话框\r\n        })\r\n        .catch(error => {\r\n          console.error('Error adding user:', error);\r\n        });\r\n    },\r\n    editUser(user) {\r\n      this.currentUser = { ...user }; // 复制用户信息\r\n      this.editUserDialog = true; // 打开编辑对话框\r\n    },\r\n    updateUser() {\r\n      axios.put(`http://localhost:8081/users/edit/${this.currentUser.user_id}`, this.currentUser)\r\n        .then(response => {\r\n          console.log('Update user response:', response); // 使用 response\r\n          this.fetchUsers(); // 刷新用户列表\r\n          this.editUserDialog = false; // 关闭对话框\r\n        })\r\n        .catch(error => {\r\n          console.error('Error updating user:', error);\r\n        });\r\n    },\r\n    confirmDeleteUser(userId) {\r\n      this.$confirm('确定要删除此用户吗?', '警告', {\r\n        confirmButtonText: '确定',\r\n        cancelButtonText: '取消',\r\n        type: 'warning'\r\n      }).then(() => {\r\n        this.deleteUser(userId);\r\n      }).catch(() => {\r\n        this.$message({\r\n          type: 'info',\r\n          message: '已取消删除'\r\n        });\r\n      });\r\n    },\r\n    deleteUser(userId) {\r\n      axios.delete(`http://localhost:8081/users/delete/${userId}`)\r\n        .then(response => {\r\n          console.log('Delete user response:', response); // 使用 response\r\n          this.fetchUsers(); // 刷新用户列表\r\n        })\r\n        .catch(error => {\r\n          console.error('Error deleting user:', error);\r\n        });\r\n    }\r\n  },\r\n  mounted() {\r\n    this.fetchUsers(); // 获取用户列表\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.user-management {\r\n  padding: 20px;\r\n}\r\n</style> "],"mappings":"AAgEA,OAAAA,KAAA;AAEA;EACAC,KAAA;IACA;MACAC,KAAA;MAAA;MACAC,aAAA;MACAC,cAAA;MACAC,OAAA;QACAC,QAAA;QACAC,QAAA;QACAC,KAAA;QACAC,IAAA;QACAC,QAAA;MACA;MACAC,WAAA;IACA;EACA;EACAC,OAAA;IACAC,WAAA;MACAb,KAAA,CAAAc,GAAA,qCACAC,IAAA,CAAAC,QAAA;QACA,KAAAd,KAAA,GAAAc,QAAA,CAAAf,IAAA;MACA,GACAgB,KAAA,CAAAC,KAAA;QACAC,OAAA,CAAAD,KAAA,0BAAAA,KAAA;MACA;IACA;IACAE,kBAAA;MACA,KAAAjB,aAAA;IACA;IACAkB,QAAA;MACArB,KAAA,CAAAsB,IAAA,yCAAAjB,OAAA,EACAU,IAAA,CAAAC,QAAA;QACAG,OAAA,CAAAI,GAAA,uBAAAP,QAAA;QACA,KAAAH,UAAA;QACA,KAAAV,aAAA;MACA,GACAc,KAAA,CAAAC,KAAA;QACAC,OAAA,CAAAD,KAAA,uBAAAA,KAAA;MACA;IACA;IACAM,SAAAC,IAAA;MACA,KAAAd,WAAA;QAAA,GAAAc;MAAA;MACA,KAAArB,cAAA;IACA;IACAsB,WAAA;MACA1B,KAAA,CAAA2B,GAAA,0CAAAhB,WAAA,CAAAiB,OAAA,SAAAjB,WAAA,EACAI,IAAA,CAAAC,QAAA;QACAG,OAAA,CAAAI,GAAA,0BAAAP,QAAA;QACA,KAAAH,UAAA;QACA,KAAAT,cAAA;MACA,GACAa,KAAA,CAAAC,KAAA;QACAC,OAAA,CAAAD,KAAA,yBAAAA,KAAA;MACA;IACA;IACAW,kBAAAC,MAAA;MACA,KAAAC,QAAA;QACAC,iBAAA;QACAC,gBAAA;QACAC,IAAA;MACA,GAAAnB,IAAA;QACA,KAAAoB,UAAA,CAAAL,MAAA;MACA,GAAAb,KAAA;QACA,KAAAmB,QAAA;UACAF,IAAA;UACAG,OAAA;QACA;MACA;IACA;IACAF,WAAAL,MAAA;MACA9B,KAAA,CAAAsC,MAAA,uCAAAR,MAAA,IACAf,IAAA,CAAAC,QAAA;QACAG,OAAA,CAAAI,GAAA,0BAAAP,QAAA;QACA,KAAAH,UAAA;MACA,GACAI,KAAA,CAAAC,KAAA;QACAC,OAAA,CAAAD,KAAA,yBAAAA,KAAA;MACA;IACA;EACA;EACAqB,QAAA;IACA,KAAA1B,UAAA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}