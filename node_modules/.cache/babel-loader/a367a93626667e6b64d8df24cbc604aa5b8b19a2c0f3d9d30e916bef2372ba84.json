{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { mapState, mapGetters } from 'vuex';\nexport default {\n  name: 'UserAddress',\n  data() {\n    return {\n      addresses: [],\n      dialogVisible: false,\n      dialogTitle: '添加新地址',\n      addressForm: {\n        address_id: null,\n        user_id: null,\n        addressContent: '',\n        province: '',\n        phone: '',\n        isDefault: 0\n      },\n      isEdit: false,\n      rules: {\n        addressContent: [{\n          required: true,\n          message: '请输入详细地址',\n          trigger: 'blur'\n        }, {\n          min: 5,\n          message: '地址长度至少5个字符',\n          trigger: 'blur'\n        }],\n        province: [{\n          required: true,\n          message: '请输入省份',\n          trigger: 'blur'\n        }],\n        phone: [{\n          required: true,\n          message: '请输入联系电话',\n          trigger: 'blur'\n        }, {\n          pattern: /^1[3-9]\\d{9}$/,\n          message: '请输入正确的手机号码',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  computed: {\n    ...mapState({\n      currentUser: state => state.user\n    }),\n    ...mapGetters(['user_id'])\n  },\n  methods: {\n    async loadAddresses() {\n      try {\n        console.log('Loading addresses for user_id:', this.user_id);\n        const response = await fetch(`http://localhost:8081/addresses/user/${this.user_id}`);\n        const data = await response.json();\n        console.log('Received addresses data:', data);\n        if (data.status === 'success' && Array.isArray(data.data)) {\n          this.addresses = data.data;\n          console.log('Updated addresses:', this.addresses);\n        } else {\n          console.error('Invalid address data received:', data);\n          this.$message.error('获取地址列表失败');\n        }\n      } catch (error) {\n        console.error('Error loading addresses:', error);\n        this.$message.error('获取地址列表失败');\n      }\n    },\n    showAddDialog() {\n      this.isEdit = false;\n      this.dialogTitle = '添加新地址';\n      this.addressForm = {\n        address_id: null,\n        user_id: null,\n        addressContent: '',\n        province: '',\n        phone: '',\n        isDefault: 0\n      };\n      this.dialogVisible = true;\n    },\n    handleEdit(row) {\n      this.isEdit = true;\n      this.dialogTitle = '编辑地址';\n      this.addressForm = {\n        ...row\n      };\n      this.dialogVisible = true;\n    },\n    async handleDelete(row) {\n      try {\n        const response = await fetch(`http://localhost:8081/addresses/delete/${row.address_id}`, {\n          method: 'DELETE'\n        });\n        const data = await response.json();\n        if (data.status === 'success') {\n          this.$message.success('删除成功');\n          this.loadAddresses();\n        } else {\n          this.$message.error(data.message || '删除失败');\n        }\n      } catch (error) {\n        this.$message.error('删除失败');\n      }\n    },\n    async setDefault(row) {\n      try {\n        const response = await fetch(`http://localhost:8081/addresses/default/${row.address_id}?user_id=${this.user_id}`, {\n          method: 'PUT'\n        });\n        const data = await response.json();\n        if (data.status === 'success') {\n          this.$message.success('设置成功');\n          this.loadAddresses();\n        } else {\n          this.$message.error(data.message || '设置失败');\n        }\n      } catch (error) {\n        this.$message.error('设置失败');\n      }\n    },\n    async submitForm() {\n      this.$refs.addressForm.validate(async valid => {\n        if (valid) {\n          try {\n            const url = this.isEdit ? 'http://localhost:8081/addresses/update' : 'http://localhost:8081/addresses/add';\n            const method = this.isEdit ? 'PUT' : 'POST';\n            if (!this.isEdit) {\n              this.addressForm.user_id = this.user_id;\n            }\n            console.log('提交的地址数据：', this.addressForm);\n            const response = await fetch(url, {\n              method,\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify(this.addressForm)\n            });\n            const data = await response.json();\n            if (data.status === 'success') {\n              this.$message.success(this.isEdit ? '更新成功' : '添加成功');\n              this.dialogVisible = false;\n              this.loadAddresses();\n            } else {\n              this.$message.error(data.message || (this.isEdit ? '更新失败' : '添加失败'));\n            }\n          } catch (error) {\n            console.error('提交地址时出错：', error);\n            this.$message.error(this.isEdit ? '更新失败' : '添加失败');\n          }\n        }\n      });\n    },\n    goBack() {\n      this.$router.push('/user/center');\n    }\n  },\n  created() {\n    this.loadAddresses();\n  }\n};","map":{"version":3,"names":["mapState","mapGetters","name","data","addresses","dialogVisible","dialogTitle","addressForm","address_id","user_id","addressContent","province","phone","isDefault","isEdit","rules","required","message","trigger","min","pattern","computed","currentUser","state","user","methods","loadAddresses","console","log","response","fetch","json","status","Array","isArray","error","$message","showAddDialog","handleEdit","row","handleDelete","method","success","setDefault","submitForm","$refs","validate","valid","url","headers","body","JSON","stringify","goBack","$router","push","created"],"sources":["src/views/UserAddress.vue"],"sourcesContent":["<template>\r\n  <div class=\"address-list\">\r\n    <el-card shadow=\"never\">\r\n      <div slot=\"header\" class=\"card-header\">\r\n        <div class=\"header-left\">\r\n          <el-button icon=\"el-icon-arrow-left\" type=\"text\" @click=\"goBack\">返回</el-button>\r\n          <span class=\"title\">收货地址</span>\r\n        </div>\r\n        <el-button type=\"primary\" size=\"small\" @click=\"showAddDialog\">\r\n          <i class=\"el-icon-plus\"></i> 新增地址\r\n        </el-button>\r\n      </div>\r\n\r\n      <div class=\"address-items\">\r\n        <el-row :gutter=\"20\">\r\n          <el-col :span=\"24\" v-for=\"address in addresses\" :key=\"address.address_id\">\r\n            <el-card shadow=\"hover\" class=\"address-item\">\r\n              <div class=\"address-content\">\r\n                <div class=\"address-main\">\r\n                  <div class=\"location\" v-if=\"address.addressContent\">\r\n                    <i class=\"el-icon-location\"></i>\r\n                    {{ address.province }} {{ address.addressContent }}\r\n                  </div>\r\n                  <div class=\"phone\" v-if=\"address.phone\">\r\n                    <i class=\"el-icon-phone\"></i>\r\n                    {{ address.phone }}\r\n                  </div>\r\n                </div>\r\n                <div class=\"address-tags\">\r\n                  <el-tag v-if=\"address.isDefault === 1\" type=\"success\" size=\"small\">默认地址</el-tag>\r\n                </div>\r\n              </div>\r\n              <div class=\"address-actions\">\r\n                <el-button type=\"text\" @click=\"handleEdit(address)\">编辑</el-button>\r\n                <el-button type=\"text\" @click=\"handleDelete(address)\" class=\"delete-btn\">删除</el-button>\r\n                <el-button \r\n                  v-if=\"address.isDefault !== 1\"\r\n                  type=\"text\" \r\n                  @click=\"setDefault(address)\">\r\n                  设为默认\r\n                </el-button>\r\n              </div>\r\n            </el-card>\r\n          </el-col>\r\n        </el-row>\r\n      </div>\r\n    </el-card>\r\n\r\n    <!-- 添加/编辑地址对话框 -->\r\n    <el-dialog :title=\"dialogTitle\" :visible.sync=\"dialogVisible\">\r\n      <el-form :model=\"addressForm\" :rules=\"rules\" ref=\"addressForm\" label-width=\"100px\">\r\n        <el-form-item label=\"详细地址\" prop=\"addressContent\">\r\n          <el-input v-model=\"addressForm.addressContent\" \r\n                    type=\"textarea\" \r\n                    :rows=\"2\"\r\n                    placeholder=\"请输入详细地址信息，如道路、门牌号、小区、楼栋号、单元等\">\r\n          </el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"省份\" prop=\"province\">\r\n          <el-input v-model=\"addressForm.province\" placeholder=\"请输入省份\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"联系电话\" prop=\"phone\">\r\n          <el-input v-model=\"addressForm.phone\" placeholder=\"请输入手机号码\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"默认地址\">\r\n          <el-switch v-model=\"addressForm.isDefault\" :active-value=\"1\" :inactive-value=\"0\"></el-switch>\r\n        </el-form-item>\r\n      </el-form>\r\n      <div slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"dialogVisible = false\">取 消</el-button>\r\n        <el-button type=\"primary\" @click=\"submitForm\">确 定</el-button>\r\n      </div>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapState, mapGetters } from 'vuex'\r\n\r\nexport default {\r\n  name: 'UserAddress',\r\n  data() {\r\n    return {\r\n      addresses: [],\r\n      dialogVisible: false,\r\n      dialogTitle: '添加新地址',\r\n      addressForm: {\r\n        address_id: null,\r\n        user_id: null,\r\n        addressContent: '',\r\n        province: '',\r\n        phone: '',\r\n        isDefault: 0\r\n      },\r\n      isEdit: false,\r\n      rules: {\r\n        addressContent: [\r\n          { required: true, message: '请输入详细地址', trigger: 'blur' },\r\n          { min: 5, message: '地址长度至少5个字符', trigger: 'blur' }\r\n        ],\r\n        province: [\r\n          { required: true, message: '请输入省份', trigger: 'blur' }\r\n        ],\r\n        phone: [\r\n          { required: true, message: '请输入联系电话', trigger: 'blur' },\r\n          { pattern: /^1[3-9]\\d{9}$/, message: '请输入正确的手机号码', trigger: 'blur' }\r\n        ]\r\n      }\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapState({\r\n      currentUser: state => state.user\r\n    }),\r\n    ...mapGetters(['user_id'])\r\n  },\r\n  methods: {\r\n    async loadAddresses() {\r\n      try {\r\n        console.log('Loading addresses for user_id:', this.user_id);\r\n        const response = await fetch(`http://localhost:8081/addresses/user/${this.user_id}`);\r\n        const data = await response.json();\r\n        console.log('Received addresses data:', data);\r\n        \r\n        if (data.status === 'success' && Array.isArray(data.data)) {\r\n          this.addresses = data.data;\r\n          console.log('Updated addresses:', this.addresses);\r\n        } else {\r\n          console.error('Invalid address data received:', data);\r\n          this.$message.error('获取地址列表失败');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error loading addresses:', error);\r\n        this.$message.error('获取地址列表失败');\r\n      }\r\n    },\r\n    showAddDialog() {\r\n      this.isEdit = false;\r\n      this.dialogTitle = '添加新地址';\r\n      this.addressForm = {\r\n        address_id: null,\r\n        user_id: null,\r\n        addressContent: '',\r\n        province: '',\r\n        phone: '',\r\n        isDefault: 0\r\n      };\r\n      this.dialogVisible = true;\r\n    },\r\n    handleEdit(row) {\r\n      this.isEdit = true;\r\n      this.dialogTitle = '编辑地址';\r\n      this.addressForm = { ...row };\r\n      this.dialogVisible = true;\r\n    },\r\n    async handleDelete(row) {\r\n      try {\r\n        const response = await fetch(`http://localhost:8081/addresses/delete/${row.address_id}`, {\r\n          method: 'DELETE'\r\n        });\r\n        const data = await response.json();\r\n        if (data.status === 'success') {\r\n          this.$message.success('删除成功');\r\n          this.loadAddresses();\r\n        } else {\r\n          this.$message.error(data.message || '删除失败');\r\n        }\r\n      } catch (error) {\r\n        this.$message.error('删除失败');\r\n      }\r\n    },\r\n    async setDefault(row) {\r\n      try {\r\n        const response = await fetch(`http://localhost:8081/addresses/default/${row.address_id}?user_id=${this.user_id}`, {\r\n          method: 'PUT'\r\n        });\r\n        const data = await response.json();\r\n        if (data.status === 'success') {\r\n          this.$message.success('设置成功');\r\n          this.loadAddresses();\r\n        } else {\r\n          this.$message.error(data.message || '设置失败');\r\n        }\r\n      } catch (error) {\r\n        this.$message.error('设置失败');\r\n      }\r\n    },\r\n    async submitForm() {\r\n      this.$refs.addressForm.validate(async (valid) => {\r\n        if (valid) {\r\n          try {\r\n            const url = this.isEdit ? 'http://localhost:8081/addresses/update' : 'http://localhost:8081/addresses/add';\r\n            const method = this.isEdit ? 'PUT' : 'POST';\r\n            \r\n            if (!this.isEdit) {\r\n              this.addressForm.user_id = this.user_id;\r\n            }\r\n\r\n            console.log('提交的地址数据：', this.addressForm);\r\n\r\n            const response = await fetch(url, {\r\n              method,\r\n              headers: {\r\n                'Content-Type': 'application/json'\r\n              },\r\n              body: JSON.stringify(this.addressForm)\r\n            });\r\n            \r\n            const data = await response.json();\r\n            if (data.status === 'success') {\r\n              this.$message.success(this.isEdit ? '更新成功' : '添加成功');\r\n              this.dialogVisible = false;\r\n              this.loadAddresses();\r\n            } else {\r\n              this.$message.error(data.message || (this.isEdit ? '更新失败' : '添加失败'));\r\n            }\r\n          } catch (error) {\r\n            console.error('提交地址时出错：', error);\r\n            this.$message.error(this.isEdit ? '更新失败' : '添加失败');\r\n          }\r\n        }\r\n      });\r\n    },\r\n    goBack() {\r\n      this.$router.push('/user/center');\r\n    }\r\n  },\r\n  created() {\r\n    this.loadAddresses();\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.address-list {\r\n  .card-header {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    padding: 15px 0;\r\n    border-bottom: 2px solid #ff6700;\r\n\r\n    .header-left {\r\n      display: flex;\r\n      align-items: center;\r\n      gap: 10px;\r\n\r\n      .title {\r\n        font-size: 18px;\r\n        font-weight: bold;\r\n        color: #333;\r\n      }\r\n    }\r\n  }\r\n\r\n  .address-items {\r\n    margin-top: 20px;\r\n\r\n    .el-col {\r\n      margin-bottom: 20px;\r\n    }\r\n  }\r\n\r\n  .address-item {\r\n    transition: all 0.3s;\r\n    \r\n    &:hover {\r\n      transform: translateY(-2px);\r\n    }\r\n\r\n    .address-content {\r\n      margin-bottom: 15px;\r\n    }\r\n\r\n    .address-main {\r\n      .location, .phone {\r\n        margin: 8px 0;\r\n        color: #666;\r\n        \r\n        i {\r\n          margin-right: 8px;\r\n          color: #999;\r\n        }\r\n      }\r\n    }\r\n\r\n    .address-tags {\r\n      margin-top: 10px;\r\n    }\r\n\r\n    .address-actions {\r\n      border-top: 1px solid #eee;\r\n      padding-top: 10px;\r\n      display: flex;\r\n      justify-content: flex-end;\r\n      gap: 15px;\r\n\r\n      .delete-btn {\r\n        color: #ff4d4f;\r\n      }\r\n    }\r\n  }\r\n}\r\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}