{"ast":null,"code":"import axios from 'axios';\nimport moment from \"moment\";\nexport default {\n  data() {\n    return {\n      coupon: {\n        coupon_type: \"platform\",\n        start_time: \"\",\n        end_time: \"\",\n        scope: \"[]\",\n        date_range: [new Date(2025, 0, 16, 0, 0), new Date(2025, 1, 6, 0, 0)],\n        request: 100.00,\n        off: 20.00,\n        total: 999999999,\n        claim_limit: 5,\n        max_unused_count: 3,\n        shop_id: null\n      },\n      rules: {\n        date_range: [{\n          required: true,\n          message: \"请选择有效期\",\n          trigger: \"change\"\n        }],\n        request: [{\n          required: true,\n          message: \"请输入满足金额\",\n          trigger: \"blur\"\n        }],\n        off: [{\n          required: true,\n          message: \"请输入减免金额\",\n          trigger: \"blur\"\n        }],\n        total: [{\n          required: true,\n          message: \"请输入发行总量\",\n          trigger: \"blur\"\n        }],\n        claim_limit: [{\n          required: true,\n          message: \"请输入领取限制\",\n          trigger: \"blur\"\n        }],\n        max_unused_count: [{\n          required: true,\n          message: \"请输入最大未使用数量\",\n          trigger: \"blur\"\n        }]\n      },\n      pickerOptions: {\n        shortcuts: [{\n          text: '未来一周',\n          onClick(picker) {\n            const start = new Date();\n            const end = new Date();\n            end.setTime(end.getTime() + 3600 * 1000 * 24 * 7);\n            picker.$emit('pick', [start, end]);\n          }\n        }, {\n          text: '未来一个月',\n          onClick(picker) {\n            const start = new Date();\n            const end = new Date();\n            end.setTime(end.getTime() + 3600 * 1000 * 24 * 30);\n            picker.$emit('pick', [start, end]);\n          }\n        }, {\n          text: '未来三个月',\n          onClick(picker) {\n            const start = new Date();\n            const end = new Date();\n            end.setTime(end.getTime() + 3600 * 1000 * 24 * 90);\n            picker.$emit('pick', [start, end]);\n          }\n        }]\n      }\n    };\n  },\n  methods: {\n    handleDateRangeChange(value) {\n      if (value && value.length === 2) {\n        const [start, end] = value;\n        this.coupon.date_range = [moment(start).format('yyyy-MM-dd HH:mm:ss'), moment(end).format('yyyy-MM-dd HH:mm:ss')];\n      }\n    },\n    async submitCouponForm() {\n      this.$refs.couponForm.validate(async valid => {\n        if (valid) {\n          try {\n            // 分解日期范围\n            const [start, end] = this.coupon.date_range;\n            const couponData = {\n              \"coupon_type\": \"platform\",\n              \"start_time\": moment(start).format('YYYY-MM-DD HH:mm:ss'),\n              \"end_time\": moment(end).format('YYYY-MM-DD HH:mm:ss'),\n              \"scope\": \"[]\",\n              \"request\": parseFloat(this.coupon.request),\n              \"off\": parseFloat(this.coupon.off),\n              \"total\": this.coupon.total,\n              \"claim_limit\": this.coupon.claim_limit,\n              \"max_unused_count\": this.coupon.max_unused_count,\n              \"shop_id\": null\n            };\n            const response = await axios.post('http://localhost:8081/coupon/create', couponData);\n            if (response.status === 200) {\n              this.$message.success('优惠券发布成功');\n              // 关闭弹窗啥的\n              this.$emit('close');\n            } else {\n              this.$message.error(response.data);\n            }\n          } catch (error) {\n            // console.error('发布优惠券失败:', error);\n            this.$message.error(error.response.data);\n          }\n        } else {\n          this.$message.error('表单验证失败，请检查输入');\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","moment","data","coupon","coupon_type","start_time","end_time","scope","date_range","Date","request","off","total","claim_limit","max_unused_count","shop_id","rules","required","message","trigger","pickerOptions","shortcuts","text","onClick","picker","start","end","setTime","getTime","$emit","methods","handleDateRangeChange","value","length","format","submitCouponForm","$refs","couponForm","validate","valid","couponData","parseFloat","response","post","status","$message","success","error"],"sources":["src/views/admin/AddCoupon.vue"],"sourcesContent":["<template>\r\n  <div class=\"create-coupon\">\r\n    <h2>平台发布优惠券</h2>\r\n    <el-form ref=\"couponForm\" :model=\"coupon\" :rules=\"rules\" label-width=\"120px\">\r\n      <!-- 有效期 -->\r\n      <el-form-item label=\"有效期\" prop=\"date_range\">\r\n        <el-date-picker\r\n            v-model=\"coupon.date_range\"\r\n            type=\"datetimerange\"\r\n            :picker-options=\"pickerOptions\"\r\n            range-separator=\"至\"\r\n            start-placeholder=\"开始日期\"\r\n            end-placeholder=\"结束日期\"\r\n            align=\"right\"\r\n            format=\"yyyy-MM-dd HH:mm:ss\"\r\n            value-format=\"yyyy-MM-dd HH:mm:ss\"\r\n\r\n        ></el-date-picker>\r\n      </el-form-item><!-- @change=\"handleDateRangeChange\"-->\r\n\r\n      <!-- 满足金额 -->\r\n      <el-form-item label=\"满足金额\" prop=\"request\">\r\n        <el-input-number v-model=\"coupon.request\" :min=\"0\" :step=\"0.01\" :precision=\"2\" label=\"请输入满足金额\"></el-input-number>\r\n      </el-form-item>\r\n\r\n      <!-- 减免金额 -->\r\n      <el-form-item label=\"减免金额\" prop=\"off\">\r\n        <el-input-number v-model=\"coupon.off\" :min=\"0\" :step=\"0.01\" :precision=\"2\" label=\"请输入减免金额\"></el-input-number>\r\n      </el-form-item>\r\n\r\n      <!-- 发行总量 -->\r\n      <el-form-item label=\"发行总量\" prop=\"total\">\r\n        <el-input-number v-model=\"coupon.total\" :min=\"0\" label=\"请输入发行总量\"></el-input-number>\r\n      </el-form-item>\r\n\r\n      <!-- 领取限制 -->\r\n      <el-form-item label=\"领取限制\" prop=\"claim_limit\">\r\n        <el-input-number v-model=\"coupon.claim_limit\" :min=\"0\" label=\"请输入领取限制\"></el-input-number>\r\n      </el-form-item>\r\n\r\n      <!-- 最大未使用数量 -->\r\n      <el-form-item label=\"最大未使用数量\" prop=\"max_unused_count\">\r\n        <el-input-number v-model=\"coupon.max_unused_count\" :min=\"0\" label=\"请输入最大未使用数量\"></el-input-number>\r\n      </el-form-item>\r\n    </el-form>\r\n\r\n    <span slot=\"footer\" class=\"dialog-footer\">\r\n      <el-button type=\"primary\" @click=\"submitCouponForm\">确 定</el-button>\r\n    </span>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport moment from \"moment\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      coupon: {\r\n        coupon_type: \"platform\",\r\n        start_time: \"\",\r\n        end_time: \"\",\r\n        scope: \"[]\",\r\n        date_range: [new Date(2025, 0, 16, 0, 0), new Date(2025, 1, 6, 0, 0)],\r\n        request: 100.00,\r\n        off: 20.00,\r\n        total: 999999999,\r\n        claim_limit: 5,\r\n        max_unused_count: 3,\r\n        shop_id: null,\r\n      },\r\n      rules: {\r\n        date_range: [{ required: true, message: \"请选择有效期\", trigger: \"change\" }],\r\n        request: [{ required: true, message: \"请输入满足金额\", trigger: \"blur\" }],\r\n        off: [{ required: true, message: \"请输入减免金额\", trigger: \"blur\" }],\r\n        total: [{ required: true, message: \"请输入发行总量\", trigger: \"blur\" }],\r\n        claim_limit: [{ required: true, message: \"请输入领取限制\", trigger: \"blur\" }],\r\n        max_unused_count: [{ required: true, message: \"请输入最大未使用数量\", trigger: \"blur\" }]\r\n      },\r\n      pickerOptions: {\r\n        shortcuts: [\r\n          {\r\n            text: '未来一周',\r\n            onClick(picker) {\r\n              const start = new Date();\r\n              const end = new Date();\r\n              end.setTime(end.getTime() + 3600 * 1000 * 24 * 7);\r\n              picker.$emit('pick', [start, end]);\r\n            }\r\n          },\r\n          {\r\n            text: '未来一个月',\r\n            onClick(picker) {\r\n              const start = new Date();\r\n              const end = new Date();\r\n              end.setTime(end.getTime() + 3600 * 1000 * 24 * 30);\r\n              picker.$emit('pick', [start, end]);\r\n            }\r\n          },\r\n          {\r\n            text: '未来三个月',\r\n            onClick(picker) {\r\n              const start = new Date();\r\n              const end = new Date();\r\n              end.setTime(end.getTime() + 3600 * 1000 * 24 * 90);\r\n              picker.$emit('pick', [start, end]);\r\n            }\r\n          }\r\n        ]\r\n      }\r\n    };\r\n  },\r\n  methods: {\r\n    handleDateRangeChange(value) {\r\n      if (value && value.length === 2) {\r\n        const [start, end] = value;\r\n        this.coupon.date_range = [moment(start).format('yyyy-MM-dd HH:mm:ss'), moment(end).format('yyyy-MM-dd HH:mm:ss')];\r\n      }\r\n    },\r\n    async submitCouponForm() {\r\n      this.$refs.couponForm.validate(async (valid) => {\r\n        if (valid) {\r\n          try {\r\n            // 分解日期范围\r\n            const [start, end] = this.coupon.date_range;\r\n            const couponData = {\r\n              \"coupon_type\": \"platform\",\r\n              \"start_time\": moment(start).format('YYYY-MM-DD HH:mm:ss'),\r\n              \"end_time\": moment(end).format('YYYY-MM-DD HH:mm:ss'),\r\n              \"scope\": \"[]\",\r\n              \"request\": parseFloat(this.coupon.request),\r\n              \"off\": parseFloat(this.coupon.off),\r\n              \"total\": this.coupon.total,\r\n              \"claim_limit\": this.coupon.claim_limit,\r\n              \"max_unused_count\":this.coupon.max_unused_count,\r\n              \"shop_id\":null\r\n            };\r\n\r\n            const response = await axios.post('http://localhost:8081/coupon/create', couponData);\r\n            if (response.status === 200) {\r\n              this.$message.success('优惠券发布成功');\r\n              // 关闭弹窗啥的\r\n              this.$emit('close');\r\n            } else {\r\n              this.$message.error(response.data);\r\n            }\r\n          } catch (error) {\r\n            // console.error('发布优惠券失败:', error);\r\n            this.$message.error(error.response.data);\r\n          }\r\n        } else {\r\n          this.$message.error('表单验证失败，请检查输入');\r\n        }\r\n      });\r\n    },\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.create-coupon {\r\n  width: 100%;\r\n  max-width: 600px;\r\n  margin: 0 auto;\r\n}\r\n\r\n.coupon-form {\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.form-group {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.form-group label {\r\n  display: block;\r\n  font-weight: bold;\r\n  margin-bottom: 5px;\r\n}\r\n\r\ninput, select {\r\n  width: 100%;\r\n  padding: 10px;\r\n  font-size: 14px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 5px;\r\n}\r\n\r\n.submit-button {\r\n  background-color: #4CAF50;\r\n  color: white;\r\n  border: none;\r\n  padding: 10px;\r\n  font-size: 16px;\r\n  cursor: pointer;\r\n  border-radius: 5px;\r\n}\r\n\r\n.submit-button:hover {\r\n  background-color: #45a049;\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}