{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport axios from 'axios';\nexport default {\n  data() {\n    return {\n      shop_id: '',\n      user_id: '',\n      isFavorite: false,\n      isBlocked: false,\n      shop: {},\n      searchKeyword: '',\n      searchType: 'name',\n      // 默认为根据名称搜索\n      searchKeywordNow: '',\n      searchTypeNow: '',\n      // 搜索用\n      categoryMap: {\n        'fresh': '生鲜食品',\n        'snack': '零食小吃',\n        'drink': '酒水饮料',\n        'dry': '干货腌货',\n        'instant': '即食食品',\n        'green': '农产品'\n      },\n      products: [],\n      pageSize: 6,\n      currentPage: 1\n    };\n  },\n  computed: {\n    displayedProducts() {\n      let showproducts = this.filteredProducts();\n      const start = (this.currentPage - 1) * this.pageSize;\n      return showproducts.slice(start, start + this.pageSize);\n    }\n  },\n  async created() {\n    this.user_id = this.$store.getters.userId;\n    this.shop_id = this.$route.params.id;\n    const shopResponse = await axios.post('http://localhost:8081/shop/getById', {\n      id: this.shop_id\n    });\n    if (shopResponse.data != null) {\n      this.shop = shopResponse.data;\n    }\n    const proResponse = await axios.post('http://localhost:8081/product/getAllByShop_id', {\n      id: this.shop_id\n    });\n    if (proResponse.data != null) {\n      this.products = proResponse.data;\n    }\n    for (let p of this.products) {\n      const picResponse = await axios.post('http://localhost:8081/pic/getManyUrl', {\n        id: p.picture_id\n      });\n      if (picResponse.data != null) {\n        p.picture_id = picResponse.data;\n      }\n    }\n    const starResponse = await axios.post('http://localhost:8081/shop/checkRelation', {\n      sid: this.shop_id,\n      uid: this.user_id\n    });\n    if (starResponse.data != null) {\n      let relation = starResponse.data;\n      if (relation === \"black\") {\n        this.isBlocked = true;\n        this.isFavorite = false;\n      } else if (relation === \"star\") {\n        this.isFavorite = true;\n        this.isBlocked = false;\n      } else {\n        this.isFavorite = false;\n        this.isBlocked = false;\n      }\n    }\n  },\n  methods: {\n    // 过滤后的商品列表\n    filteredProducts() {\n      if (this.searchKeywordNow === '' || this.searchTypeNow === '') {\n        return this.products;\n      } else if (this.searchTypeNow === 'name') {\n        return this.products.filter(product => product.name.includes(this.searchKeywordNow));\n      } else {\n        return this.products.filter(product => this.categoryMap[product.category].includes(this.searchKeywordNow));\n      }\n    },\n    goToDetail(product) {\n      this.$router.push({\n        name: 'product',\n        params: {\n          id: product.product_id\n        }\n      });\n    },\n    // 模拟商品搜索功能\n    searchProducts() {\n      this.searchKeywordNow = this.searchKeyword;\n      this.searchTypeNow = this.searchType;\n    },\n    async toggleFavorite() {\n      if (this.isFavorite) {\n        const starResponse = await axios.post('http://localhost:8081/shop/changeRelation', {\n          sid: this.shop_id,\n          uid: this.user_id,\n          relation: \"none\"\n        });\n        if (starResponse.data != null) {\n          this.isFavorite = !this.isFavorite;\n          this.$message.success('已取消收藏');\n        }\n      } else {\n        const starResponse = await axios.post('http://localhost:8081/shop/changeRelation', {\n          sid: this.shop_id,\n          uid: this.user_id,\n          relation: \"star\"\n        });\n        if (starResponse.data != null) {\n          this.isFavorite = !this.isFavorite;\n          this.$message.success('收藏成功');\n        }\n      }\n    },\n    async toggleBlock() {\n      if (this.isBlocked) {\n        const starResponse = await axios.post('http://localhost:8081/shop/changeRelation', {\n          sid: this.shop_id,\n          uid: this.user_id,\n          relation: \"none\"\n        });\n        if (starResponse.data != null) {\n          this.isBlocked = !this.isBlocked;\n          this.$message.success('已取消拉黑');\n        }\n      } else {\n        const starResponse = await axios.post('http://localhost:8081/shop/changeRelation', {\n          sid: this.shop_id,\n          uid: this.user_id,\n          relation: \"black\"\n        });\n        if (starResponse.data != null) {\n          this.isBlocked = !this.isBlocked;\n          this.isFavorite = false;\n          this.$message.success('拉黑成功');\n        }\n      }\n    },\n    changePage(page) {\n      this.currentPage = page;\n    }\n  }\n};","map":{"version":3,"names":["axios","data","shop_id","user_id","isFavorite","isBlocked","shop","searchKeyword","searchType","searchKeywordNow","searchTypeNow","categoryMap","products","pageSize","currentPage","computed","displayedProducts","showproducts","filteredProducts","start","slice","created","$store","getters","userId","$route","params","id","shopResponse","post","proResponse","p","picResponse","picture_id","starResponse","sid","uid","relation","methods","filter","product","name","includes","category","goToDetail","$router","push","product_id","searchProducts","toggleFavorite","$message","success","toggleBlock","changePage","page"],"sources":["src/views/shopmodel/ShopShowView.vue"],"sourcesContent":["<template>\r\n    <div class=\"shop-page\">\r\n      <!-- 左边栏 -->\r\n      <aside class=\"shop-sidebar\">\r\n        <div class=\"shop-info\">\r\n          <!-- 店铺名称 -->\r\n          <h2 class=\"shop-name\">{{ shop.shop_name }}</h2>\r\n          <!-- 店铺等级 -->\r\n          <div class=\"shop-rating\">\r\n            <span v-for=\"star in 5\" :key=\"star\" class=\"star\" :class=\"{ filled: star <= Math.round(shop.level) }\">★</span>\r\n            <span class=\"level-text\">({{ shop.level.toFixed(1) }} 分)</span>\r\n          </div>\r\n          <!-- 所在地 -->\r\n          <div class=\"shop-location\">{{ shop.location }}</div>\r\n          <!-- 店铺描述 -->\r\n          <div class=\"shop-description\">\r\n            <p>{{ shop.shop_description }}</p>\r\n          </div>\r\n          <!-- 收藏/取消收藏 -->\r\n          <el-button\r\n            size=\"mini\"\r\n            type=\"primary\"\r\n            @click=\"toggleFavorite\"\r\n            :disabled=\"this.isBlocked\"\r\n          >\r\n            {{ this.isFavorite ? '取消收藏' : '收藏' }}\r\n          </el-button>\r\n          <!-- 拉黑/取消拉黑 -->\r\n          <el-button\r\n            size=\"mini\"\r\n            type=\"danger\"\r\n            @click=\"toggleBlock\"\r\n          >\r\n            {{ this.isBlocked ? '取消拉黑' : '拉黑' }}\r\n          </el-button>\r\n        </div>\r\n      </aside>\r\n  \r\n      <!-- 页面主体 -->\r\n      <main class=\"shop-main\">\r\n        <!-- 顶部搜索栏 -->\r\n        <div class=\"search-bar\">\r\n            <el-select\r\n                v-model=\"searchType\"\r\n                placeholder=\"请选择搜索方式\"\r\n                style=\"width: 150px; margin-right: 10px;\">\r\n                <el-option label=\"名称\" value=\"name\" />\r\n                <el-option label=\"类别\" value=\"category\" />\r\n            </el-select>\r\n            <!-- 搜索框 -->\r\n            <el-input\r\n                v-model=\"searchKeyword\"\r\n                placeholder=\"请输入商品名称或类别\"\r\n                style=\"width: 200px; margin-right: 10px;\"\r\n            />\r\n    \r\n            <!-- 搜索按钮 -->\r\n            <el-button @click=\"searchProducts\" type=\"primary\">搜索</el-button>\r\n        </div>\r\n  \r\n        <!-- 商品展示区域 -->\r\n        <div class=\"product-grid\">\r\n          <div v-for=\"product in displayedProducts\" :key=\"product.id\" class=\"product-card\">\r\n            <img :src=\"'http://localhost:8081'+product.picture_id[0]\" alt=\"商品图片\" class=\"product-image\" />\r\n            <div class=\"product-info\">\r\n              <div class=\"product-name\">{{ product.name }}</div>\r\n              <div class=\"product-price\">￥{{ product.price }}</div>\r\n              <button class=\"buy-now\" @click=\"goToDetail(product)\">立即购买</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n  \r\n        <!-- 分页器 -->\r\n        <el-pagination\r\n          background\r\n          layout=\"prev, pager, next\"\r\n          :page-size=\"pageSize\"\r\n          :total=\"products.length\"\r\n          @current-change=\"changePage\"\r\n        />\r\n      </main>\r\n    </div>\r\n  </template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nexport default {\r\n  data() {\r\n    return {\r\n      shop_id:'',\r\n      user_id:'',\r\n      isFavorite: false,\r\n      isBlocked: false,\r\n      shop: {},\r\n      searchKeyword: '',\r\n      searchType: 'name',  // 默认为根据名称搜索\r\n      searchKeywordNow:'',\r\n      searchTypeNow: '',  // 搜索用\r\n      categoryMap: {\r\n          'fresh': '生鲜食品',\r\n          'snack': '零食小吃',\r\n          'drink': '酒水饮料',\r\n          'dry': '干货腌货',\r\n          'instant': '即食食品',\r\n          'green': '农产品'\r\n        },\r\n      products: [],\r\n      pageSize: 6,\r\n      currentPage: 1,\r\n    };\r\n  },\r\n  computed: {\r\n    displayedProducts() {\r\n      let showproducts = this.filteredProducts();\r\n      const start = (this.currentPage - 1) * this.pageSize;\r\n      return showproducts.slice(start, start + this.pageSize);\r\n    },\r\n  },\r\n  async created() {\r\n    this.user_id=this.$store.getters.userId;\r\n    this.shop_id = this.$route.params.id;\r\n    const shopResponse = await axios.post('http://localhost:8081/shop/getById', {id:this.shop_id});\r\n    if ( shopResponse.data != null ) {\r\n        this.shop = shopResponse.data;\r\n    }\r\n    const proResponse = await axios.post('http://localhost:8081/product/getAllByShop_id', {id:this.shop_id});\r\n    if ( proResponse.data != null ) {\r\n        this.products = proResponse.data;\r\n    }\r\n    for (let p of this.products) {\r\n        const picResponse = await axios.post('http://localhost:8081/pic/getManyUrl', {id:p.picture_id});\r\n        if ( picResponse.data != null ) {\r\n            p.picture_id = picResponse.data;\r\n        }\r\n    }\r\n    const starResponse = await axios.post('http://localhost:8081/shop/checkRelation', {sid:this.shop_id, uid:this.user_id});\r\n    if ( starResponse.data != null ) {\r\n        let relation = starResponse.data;\r\n        if ( relation === \"black\" ){\r\n            this.isBlocked = true;\r\n            this.isFavorite = false;\r\n        } else if ( relation === \"star\" ) {\r\n            this.isFavorite = true;\r\n            this.isBlocked = false;\r\n        } else {\r\n            this.isFavorite = false;\r\n            this.isBlocked = false;\r\n        }\r\n    }\r\n  },\r\n  methods: {\r\n    // 过滤后的商品列表\r\n    filteredProducts() {\r\n        if (this.searchKeywordNow==='' || this.searchTypeNow===''){\r\n            return this.products;\r\n        }\r\n        else if (this.searchTypeNow==='name') {\r\n            return this.products.filter(product => product.name.includes(this.searchKeywordNow));\r\n        } else {\r\n            \r\n            return this.products.filter(product => this.categoryMap[product.category].includes(this.searchKeywordNow));\r\n        }\r\n    },\r\n    goToDetail(product) {\r\n      this.$router.push({\r\n        name: 'product',\r\n        params: { id: product.product_id },\r\n      });\r\n    },\r\n    // 模拟商品搜索功能\r\n    searchProducts() {\r\n        this.searchKeywordNow = this.searchKeyword;\r\n        this.searchTypeNow = this.searchType;\r\n      },\r\n    async toggleFavorite() {\r\n        if ( this.isFavorite ) {\r\n            const starResponse = await axios.post('http://localhost:8081/shop/changeRelation', {sid:this.shop_id, uid:this.user_id, relation:\"none\"});\r\n            if ( starResponse.data != null ) {\r\n                this.isFavorite = !this.isFavorite;\r\n                this.$message.success('已取消收藏');\r\n            }\r\n        } else {\r\n            const starResponse = await axios.post('http://localhost:8081/shop/changeRelation', {sid:this.shop_id, uid:this.user_id, relation:\"star\"});\r\n            if ( starResponse.data != null ) {\r\n                this.isFavorite = !this.isFavorite;\r\n                this.$message.success('收藏成功');\r\n            }\r\n        }\r\n    },\r\n    async toggleBlock() {\r\n        if ( this.isBlocked ) {\r\n            const starResponse = await axios.post('http://localhost:8081/shop/changeRelation', {sid:this.shop_id, uid:this.user_id, relation:\"none\"});\r\n            if ( starResponse.data != null ) {\r\n                this.isBlocked = !this.isBlocked;\r\n                this.$message.success('已取消拉黑');\r\n            }\r\n        } else {\r\n            const starResponse = await axios.post('http://localhost:8081/shop/changeRelation', {sid:this.shop_id, uid:this.user_id, relation:\"black\"});\r\n            if ( starResponse.data != null ) {\r\n                this.isBlocked = !this.isBlocked;\r\n                this.isFavorite = false;\r\n                this.$message.success('拉黑成功');\r\n            }\r\n        }\r\n    },\r\n    changePage(page) {\r\n      this.currentPage = page;\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.shop-page {\r\n  display: flex;\r\n  padding: 20px;\r\n}\r\n.shop-sidebar {\r\n  width: 25%;\r\n  padding: 20px;\r\n  border-right: 1px solid #eee;\r\n}\r\n.shop-name {\r\n  font-size: 1.5rem;\r\n  font-weight: bold;\r\n  margin-bottom: 10px;\r\n}\r\n.shop-rating {\r\n  margin-bottom: 10px;\r\n}\r\n.star {\r\n  font-size: 1.2rem;\r\n  color: #ddd;\r\n}\r\n.star.filled {\r\n  color: #ffd700;\r\n}\r\n.shop-location {\r\n  color: gray;\r\n  margin-bottom: 10px;\r\n}\r\n.shop-description {\r\n  border: 1px solid #eee;\r\n  padding: 10px;\r\n  margin-bottom: 20px;\r\n}\r\n.shop-main {\r\n  flex: 1;\r\n  padding: 20px;\r\n}\r\n.search-bar {\r\n  display: flex;\r\n  gap: 10px;\r\n  margin-bottom: 20px;\r\n}\r\n.product-grid {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\r\n  gap: 20px;\r\n}\r\n.product-card {\r\n  border: 1px solid #eee;\r\n  padding: 10px;\r\n  text-align: center;\r\n}\r\n.product-image {\r\n  width: 100%;\r\n  height: 150px;\r\n  object-fit: cover;\r\n  margin-bottom: 10px;\r\n}\r\n.product-name {\r\n  font-weight: bold;\r\n  margin-bottom: 5px;\r\n}\r\n.product-price {\r\n  color: #e74c3c;\r\n}\r\n.buy-now {\r\n    background-color: #ff6700;\r\n    color: white;\r\n    border: none;\r\n    padding: 8px 15px;\r\n    border-radius: 4px;\r\n    cursor: pointer;\r\n\r\n    &:hover {\r\n    background-color: #f85000;\r\n    }\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}