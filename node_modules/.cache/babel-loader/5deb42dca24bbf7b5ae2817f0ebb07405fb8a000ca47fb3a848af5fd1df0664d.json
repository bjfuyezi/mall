{"ast":null,"code":"import Vue from 'vue';\nimport Vuex from 'vuex';\nVue.use(Vuex);\nexport default new Vuex.Store({\n  state: {\n    user: JSON.parse(localStorage.getItem('user')) || null,\n    isAuthenticated: !!localStorage.getItem('user')\n  },\n  getters: {\n    isAuthenticated: state => state.isAuthenticated,\n    currentUser: state => state.user,\n    userId: state => state.user ? parseInt(state.user.user_id) : null,\n    username: state => state.user ? state.user.username : null\n  },\n  mutations: {\n    setUser(state, user) {\n      state.user = user;\n      state.isAuthenticated = !!user;\n      if (user) {\n        localStorage.setItem('user', JSON.stringify(user));\n      } else {\n        localStorage.removeItem('user');\n      }\n    }\n  },\n  actions: {\n    async login({\n      commit\n    }, credentials) {\n      try {\n        // 创建登录参数\n        const formData = new FormData();\n        formData.append('username', credentials.username);\n        formData.append('password', credentials.password);\n\n        // 先进行登录验证\n        const loginResponse = await fetch('http://localhost:8081/users/login', {\n          method: 'POST',\n          body: formData\n        });\n        if (!loginResponse.ok) {\n          throw new Error('Login failed');\n        }\n        const loginData = await loginResponse.json();\n        if (loginData.status === 'success' && loginData.userId) {\n          try {\n            // 使用用户ID获取详细信息\n            const detailResponse = await fetch(`http://localhost:8081/users/${loginData.userId}`);\n            if (!detailResponse.ok) {\n              throw new Error('Failed to fetch user details');\n            }\n            const detailData = await detailResponse.json();\n            if (detailData.status === 'success' && detailData.data) {\n              commit('setUser', detailData.data);\n              return true;\n            }\n          } catch (error) {\n            console.error('Error fetching user details:', error);\n            return false;\n          }\n        }\n        return false;\n      } catch (error) {\n        console.error('Login error:', error);\n        return false;\n      }\n    },\n    logout({\n      commit\n    }) {\n      commit('setUser', null);\n    },\n    updateUserProfile({\n      commit,\n      state\n    }, updatedProfile) {\n      const updatedUser = {\n        ...state.user,\n        ...updatedProfile\n      };\n      commit('setUser', updatedUser);\n    }\n  }\n});","map":{"version":3,"names":["Vue","Vuex","use","Store","state","user","JSON","parse","localStorage","getItem","isAuthenticated","getters","currentUser","userId","parseInt","user_id","username","mutations","setUser","setItem","stringify","removeItem","actions","login","commit","credentials","formData","FormData","append","password","loginResponse","fetch","method","body","ok","Error","loginData","json","status","detailResponse","detailData","data","error","console","logout","updateUserProfile","updatedProfile","updatedUser"],"sources":["C:/Users/19851/Desktop/fb/mall/src/store/index.js"],"sourcesContent":["import Vue from 'vue'\r\nimport Vuex from 'vuex'\r\n\r\nVue.use(Vuex)\r\n\r\nexport default new Vuex.Store({\r\n  state: {\r\n    user: JSON.parse(localStorage.getItem('user')) || null,\r\n    isAuthenticated: !!localStorage.getItem('user')\r\n  },\r\n  getters: {\r\n    isAuthenticated: state => state.isAuthenticated,\r\n    currentUser: state => state.user,\r\n    userId: state => state.user ? parseInt(state.user.user_id) : null,\r\n    username: state => state.user ? state.user.username : null\r\n  },\r\n  mutations: {\r\n    setUser(state, user) {\r\n      state.user = user;\r\n      state.isAuthenticated = !!user;\r\n      if (user) {\r\n        localStorage.setItem('user', JSON.stringify(user));\r\n      } else {\r\n        localStorage.removeItem('user');\r\n      }\r\n    }\r\n  },\r\n  actions: {\r\n    async login({ commit }, credentials) {\r\n      try {\r\n        // 创建登录参数\r\n        const formData = new FormData();\r\n        formData.append('username', credentials.username);\r\n        formData.append('password', credentials.password);\r\n\r\n        // 先进行登录验证\r\n        const loginResponse = await fetch('http://localhost:8081/users/login', {\r\n          method: 'POST',\r\n          body: formData\r\n        });\r\n\r\n        if (!loginResponse.ok) {\r\n          throw new Error('Login failed');\r\n        }\r\n\r\n        const loginData = await loginResponse.json();\r\n        \r\n        if (loginData.status === 'success' && loginData.userId) {\r\n          try {\r\n            // 使用用户ID获取详细信息\r\n            const detailResponse = await fetch(`http://localhost:8081/users/${loginData.userId}`);\r\n            \r\n            if (!detailResponse.ok) {\r\n              throw new Error('Failed to fetch user details');\r\n            }\r\n\r\n            const detailData = await detailResponse.json();\r\n            \r\n            if (detailData.status === 'success' && detailData.data) {\r\n              commit('setUser', detailData.data);\r\n              return true;\r\n            }\r\n          } catch (error) {\r\n            console.error('Error fetching user details:', error);\r\n            return false;\r\n          }\r\n        }\r\n        return false;\r\n      } catch (error) {\r\n        console.error('Login error:', error);\r\n        return false;\r\n      }\r\n    },\r\n    logout({ commit }) {\r\n      commit('setUser', null);\r\n    },\r\n    updateUserProfile({ commit, state }, updatedProfile) {\r\n      const updatedUser = { ...state.user, ...updatedProfile };\r\n      commit('setUser', updatedUser);\r\n    }\r\n  }\r\n})\r\n"],"mappings":"AAAA,OAAOA,GAAG,MAAM,KAAK;AACrB,OAAOC,IAAI,MAAM,MAAM;AAEvBD,GAAG,CAACE,GAAG,CAACD,IAAI,CAAC;AAEb,eAAe,IAAIA,IAAI,CAACE,KAAK,CAAC;EAC5BC,KAAK,EAAE;IACLC,IAAI,EAAEC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC,IAAI,IAAI;IACtDC,eAAe,EAAE,CAAC,CAACF,YAAY,CAACC,OAAO,CAAC,MAAM;EAChD,CAAC;EACDE,OAAO,EAAE;IACPD,eAAe,EAAEN,KAAK,IAAIA,KAAK,CAACM,eAAe;IAC/CE,WAAW,EAAER,KAAK,IAAIA,KAAK,CAACC,IAAI;IAChCQ,MAAM,EAAET,KAAK,IAAIA,KAAK,CAACC,IAAI,GAAGS,QAAQ,CAACV,KAAK,CAACC,IAAI,CAACU,OAAO,CAAC,GAAG,IAAI;IACjEC,QAAQ,EAAEZ,KAAK,IAAIA,KAAK,CAACC,IAAI,GAAGD,KAAK,CAACC,IAAI,CAACW,QAAQ,GAAG;EACxD,CAAC;EACDC,SAAS,EAAE;IACTC,OAAOA,CAACd,KAAK,EAAEC,IAAI,EAAE;MACnBD,KAAK,CAACC,IAAI,GAAGA,IAAI;MACjBD,KAAK,CAACM,eAAe,GAAG,CAAC,CAACL,IAAI;MAC9B,IAAIA,IAAI,EAAE;QACRG,YAAY,CAACW,OAAO,CAAC,MAAM,EAAEb,IAAI,CAACc,SAAS,CAACf,IAAI,CAAC,CAAC;MACpD,CAAC,MAAM;QACLG,YAAY,CAACa,UAAU,CAAC,MAAM,CAAC;MACjC;IACF;EACF,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,KAAKA,CAAC;MAAEC;IAAO,CAAC,EAAEC,WAAW,EAAE;MACnC,IAAI;QACF;QACA,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;QAC/BD,QAAQ,CAACE,MAAM,CAAC,UAAU,EAAEH,WAAW,CAACT,QAAQ,CAAC;QACjDU,QAAQ,CAACE,MAAM,CAAC,UAAU,EAAEH,WAAW,CAACI,QAAQ,CAAC;;QAEjD;QACA,MAAMC,aAAa,GAAG,MAAMC,KAAK,CAAC,mCAAmC,EAAE;UACrEC,MAAM,EAAE,MAAM;UACdC,IAAI,EAAEP;QACR,CAAC,CAAC;QAEF,IAAI,CAACI,aAAa,CAACI,EAAE,EAAE;UACrB,MAAM,IAAIC,KAAK,CAAC,cAAc,CAAC;QACjC;QAEA,MAAMC,SAAS,GAAG,MAAMN,aAAa,CAACO,IAAI,CAAC,CAAC;QAE5C,IAAID,SAAS,CAACE,MAAM,KAAK,SAAS,IAAIF,SAAS,CAACvB,MAAM,EAAE;UACtD,IAAI;YACF;YACA,MAAM0B,cAAc,GAAG,MAAMR,KAAK,CAAC,+BAA+BK,SAAS,CAACvB,MAAM,EAAE,CAAC;YAErF,IAAI,CAAC0B,cAAc,CAACL,EAAE,EAAE;cACtB,MAAM,IAAIC,KAAK,CAAC,8BAA8B,CAAC;YACjD;YAEA,MAAMK,UAAU,GAAG,MAAMD,cAAc,CAACF,IAAI,CAAC,CAAC;YAE9C,IAAIG,UAAU,CAACF,MAAM,KAAK,SAAS,IAAIE,UAAU,CAACC,IAAI,EAAE;cACtDjB,MAAM,CAAC,SAAS,EAAEgB,UAAU,CAACC,IAAI,CAAC;cAClC,OAAO,IAAI;YACb;UACF,CAAC,CAAC,OAAOC,KAAK,EAAE;YACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;YACpD,OAAO,KAAK;UACd;QACF;QACA,OAAO,KAAK;MACd,CAAC,CAAC,OAAOA,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;QACpC,OAAO,KAAK;MACd;IACF,CAAC;IACDE,MAAMA,CAAC;MAAEpB;IAAO,CAAC,EAAE;MACjBA,MAAM,CAAC,SAAS,EAAE,IAAI,CAAC;IACzB,CAAC;IACDqB,iBAAiBA,CAAC;MAAErB,MAAM;MAAEpB;IAAM,CAAC,EAAE0C,cAAc,EAAE;MACnD,MAAMC,WAAW,GAAG;QAAE,GAAG3C,KAAK,CAACC,IAAI;QAAE,GAAGyC;MAAe,CAAC;MACxDtB,MAAM,CAAC,SAAS,EAAEuB,WAAW,CAAC;IAChC;EACF;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}